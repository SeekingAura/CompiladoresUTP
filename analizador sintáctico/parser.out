Grammar:

Rule 0     S' -> lola
Rule 1     lola -> modulo
Rule 2     lola -> lola modulo
Rule 3     modulo -> MODULE ID ; declaracionTipoPuntoComa declaracionConstanteCONST declaracionVariableIN declaracionVariableINOUT declaracionVariableOUT declaracionVariableVAR sentenciaSecuenciaBEGIN END ID .
Rule 4     tipoSimple -> ID conjuntoExpresiones
Rule 5     tipoSimple -> tipoBasico
Rule 6     tipoBasico -> OC
Rule 7     tipoBasico -> TS
Rule 8     tipoBasico -> BIT
Rule 9     conjuntoExpresiones -> ( listaExpresiones )
Rule 10    conjuntoExpresiones -> empty
Rule 11    listaExpresiones -> expresion expresionComa
Rule 12    expresionComa -> empty
Rule 13    expresionComa -> expresionComaR
Rule 14    expresionComaR -> , expresion
Rule 15    expresionComaR -> expresionComaR , expresion
Rule 16    tipo -> expresionCorchete tipoSimple
Rule 17    expresionCorchete -> empty
Rule 18    expresionCorchete -> expresionCorcheteR
Rule 19    expresionCorcheteR -> [ expresion ]
Rule 20    expresionCorcheteR -> expresionCorcheteR [ expresion ]
Rule 21    declaracionConstante -> ID DOSPUNTOSIGUAL expresion ;
Rule 22    declaracionVariable -> listaId : tipo ;
Rule 23    listaId -> ID IDComa
Rule 24    IDComa -> empty
Rule 25    IDComa -> IDComaR
Rule 26    IDComaR -> , ID
Rule 27    IDComaR -> IDComaR , ID
Rule 28    selector -> empty
Rule 29    selector -> selectorR
Rule 30    selectorR -> selectorRR
Rule 31    selectorR -> selectorR selectorRR
Rule 32    selectorRR -> [ expresion ]
Rule 33    selectorRR -> . INTEGER
Rule 34    selectorRR -> . ID
Rule 35    factor -> SR ( expresion , expresion )
Rule 36    factor -> LATCH ( expresion , expresion )
Rule 37    factor -> REG ( expresionComaO expresion
Rule 38    factor -> MUX ( expresion , expresion : expresion , expresion , expresion , expresion )
Rule 39    factor -> MUX ( expresion : expresion , expresion )
Rule 40    factor -> ( expresion )
Rule 41    factor -> ~ factor
Rule 42    factor -> INTEGER
Rule 43    factor -> LOGICVALUE
Rule 44    factor -> ID selector
Rule 45    expresionComaO -> empty
Rule 46    expresionComaO -> expresion ,
Rule 47    termino -> factor terminoOperadores
Rule 48    terminoOperadores -> empty
Rule 49    terminoOperadores -> terminoOperadoresR
Rule 50    terminoOperadoresR -> simbolosProd factor
Rule 51    terminoOperadoresR -> terminoOperadoresR simbolosProd factor
Rule 52    simbolosProd -> MOD
Rule 53    simbolosProd -> DIV
Rule 54    simbolosProd -> /
Rule 55    simbolosProd -> *
Rule 56    expresion -> termino terminoMasMenos
Rule 57    terminoMasMenos -> empty
Rule 58    terminoMasMenos -> terminoMasMenosR
Rule 59    terminoMasMenosR -> simbolosMasMenos termino
Rule 60    terminoMasMenosR -> terminoMasMenosR simbolosMasMenos termino
Rule 61    simbolosMasMenos -> -  [precedence=left, level=1]
Rule 62    simbolosMasMenos -> +  [precedence=left, level=1]
Rule 63    asignacion -> ID selector DOSPUNTOSIGUAL condicion | expresion
Rule 64    asignacion -> ID selector DOSPUNTOSIGUAL expresion
Rule 65    condicion -> expresion
Rule 66    relacion -> expresion simbolosRelacion expresion
Rule 67    simbolosRelacion -> MAYORIGUAL
Rule 68    simbolosRelacion -> >
Rule 69    simbolosRelacion -> MENORIGUAL
Rule 70    simbolosRelacion -> <
Rule 71    simbolosRelacion -> #
Rule 72    simbolosRelacion -> =
Rule 73    sentenciaSi -> IF relacion THEN sentenciaSecuencia sentenciaSiSino sentenciaSiEntonces END
Rule 74    sentenciaSiSino -> empty
Rule 75    sentenciaSiSino -> sentenciaSiSinoR
Rule 76    sentenciaSiSinoR -> ELSIF relacion THEN sentenciaSecuencia
Rule 77    sentenciaSiSinoR -> sentenciaSiSinoR ELSIF relacion THEN sentenciaSecuencia
Rule 78    sentenciaSiEntonces -> empty
Rule 79    sentenciaSiEntonces -> ELSE sentenciaSecuencia
Rule 80    sentenciaPara -> FOR ID DOSPUNTOSIGUAL expresion DOBLEPUNTO expresion DO sentenciaSecuencia END
Rule 81    sentencia -> empty
Rule 82    sentencia -> sentenciaPara
Rule 83    sentencia -> sentenciaSi
Rule 84    sentencia -> asignacionUnidad
Rule 85    sentencia -> asignacion
Rule 86    sentenciaSecuencia -> sentencia sentenciaPuntoComa
Rule 87    sentenciaPuntoComa -> empty
Rule 88    sentenciaPuntoComa -> sentenciaPuntoComaR
Rule 89    sentenciaPuntoComaR -> ; sentencia
Rule 90    sentenciaPuntoComaR -> sentenciaPuntoComaR ; sentencia
Rule 91    declaracionTipoPuntoComa -> empty
Rule 92    declaracionTipoPuntoComa -> declaracionTipoPuntoComaR
Rule 93    declaracionTipoPuntoComaR -> declaracionTipo ;
Rule 94    declaracionTipoPuntoComaR -> declaracionTipoPuntoComaR declaracionTipo ;
Rule 95    declaracionConstanteCONST -> empty
Rule 96    declaracionConstanteCONST -> CONST declaracionConstanteRecursivo
Rule 97    declaracionConstanteRecursivo -> empty
Rule 98    declaracionConstanteRecursivo -> declaracionConstanteRecursivoR
Rule 99    declaracionConstanteRecursivoR -> declaracionConstante
Rule 100   declaracionConstanteRecursivoR -> declaracionConstanteRecursivoR declaracionConstante
Rule 101   declaracionVariableIN -> empty
Rule 102   declaracionVariableIN -> IN declaracionVariableRecursivo
Rule 103   declaracionVariableINOUT -> empty
Rule 104   declaracionVariableINOUT -> INOUT declaracionVariableRecursivo
Rule 105   declaracionVariableOUT -> empty
Rule 106   declaracionVariableOUT -> OUT declaracionVariableRecursivo
Rule 107   declaracionVariableVAR -> empty
Rule 108   declaracionVariableVAR -> VAR declaracionVariableRecursivo
Rule 109   sentenciaSecuenciaBEGIN -> empty
Rule 110   sentenciaSecuenciaBEGIN -> BEGIN sentenciaSecuencia
Rule 111   declaracionVariableRecursivo -> empty
Rule 112   declaracionVariableRecursivo -> declaracionVariableRecursivoR
Rule 113   declaracionVariableRecursivoR -> declaracionVariable
Rule 114   declaracionVariableRecursivoR -> declaracionVariableRecursivoR declaracionVariable
Rule 115   tipoFormal -> expresionCorcheteO BIT
Rule 116   expresionCorcheteO -> empty
Rule 117   expresionCorcheteO -> expresionCorcheteOR
Rule 118   expresionCorcheteOR -> [ expresionOpcional ]
Rule 119   expresionCorcheteOR -> expresionCorcheteOR [ expresionOpcional ]
Rule 120   expresionOpcional -> empty
Rule 121   expresionOpcional -> expresion
Rule 122   tipoFormalBus -> expresionCorcheteO OC
Rule 123   tipoFormalBus -> expresionCorcheteO TS
Rule 124   declaracionTipo -> TYPE ID simboloPor listaIdParentesis ; declaracionConstanteCONST tipoFormalIN tipoFormlINOUT declaracionVariableOUT declaracionVariableVAR sentenciaSecuenciaBEGIN END ID
Rule 125   simboloPor -> empty
Rule 126   simboloPor -> *
Rule 127   listaIdParentesis -> empty
Rule 128   listaIdParentesis -> ( listaId )
Rule 129   tipoFormalIN -> empty
Rule 130   tipoFormalIN -> IN tipoFormallistaId
Rule 131   tipoFormallistaId -> empty
Rule 132   tipoFormallistaId -> tipoFormallistaIdR
Rule 133   tipoFormallistaIdR -> listaId : tipoFormal ;
Rule 134   tipoFormallistaIdR -> tipoFormallistaIdR listaId : tipoFormal ;
Rule 135   tipoFormlINOUT -> empty
Rule 136   tipoFormlINOUT -> INOUT tipoFormlBuslistaId
Rule 137   tipoFormlBuslistaId -> empty
Rule 138   tipoFormlBuslistaId -> tipoFormlBuslistaIdR
Rule 139   tipoFormlBuslistaIdR -> listaId : tipoFormalBus ;
Rule 140   tipoFormlBuslistaIdR -> tipoFormlBuslistaIdR listaId : tipoFormalBus ;
Rule 141   asignacionUnidad -> ID selector error listaExpresiones )
Rule 142   asignacionUnidad -> ID selector ( listaExpresiones )
Rule 143   empty -> <empty>

Terminals, with rules where they appear:

#                    : 71
(                    : 9 35 36 37 38 39 40 128 142
)                    : 9 35 36 38 39 40 128 141 142
*                    : 55 126
+                    : 62
,                    : 14 15 26 27 35 36 38 38 38 38 39 46
-                    : 61
.                    : 3 33 34
/                    : 54
:                    : 22 38 39 133 134 139 140
;                    : 3 21 22 89 90 93 94 124 133 134 139 140
<                    : 70
=                    : 72
>                    : 68
BEGIN                : 110
BIT                  : 8 115
CONST                : 96
DIV                  : 53
DO                   : 80
DOBLEPUNTO           : 80
DOSPUNTOSIGUAL       : 21 63 64 80
ELSE                 : 79
ELSIF                : 76 77
END                  : 3 73 80 124
FOR                  : 80
ID                   : 3 3 4 21 23 26 27 34 44 63 64 80 124 124 141 142
IF                   : 73
IN                   : 102 130
INOUT                : 104 136
INTEGER              : 33 42
LATCH                : 36
LOGICVALUE           : 43
MAYORIGUAL           : 67
MENORIGUAL           : 69
MOD                  : 52
MODULE               : 3
MUX                  : 38 39
OC                   : 6 122
OUT                  : 106
REG                  : 37
SR                   : 35
THEN                 : 73 76 77
TS                   : 7 123
TYPE                 : 124
VAR                  : 108
[                    : 19 20 32 118 119
]                    : 19 20 32 118 119
error                : 141
|                    : 63
~                    : 41

Nonterminals, with rules where they appear:

IDComa               : 23
IDComaR              : 25 27
asignacion           : 85
asignacionUnidad     : 84
condicion            : 63
conjuntoExpresiones  : 4
declaracionConstante : 99 100
declaracionConstanteCONST : 3 124
declaracionConstanteRecursivo : 96
declaracionConstanteRecursivoR : 98 100
declaracionTipo      : 93 94
declaracionTipoPuntoComa : 3
declaracionTipoPuntoComaR : 92 94
declaracionVariable  : 113 114
declaracionVariableIN : 3
declaracionVariableINOUT : 3
declaracionVariableOUT : 3 124
declaracionVariableRecursivo : 102 104 106 108
declaracionVariableRecursivoR : 112 114
declaracionVariableVAR : 3 124
empty                : 10 12 17 24 28 45 48 57 74 78 81 87 91 95 97 101 103 105 107 109 111 116 120 125 127 129 131 135 137
expresion            : 11 14 15 19 20 21 32 35 35 36 36 37 38 38 38 38 38 38 39 39 39 40 46 63 64 65 66 66 80 80 121
expresionComa        : 11
expresionComaO       : 37
expresionComaR       : 13 15
expresionCorchete    : 16
expresionCorcheteO   : 115 122 123
expresionCorcheteOR  : 117 119
expresionCorcheteR   : 18 20
expresionOpcional    : 118 119
factor               : 41 47 50 51
listaExpresiones     : 9 141 142
listaId              : 22 128 133 134 139 140
listaIdParentesis    : 124
lola                 : 2 0
modulo               : 1 2
relacion             : 73 76 77
selector             : 44 63 64 141 142
selectorR            : 29 31
selectorRR           : 30 31
sentencia            : 86 89 90
sentenciaPara        : 82
sentenciaPuntoComa   : 86
sentenciaPuntoComaR  : 88 90
sentenciaSecuencia   : 73 76 77 79 80 110
sentenciaSecuenciaBEGIN : 3 124
sentenciaSi          : 83
sentenciaSiEntonces  : 73
sentenciaSiSino      : 73
sentenciaSiSinoR     : 75 77
simboloPor           : 124
simbolosMasMenos     : 59 60
simbolosProd         : 50 51
simbolosRelacion     : 66
termino              : 56 59 60
terminoMasMenos      : 56
terminoMasMenosR     : 58 60
terminoOperadores    : 47
terminoOperadoresR   : 49 51
tipo                 : 22
tipoBasico           : 5
tipoFormal           : 133 134
tipoFormalBus        : 139 140
tipoFormalIN         : 124
tipoFormallistaId    : 130
tipoFormallistaIdR   : 132 134
tipoFormlBuslistaId  : 136
tipoFormlBuslistaIdR : 138 140
tipoFormlINOUT       : 124
tipoSimple           : 16


state 0

    (0) S' -> . lola
    (1) lola -> . modulo
    (2) lola -> . lola modulo
    (3) modulo -> . MODULE ID ; declaracionTipoPuntoComa declaracionConstanteCONST declaracionVariableIN declaracionVariableINOUT declaracionVariableOUT declaracionVariableVAR sentenciaSecuenciaBEGIN END ID .
    MODULE          shift and go to state 3

    lola                           shift and go to state 1
    modulo                         shift and go to state 2

state 1

    (0) S' -> lola .
    (2) lola -> lola . modulo
    (3) modulo -> . MODULE ID ; declaracionTipoPuntoComa declaracionConstanteCONST declaracionVariableIN declaracionVariableINOUT declaracionVariableOUT declaracionVariableVAR sentenciaSecuenciaBEGIN END ID .
    MODULE          shift and go to state 3

    modulo                         shift and go to state 4

state 2

    (1) lola -> modulo .
    MODULE          reduce using rule 1 (lola -> modulo .)
    $end            reduce using rule 1 (lola -> modulo .)


state 3

    (3) modulo -> MODULE . ID ; declaracionTipoPuntoComa declaracionConstanteCONST declaracionVariableIN declaracionVariableINOUT declaracionVariableOUT declaracionVariableVAR sentenciaSecuenciaBEGIN END ID .
    ID              shift and go to state 5


state 4

    (2) lola -> lola modulo .
    MODULE          reduce using rule 2 (lola -> lola modulo .)
    $end            reduce using rule 2 (lola -> lola modulo .)


state 5

    (3) modulo -> MODULE ID . ; declaracionTipoPuntoComa declaracionConstanteCONST declaracionVariableIN declaracionVariableINOUT declaracionVariableOUT declaracionVariableVAR sentenciaSecuenciaBEGIN END ID .
    ;               shift and go to state 6


state 6

    (3) modulo -> MODULE ID ; . declaracionTipoPuntoComa declaracionConstanteCONST declaracionVariableIN declaracionVariableINOUT declaracionVariableOUT declaracionVariableVAR sentenciaSecuenciaBEGIN END ID .
    (91) declaracionTipoPuntoComa -> . empty
    (92) declaracionTipoPuntoComa -> . declaracionTipoPuntoComaR
    (143) empty -> .
    (93) declaracionTipoPuntoComaR -> . declaracionTipo ;
    (94) declaracionTipoPuntoComaR -> . declaracionTipoPuntoComaR declaracionTipo ;
    (124) declaracionTipo -> . TYPE ID simboloPor listaIdParentesis ; declaracionConstanteCONST tipoFormalIN tipoFormlINOUT declaracionVariableOUT declaracionVariableVAR sentenciaSecuenciaBEGIN END ID
    CONST           reduce using rule 143 (empty -> .)
    IN              reduce using rule 143 (empty -> .)
    INOUT           reduce using rule 143 (empty -> .)
    OUT             reduce using rule 143 (empty -> .)
    VAR             reduce using rule 143 (empty -> .)
    BEGIN           reduce using rule 143 (empty -> .)
    END             reduce using rule 143 (empty -> .)
    TYPE            shift and go to state 11

    declaracionTipoPuntoComa       shift and go to state 7
    empty                          shift and go to state 8
    declaracionTipoPuntoComaR      shift and go to state 9
    declaracionTipo                shift and go to state 10

state 7

    (3) modulo -> MODULE ID ; declaracionTipoPuntoComa . declaracionConstanteCONST declaracionVariableIN declaracionVariableINOUT declaracionVariableOUT declaracionVariableVAR sentenciaSecuenciaBEGIN END ID .
    (95) declaracionConstanteCONST -> . empty
    (96) declaracionConstanteCONST -> . CONST declaracionConstanteRecursivo
    (143) empty -> .
    CONST           shift and go to state 14
    IN              reduce using rule 143 (empty -> .)
    INOUT           reduce using rule 143 (empty -> .)
    OUT             reduce using rule 143 (empty -> .)
    VAR             reduce using rule 143 (empty -> .)
    BEGIN           reduce using rule 143 (empty -> .)
    END             reduce using rule 143 (empty -> .)

    declaracionConstanteCONST      shift and go to state 12
    empty                          shift and go to state 13

state 8

    (91) declaracionTipoPuntoComa -> empty .
    CONST           reduce using rule 91 (declaracionTipoPuntoComa -> empty .)
    IN              reduce using rule 91 (declaracionTipoPuntoComa -> empty .)
    INOUT           reduce using rule 91 (declaracionTipoPuntoComa -> empty .)
    OUT             reduce using rule 91 (declaracionTipoPuntoComa -> empty .)
    VAR             reduce using rule 91 (declaracionTipoPuntoComa -> empty .)
    BEGIN           reduce using rule 91 (declaracionTipoPuntoComa -> empty .)
    END             reduce using rule 91 (declaracionTipoPuntoComa -> empty .)


state 9

    (92) declaracionTipoPuntoComa -> declaracionTipoPuntoComaR .
    (94) declaracionTipoPuntoComaR -> declaracionTipoPuntoComaR . declaracionTipo ;
    (124) declaracionTipo -> . TYPE ID simboloPor listaIdParentesis ; declaracionConstanteCONST tipoFormalIN tipoFormlINOUT declaracionVariableOUT declaracionVariableVAR sentenciaSecuenciaBEGIN END ID
    CONST           reduce using rule 92 (declaracionTipoPuntoComa -> declaracionTipoPuntoComaR .)
    IN              reduce using rule 92 (declaracionTipoPuntoComa -> declaracionTipoPuntoComaR .)
    INOUT           reduce using rule 92 (declaracionTipoPuntoComa -> declaracionTipoPuntoComaR .)
    OUT             reduce using rule 92 (declaracionTipoPuntoComa -> declaracionTipoPuntoComaR .)
    VAR             reduce using rule 92 (declaracionTipoPuntoComa -> declaracionTipoPuntoComaR .)
    BEGIN           reduce using rule 92 (declaracionTipoPuntoComa -> declaracionTipoPuntoComaR .)
    END             reduce using rule 92 (declaracionTipoPuntoComa -> declaracionTipoPuntoComaR .)
    TYPE            shift and go to state 11

    declaracionTipo                shift and go to state 15

state 10

    (93) declaracionTipoPuntoComaR -> declaracionTipo . ;
    ;               shift and go to state 16


state 11

    (124) declaracionTipo -> TYPE . ID simboloPor listaIdParentesis ; declaracionConstanteCONST tipoFormalIN tipoFormlINOUT declaracionVariableOUT declaracionVariableVAR sentenciaSecuenciaBEGIN END ID
    ID              shift and go to state 17


state 12

    (3) modulo -> MODULE ID ; declaracionTipoPuntoComa declaracionConstanteCONST . declaracionVariableIN declaracionVariableINOUT declaracionVariableOUT declaracionVariableVAR sentenciaSecuenciaBEGIN END ID .
    (101) declaracionVariableIN -> . empty
    (102) declaracionVariableIN -> . IN declaracionVariableRecursivo
    (143) empty -> .
    IN              shift and go to state 20
    INOUT           reduce using rule 143 (empty -> .)
    OUT             reduce using rule 143 (empty -> .)
    VAR             reduce using rule 143 (empty -> .)
    BEGIN           reduce using rule 143 (empty -> .)
    END             reduce using rule 143 (empty -> .)

    declaracionVariableIN          shift and go to state 18
    empty                          shift and go to state 19

state 13

    (95) declaracionConstanteCONST -> empty .
    IN              reduce using rule 95 (declaracionConstanteCONST -> empty .)
    INOUT           reduce using rule 95 (declaracionConstanteCONST -> empty .)
    OUT             reduce using rule 95 (declaracionConstanteCONST -> empty .)
    VAR             reduce using rule 95 (declaracionConstanteCONST -> empty .)
    BEGIN           reduce using rule 95 (declaracionConstanteCONST -> empty .)
    END             reduce using rule 95 (declaracionConstanteCONST -> empty .)


state 14

    (96) declaracionConstanteCONST -> CONST . declaracionConstanteRecursivo
    (97) declaracionConstanteRecursivo -> . empty
    (98) declaracionConstanteRecursivo -> . declaracionConstanteRecursivoR
    (143) empty -> .
    (99) declaracionConstanteRecursivoR -> . declaracionConstante
    (100) declaracionConstanteRecursivoR -> . declaracionConstanteRecursivoR declaracionConstante
    (21) declaracionConstante -> . ID DOSPUNTOSIGUAL expresion ;
    IN              reduce using rule 143 (empty -> .)
    INOUT           reduce using rule 143 (empty -> .)
    OUT             reduce using rule 143 (empty -> .)
    VAR             reduce using rule 143 (empty -> .)
    BEGIN           reduce using rule 143 (empty -> .)
    END             reduce using rule 143 (empty -> .)
    ID              shift and go to state 25

    declaracionConstanteRecursivo  shift and go to state 21
    empty                          shift and go to state 22
    declaracionConstanteRecursivoR shift and go to state 23
    declaracionConstante           shift and go to state 24

state 15

    (94) declaracionTipoPuntoComaR -> declaracionTipoPuntoComaR declaracionTipo . ;
    ;               shift and go to state 26


state 16

    (93) declaracionTipoPuntoComaR -> declaracionTipo ; .
    TYPE            reduce using rule 93 (declaracionTipoPuntoComaR -> declaracionTipo ; .)
    CONST           reduce using rule 93 (declaracionTipoPuntoComaR -> declaracionTipo ; .)
    IN              reduce using rule 93 (declaracionTipoPuntoComaR -> declaracionTipo ; .)
    INOUT           reduce using rule 93 (declaracionTipoPuntoComaR -> declaracionTipo ; .)
    OUT             reduce using rule 93 (declaracionTipoPuntoComaR -> declaracionTipo ; .)
    VAR             reduce using rule 93 (declaracionTipoPuntoComaR -> declaracionTipo ; .)
    BEGIN           reduce using rule 93 (declaracionTipoPuntoComaR -> declaracionTipo ; .)
    END             reduce using rule 93 (declaracionTipoPuntoComaR -> declaracionTipo ; .)


state 17

    (124) declaracionTipo -> TYPE ID . simboloPor listaIdParentesis ; declaracionConstanteCONST tipoFormalIN tipoFormlINOUT declaracionVariableOUT declaracionVariableVAR sentenciaSecuenciaBEGIN END ID
    (125) simboloPor -> . empty
    (126) simboloPor -> . *
    (143) empty -> .
    *               shift and go to state 29
    (               reduce using rule 143 (empty -> .)
    ;               reduce using rule 143 (empty -> .)

    simboloPor                     shift and go to state 27
    empty                          shift and go to state 28

state 18

    (3) modulo -> MODULE ID ; declaracionTipoPuntoComa declaracionConstanteCONST declaracionVariableIN . declaracionVariableINOUT declaracionVariableOUT declaracionVariableVAR sentenciaSecuenciaBEGIN END ID .
    (103) declaracionVariableINOUT -> . empty
    (104) declaracionVariableINOUT -> . INOUT declaracionVariableRecursivo
    (143) empty -> .
    INOUT           shift and go to state 32
    OUT             reduce using rule 143 (empty -> .)
    VAR             reduce using rule 143 (empty -> .)
    BEGIN           reduce using rule 143 (empty -> .)
    END             reduce using rule 143 (empty -> .)

    declaracionVariableINOUT       shift and go to state 30
    empty                          shift and go to state 31

state 19

    (101) declaracionVariableIN -> empty .
    INOUT           reduce using rule 101 (declaracionVariableIN -> empty .)
    OUT             reduce using rule 101 (declaracionVariableIN -> empty .)
    VAR             reduce using rule 101 (declaracionVariableIN -> empty .)
    BEGIN           reduce using rule 101 (declaracionVariableIN -> empty .)
    END             reduce using rule 101 (declaracionVariableIN -> empty .)


state 20

    (102) declaracionVariableIN -> IN . declaracionVariableRecursivo
    (111) declaracionVariableRecursivo -> . empty
    (112) declaracionVariableRecursivo -> . declaracionVariableRecursivoR
    (143) empty -> .
    (113) declaracionVariableRecursivoR -> . declaracionVariable
    (114) declaracionVariableRecursivoR -> . declaracionVariableRecursivoR declaracionVariable
    (22) declaracionVariable -> . listaId : tipo ;
    (23) listaId -> . ID IDComa
    INOUT           reduce using rule 143 (empty -> .)
    OUT             reduce using rule 143 (empty -> .)
    VAR             reduce using rule 143 (empty -> .)
    BEGIN           reduce using rule 143 (empty -> .)
    END             reduce using rule 143 (empty -> .)
    ID              shift and go to state 38

    declaracionVariableRecursivo   shift and go to state 33
    empty                          shift and go to state 34
    declaracionVariableRecursivoR  shift and go to state 35
    declaracionVariable            shift and go to state 36
    listaId                        shift and go to state 37

state 21

    (96) declaracionConstanteCONST -> CONST declaracionConstanteRecursivo .
    IN              reduce using rule 96 (declaracionConstanteCONST -> CONST declaracionConstanteRecursivo .)
    INOUT           reduce using rule 96 (declaracionConstanteCONST -> CONST declaracionConstanteRecursivo .)
    OUT             reduce using rule 96 (declaracionConstanteCONST -> CONST declaracionConstanteRecursivo .)
    VAR             reduce using rule 96 (declaracionConstanteCONST -> CONST declaracionConstanteRecursivo .)
    BEGIN           reduce using rule 96 (declaracionConstanteCONST -> CONST declaracionConstanteRecursivo .)
    END             reduce using rule 96 (declaracionConstanteCONST -> CONST declaracionConstanteRecursivo .)


state 22

    (97) declaracionConstanteRecursivo -> empty .
    IN              reduce using rule 97 (declaracionConstanteRecursivo -> empty .)
    INOUT           reduce using rule 97 (declaracionConstanteRecursivo -> empty .)
    OUT             reduce using rule 97 (declaracionConstanteRecursivo -> empty .)
    VAR             reduce using rule 97 (declaracionConstanteRecursivo -> empty .)
    BEGIN           reduce using rule 97 (declaracionConstanteRecursivo -> empty .)
    END             reduce using rule 97 (declaracionConstanteRecursivo -> empty .)


state 23

    (98) declaracionConstanteRecursivo -> declaracionConstanteRecursivoR .
    (100) declaracionConstanteRecursivoR -> declaracionConstanteRecursivoR . declaracionConstante
    (21) declaracionConstante -> . ID DOSPUNTOSIGUAL expresion ;
    IN              reduce using rule 98 (declaracionConstanteRecursivo -> declaracionConstanteRecursivoR .)
    INOUT           reduce using rule 98 (declaracionConstanteRecursivo -> declaracionConstanteRecursivoR .)
    OUT             reduce using rule 98 (declaracionConstanteRecursivo -> declaracionConstanteRecursivoR .)
    VAR             reduce using rule 98 (declaracionConstanteRecursivo -> declaracionConstanteRecursivoR .)
    BEGIN           reduce using rule 98 (declaracionConstanteRecursivo -> declaracionConstanteRecursivoR .)
    END             reduce using rule 98 (declaracionConstanteRecursivo -> declaracionConstanteRecursivoR .)
    ID              shift and go to state 25

    declaracionConstante           shift and go to state 39

state 24

    (99) declaracionConstanteRecursivoR -> declaracionConstante .
    ID              reduce using rule 99 (declaracionConstanteRecursivoR -> declaracionConstante .)
    IN              reduce using rule 99 (declaracionConstanteRecursivoR -> declaracionConstante .)
    INOUT           reduce using rule 99 (declaracionConstanteRecursivoR -> declaracionConstante .)
    OUT             reduce using rule 99 (declaracionConstanteRecursivoR -> declaracionConstante .)
    VAR             reduce using rule 99 (declaracionConstanteRecursivoR -> declaracionConstante .)
    BEGIN           reduce using rule 99 (declaracionConstanteRecursivoR -> declaracionConstante .)
    END             reduce using rule 99 (declaracionConstanteRecursivoR -> declaracionConstante .)


state 25

    (21) declaracionConstante -> ID . DOSPUNTOSIGUAL expresion ;
    DOSPUNTOSIGUAL  shift and go to state 40


state 26

    (94) declaracionTipoPuntoComaR -> declaracionTipoPuntoComaR declaracionTipo ; .
    TYPE            reduce using rule 94 (declaracionTipoPuntoComaR -> declaracionTipoPuntoComaR declaracionTipo ; .)
    CONST           reduce using rule 94 (declaracionTipoPuntoComaR -> declaracionTipoPuntoComaR declaracionTipo ; .)
    IN              reduce using rule 94 (declaracionTipoPuntoComaR -> declaracionTipoPuntoComaR declaracionTipo ; .)
    INOUT           reduce using rule 94 (declaracionTipoPuntoComaR -> declaracionTipoPuntoComaR declaracionTipo ; .)
    OUT             reduce using rule 94 (declaracionTipoPuntoComaR -> declaracionTipoPuntoComaR declaracionTipo ; .)
    VAR             reduce using rule 94 (declaracionTipoPuntoComaR -> declaracionTipoPuntoComaR declaracionTipo ; .)
    BEGIN           reduce using rule 94 (declaracionTipoPuntoComaR -> declaracionTipoPuntoComaR declaracionTipo ; .)
    END             reduce using rule 94 (declaracionTipoPuntoComaR -> declaracionTipoPuntoComaR declaracionTipo ; .)


state 27

    (124) declaracionTipo -> TYPE ID simboloPor . listaIdParentesis ; declaracionConstanteCONST tipoFormalIN tipoFormlINOUT declaracionVariableOUT declaracionVariableVAR sentenciaSecuenciaBEGIN END ID
    (127) listaIdParentesis -> . empty
    (128) listaIdParentesis -> . ( listaId )
    (143) empty -> .
    (               shift and go to state 43
    ;               reduce using rule 143 (empty -> .)

    listaIdParentesis              shift and go to state 41
    empty                          shift and go to state 42

state 28

    (125) simboloPor -> empty .
    (               reduce using rule 125 (simboloPor -> empty .)
    ;               reduce using rule 125 (simboloPor -> empty .)


state 29

    (126) simboloPor -> * .
    (               reduce using rule 126 (simboloPor -> * .)
    ;               reduce using rule 126 (simboloPor -> * .)


state 30

    (3) modulo -> MODULE ID ; declaracionTipoPuntoComa declaracionConstanteCONST declaracionVariableIN declaracionVariableINOUT . declaracionVariableOUT declaracionVariableVAR sentenciaSecuenciaBEGIN END ID .
    (105) declaracionVariableOUT -> . empty
    (106) declaracionVariableOUT -> . OUT declaracionVariableRecursivo
    (143) empty -> .
    OUT             shift and go to state 46
    VAR             reduce using rule 143 (empty -> .)
    BEGIN           reduce using rule 143 (empty -> .)
    END             reduce using rule 143 (empty -> .)

    declaracionVariableOUT         shift and go to state 44
    empty                          shift and go to state 45

state 31

    (103) declaracionVariableINOUT -> empty .
    OUT             reduce using rule 103 (declaracionVariableINOUT -> empty .)
    VAR             reduce using rule 103 (declaracionVariableINOUT -> empty .)
    BEGIN           reduce using rule 103 (declaracionVariableINOUT -> empty .)
    END             reduce using rule 103 (declaracionVariableINOUT -> empty .)


state 32

    (104) declaracionVariableINOUT -> INOUT . declaracionVariableRecursivo
    (111) declaracionVariableRecursivo -> . empty
    (112) declaracionVariableRecursivo -> . declaracionVariableRecursivoR
    (143) empty -> .
    (113) declaracionVariableRecursivoR -> . declaracionVariable
    (114) declaracionVariableRecursivoR -> . declaracionVariableRecursivoR declaracionVariable
    (22) declaracionVariable -> . listaId : tipo ;
    (23) listaId -> . ID IDComa
    OUT             reduce using rule 143 (empty -> .)
    VAR             reduce using rule 143 (empty -> .)
    BEGIN           reduce using rule 143 (empty -> .)
    END             reduce using rule 143 (empty -> .)
    ID              shift and go to state 38

    declaracionVariableRecursivo   shift and go to state 47
    empty                          shift and go to state 34
    declaracionVariableRecursivoR  shift and go to state 35
    declaracionVariable            shift and go to state 36
    listaId                        shift and go to state 37

state 33

    (102) declaracionVariableIN -> IN declaracionVariableRecursivo .
    INOUT           reduce using rule 102 (declaracionVariableIN -> IN declaracionVariableRecursivo .)
    OUT             reduce using rule 102 (declaracionVariableIN -> IN declaracionVariableRecursivo .)
    VAR             reduce using rule 102 (declaracionVariableIN -> IN declaracionVariableRecursivo .)
    BEGIN           reduce using rule 102 (declaracionVariableIN -> IN declaracionVariableRecursivo .)
    END             reduce using rule 102 (declaracionVariableIN -> IN declaracionVariableRecursivo .)


state 34

    (111) declaracionVariableRecursivo -> empty .
    INOUT           reduce using rule 111 (declaracionVariableRecursivo -> empty .)
    OUT             reduce using rule 111 (declaracionVariableRecursivo -> empty .)
    VAR             reduce using rule 111 (declaracionVariableRecursivo -> empty .)
    BEGIN           reduce using rule 111 (declaracionVariableRecursivo -> empty .)
    END             reduce using rule 111 (declaracionVariableRecursivo -> empty .)


state 35

    (112) declaracionVariableRecursivo -> declaracionVariableRecursivoR .
    (114) declaracionVariableRecursivoR -> declaracionVariableRecursivoR . declaracionVariable
    (22) declaracionVariable -> . listaId : tipo ;
    (23) listaId -> . ID IDComa
    INOUT           reduce using rule 112 (declaracionVariableRecursivo -> declaracionVariableRecursivoR .)
    OUT             reduce using rule 112 (declaracionVariableRecursivo -> declaracionVariableRecursivoR .)
    VAR             reduce using rule 112 (declaracionVariableRecursivo -> declaracionVariableRecursivoR .)
    BEGIN           reduce using rule 112 (declaracionVariableRecursivo -> declaracionVariableRecursivoR .)
    END             reduce using rule 112 (declaracionVariableRecursivo -> declaracionVariableRecursivoR .)
    ID              shift and go to state 38

    declaracionVariable            shift and go to state 48
    listaId                        shift and go to state 37

state 36

    (113) declaracionVariableRecursivoR -> declaracionVariable .
    ID              reduce using rule 113 (declaracionVariableRecursivoR -> declaracionVariable .)
    INOUT           reduce using rule 113 (declaracionVariableRecursivoR -> declaracionVariable .)
    OUT             reduce using rule 113 (declaracionVariableRecursivoR -> declaracionVariable .)
    VAR             reduce using rule 113 (declaracionVariableRecursivoR -> declaracionVariable .)
    BEGIN           reduce using rule 113 (declaracionVariableRecursivoR -> declaracionVariable .)
    END             reduce using rule 113 (declaracionVariableRecursivoR -> declaracionVariable .)


state 37

    (22) declaracionVariable -> listaId . : tipo ;
    :               shift and go to state 49


state 38

    (23) listaId -> ID . IDComa
    (24) IDComa -> . empty
    (25) IDComa -> . IDComaR
    (143) empty -> .
    (26) IDComaR -> . , ID
    (27) IDComaR -> . IDComaR , ID
    :               reduce using rule 143 (empty -> .)
    )               reduce using rule 143 (empty -> .)
    ,               shift and go to state 53

    IDComa                         shift and go to state 50
    empty                          shift and go to state 51
    IDComaR                        shift and go to state 52

state 39

    (100) declaracionConstanteRecursivoR -> declaracionConstanteRecursivoR declaracionConstante .
    ID              reduce using rule 100 (declaracionConstanteRecursivoR -> declaracionConstanteRecursivoR declaracionConstante .)
    IN              reduce using rule 100 (declaracionConstanteRecursivoR -> declaracionConstanteRecursivoR declaracionConstante .)
    INOUT           reduce using rule 100 (declaracionConstanteRecursivoR -> declaracionConstanteRecursivoR declaracionConstante .)
    OUT             reduce using rule 100 (declaracionConstanteRecursivoR -> declaracionConstanteRecursivoR declaracionConstante .)
    VAR             reduce using rule 100 (declaracionConstanteRecursivoR -> declaracionConstanteRecursivoR declaracionConstante .)
    BEGIN           reduce using rule 100 (declaracionConstanteRecursivoR -> declaracionConstanteRecursivoR declaracionConstante .)
    END             reduce using rule 100 (declaracionConstanteRecursivoR -> declaracionConstanteRecursivoR declaracionConstante .)


state 40

    (21) declaracionConstante -> ID DOSPUNTOSIGUAL . expresion ;
    (56) expresion -> . termino terminoMasMenos
    (47) termino -> . factor terminoOperadores
    (35) factor -> . SR ( expresion , expresion )
    (36) factor -> . LATCH ( expresion , expresion )
    (37) factor -> . REG ( expresionComaO expresion
    (38) factor -> . MUX ( expresion , expresion : expresion , expresion , expresion , expresion )
    (39) factor -> . MUX ( expresion : expresion , expresion )
    (40) factor -> . ( expresion )
    (41) factor -> . ~ factor
    (42) factor -> . INTEGER
    (43) factor -> . LOGICVALUE
    (44) factor -> . ID selector
    SR              shift and go to state 58
    LATCH           shift and go to state 60
    REG             shift and go to state 61
    MUX             shift and go to state 62
    (               shift and go to state 59
    ~               shift and go to state 63
    INTEGER         shift and go to state 64
    LOGICVALUE      shift and go to state 65
    ID              shift and go to state 54

    expresion                      shift and go to state 55
    termino                        shift and go to state 56
    factor                         shift and go to state 57

state 41

    (124) declaracionTipo -> TYPE ID simboloPor listaIdParentesis . ; declaracionConstanteCONST tipoFormalIN tipoFormlINOUT declaracionVariableOUT declaracionVariableVAR sentenciaSecuenciaBEGIN END ID
    ;               shift and go to state 66


state 42

    (127) listaIdParentesis -> empty .
    ;               reduce using rule 127 (listaIdParentesis -> empty .)


state 43

    (128) listaIdParentesis -> ( . listaId )
    (23) listaId -> . ID IDComa
    ID              shift and go to state 38

    listaId                        shift and go to state 67

state 44

    (3) modulo -> MODULE ID ; declaracionTipoPuntoComa declaracionConstanteCONST declaracionVariableIN declaracionVariableINOUT declaracionVariableOUT . declaracionVariableVAR sentenciaSecuenciaBEGIN END ID .
    (107) declaracionVariableVAR -> . empty
    (108) declaracionVariableVAR -> . VAR declaracionVariableRecursivo
    (143) empty -> .
    VAR             shift and go to state 70
    BEGIN           reduce using rule 143 (empty -> .)
    END             reduce using rule 143 (empty -> .)

    declaracionVariableVAR         shift and go to state 68
    empty                          shift and go to state 69

state 45

    (105) declaracionVariableOUT -> empty .
    VAR             reduce using rule 105 (declaracionVariableOUT -> empty .)
    BEGIN           reduce using rule 105 (declaracionVariableOUT -> empty .)
    END             reduce using rule 105 (declaracionVariableOUT -> empty .)


state 46

    (106) declaracionVariableOUT -> OUT . declaracionVariableRecursivo
    (111) declaracionVariableRecursivo -> . empty
    (112) declaracionVariableRecursivo -> . declaracionVariableRecursivoR
    (143) empty -> .
    (113) declaracionVariableRecursivoR -> . declaracionVariable
    (114) declaracionVariableRecursivoR -> . declaracionVariableRecursivoR declaracionVariable
    (22) declaracionVariable -> . listaId : tipo ;
    (23) listaId -> . ID IDComa
    VAR             reduce using rule 143 (empty -> .)
    BEGIN           reduce using rule 143 (empty -> .)
    END             reduce using rule 143 (empty -> .)
    ID              shift and go to state 38

    declaracionVariableRecursivo   shift and go to state 71
    empty                          shift and go to state 34
    declaracionVariableRecursivoR  shift and go to state 35
    declaracionVariable            shift and go to state 36
    listaId                        shift and go to state 37

state 47

    (104) declaracionVariableINOUT -> INOUT declaracionVariableRecursivo .
    OUT             reduce using rule 104 (declaracionVariableINOUT -> INOUT declaracionVariableRecursivo .)
    VAR             reduce using rule 104 (declaracionVariableINOUT -> INOUT declaracionVariableRecursivo .)
    BEGIN           reduce using rule 104 (declaracionVariableINOUT -> INOUT declaracionVariableRecursivo .)
    END             reduce using rule 104 (declaracionVariableINOUT -> INOUT declaracionVariableRecursivo .)


state 48

    (114) declaracionVariableRecursivoR -> declaracionVariableRecursivoR declaracionVariable .
    ID              reduce using rule 114 (declaracionVariableRecursivoR -> declaracionVariableRecursivoR declaracionVariable .)
    INOUT           reduce using rule 114 (declaracionVariableRecursivoR -> declaracionVariableRecursivoR declaracionVariable .)
    OUT             reduce using rule 114 (declaracionVariableRecursivoR -> declaracionVariableRecursivoR declaracionVariable .)
    VAR             reduce using rule 114 (declaracionVariableRecursivoR -> declaracionVariableRecursivoR declaracionVariable .)
    BEGIN           reduce using rule 114 (declaracionVariableRecursivoR -> declaracionVariableRecursivoR declaracionVariable .)
    END             reduce using rule 114 (declaracionVariableRecursivoR -> declaracionVariableRecursivoR declaracionVariable .)


state 49

    (22) declaracionVariable -> listaId : . tipo ;
    (16) tipo -> . expresionCorchete tipoSimple
    (17) expresionCorchete -> . empty
    (18) expresionCorchete -> . expresionCorcheteR
    (143) empty -> .
    (19) expresionCorcheteR -> . [ expresion ]
    (20) expresionCorcheteR -> . expresionCorcheteR [ expresion ]
    ID              reduce using rule 143 (empty -> .)
    OC              reduce using rule 143 (empty -> .)
    TS              reduce using rule 143 (empty -> .)
    BIT             reduce using rule 143 (empty -> .)
    [               shift and go to state 76

    tipo                           shift and go to state 72
    expresionCorchete              shift and go to state 73
    empty                          shift and go to state 74
    expresionCorcheteR             shift and go to state 75

state 50

    (23) listaId -> ID IDComa .
    :               reduce using rule 23 (listaId -> ID IDComa .)
    )               reduce using rule 23 (listaId -> ID IDComa .)


state 51

    (24) IDComa -> empty .
    :               reduce using rule 24 (IDComa -> empty .)
    )               reduce using rule 24 (IDComa -> empty .)


state 52

    (25) IDComa -> IDComaR .
    (27) IDComaR -> IDComaR . , ID
    :               reduce using rule 25 (IDComa -> IDComaR .)
    )               reduce using rule 25 (IDComa -> IDComaR .)
    ,               shift and go to state 77


state 53

    (26) IDComaR -> , . ID
    ID              shift and go to state 78


state 54

    (44) factor -> ID . selector
    (28) selector -> . empty
    (29) selector -> . selectorR
    (143) empty -> .
    (30) selectorR -> . selectorRR
    (31) selectorR -> . selectorR selectorRR
    (32) selectorRR -> . [ expresion ]
    (33) selectorRR -> . . INTEGER
    (34) selectorRR -> . . ID
    MOD             reduce using rule 143 (empty -> .)
    DIV             reduce using rule 143 (empty -> .)
    /               reduce using rule 143 (empty -> .)
    *               reduce using rule 143 (empty -> .)
    -               reduce using rule 143 (empty -> .)
    +               reduce using rule 143 (empty -> .)
    ;               reduce using rule 143 (empty -> .)
    )               reduce using rule 143 (empty -> .)
    ]               reduce using rule 143 (empty -> .)
    ,               reduce using rule 143 (empty -> .)
    :               reduce using rule 143 (empty -> .)
    MAYORIGUAL      reduce using rule 143 (empty -> .)
    >               reduce using rule 143 (empty -> .)
    MENORIGUAL      reduce using rule 143 (empty -> .)
    <               reduce using rule 143 (empty -> .)
    #               reduce using rule 143 (empty -> .)
    =               reduce using rule 143 (empty -> .)
    DOBLEPUNTO      reduce using rule 143 (empty -> .)
    END             reduce using rule 143 (empty -> .)
    ELSIF           reduce using rule 143 (empty -> .)
    ELSE            reduce using rule 143 (empty -> .)
    |               reduce using rule 143 (empty -> .)
    THEN            reduce using rule 143 (empty -> .)
    DO              reduce using rule 143 (empty -> .)
    [               shift and go to state 83
    .               shift and go to state 84

    selector                       shift and go to state 79
    empty                          shift and go to state 80
    selectorR                      shift and go to state 81
    selectorRR                     shift and go to state 82

state 55

    (21) declaracionConstante -> ID DOSPUNTOSIGUAL expresion . ;
    ;               shift and go to state 85


state 56

    (56) expresion -> termino . terminoMasMenos
    (57) terminoMasMenos -> . empty
    (58) terminoMasMenos -> . terminoMasMenosR
    (143) empty -> .
    (59) terminoMasMenosR -> . simbolosMasMenos termino
    (60) terminoMasMenosR -> . terminoMasMenosR simbolosMasMenos termino
    (61) simbolosMasMenos -> . -
    (62) simbolosMasMenos -> . +
  ! shift/reduce conflict for - resolved as shift
  ! shift/reduce conflict for + resolved as shift
    MOD             reduce using rule 143 (empty -> .)
    DIV             reduce using rule 143 (empty -> .)
    /               reduce using rule 143 (empty -> .)
    *               reduce using rule 143 (empty -> .)
    ;               reduce using rule 143 (empty -> .)
    )               reduce using rule 143 (empty -> .)
    ]               reduce using rule 143 (empty -> .)
    ,               reduce using rule 143 (empty -> .)
    :               reduce using rule 143 (empty -> .)
    MAYORIGUAL      reduce using rule 143 (empty -> .)
    >               reduce using rule 143 (empty -> .)
    MENORIGUAL      reduce using rule 143 (empty -> .)
    <               reduce using rule 143 (empty -> .)
    #               reduce using rule 143 (empty -> .)
    =               reduce using rule 143 (empty -> .)
    DOBLEPUNTO      reduce using rule 143 (empty -> .)
    END             reduce using rule 143 (empty -> .)
    ELSIF           reduce using rule 143 (empty -> .)
    ELSE            reduce using rule 143 (empty -> .)
    |               reduce using rule 143 (empty -> .)
    THEN            reduce using rule 143 (empty -> .)
    DO              reduce using rule 143 (empty -> .)
    -               shift and go to state 90
    +               shift and go to state 91

    terminoMasMenos                shift and go to state 86
    empty                          shift and go to state 87
    terminoMasMenosR               shift and go to state 88
    simbolosMasMenos               shift and go to state 89

state 57

    (47) termino -> factor . terminoOperadores
    (48) terminoOperadores -> . empty
    (49) terminoOperadores -> . terminoOperadoresR
    (143) empty -> .
    (50) terminoOperadoresR -> . simbolosProd factor
    (51) terminoOperadoresR -> . terminoOperadoresR simbolosProd factor
    (52) simbolosProd -> . MOD
    (53) simbolosProd -> . DIV
    (54) simbolosProd -> . /
    (55) simbolosProd -> . *
  ! shift/reduce conflict for MOD resolved as shift
  ! shift/reduce conflict for DIV resolved as shift
  ! shift/reduce conflict for / resolved as shift
  ! shift/reduce conflict for * resolved as shift
    -               reduce using rule 143 (empty -> .)
    +               reduce using rule 143 (empty -> .)
    ;               reduce using rule 143 (empty -> .)
    )               reduce using rule 143 (empty -> .)
    ]               reduce using rule 143 (empty -> .)
    ,               reduce using rule 143 (empty -> .)
    :               reduce using rule 143 (empty -> .)
    MAYORIGUAL      reduce using rule 143 (empty -> .)
    >               reduce using rule 143 (empty -> .)
    MENORIGUAL      reduce using rule 143 (empty -> .)
    <               reduce using rule 143 (empty -> .)
    #               reduce using rule 143 (empty -> .)
    =               reduce using rule 143 (empty -> .)
    DOBLEPUNTO      reduce using rule 143 (empty -> .)
    END             reduce using rule 143 (empty -> .)
    ELSIF           reduce using rule 143 (empty -> .)
    ELSE            reduce using rule 143 (empty -> .)
    |               reduce using rule 143 (empty -> .)
    THEN            reduce using rule 143 (empty -> .)
    DO              reduce using rule 143 (empty -> .)
    MOD             shift and go to state 96
    DIV             shift and go to state 97
    /               shift and go to state 98
    *               shift and go to state 99

    terminoOperadores              shift and go to state 92
    empty                          shift and go to state 93
    terminoOperadoresR             shift and go to state 94
    simbolosProd                   shift and go to state 95

state 58

    (35) factor -> SR . ( expresion , expresion )
    (               shift and go to state 100


state 59

    (40) factor -> ( . expresion )
    (56) expresion -> . termino terminoMasMenos
    (47) termino -> . factor terminoOperadores
    (35) factor -> . SR ( expresion , expresion )
    (36) factor -> . LATCH ( expresion , expresion )
    (37) factor -> . REG ( expresionComaO expresion
    (38) factor -> . MUX ( expresion , expresion : expresion , expresion , expresion , expresion )
    (39) factor -> . MUX ( expresion : expresion , expresion )
    (40) factor -> . ( expresion )
    (41) factor -> . ~ factor
    (42) factor -> . INTEGER
    (43) factor -> . LOGICVALUE
    (44) factor -> . ID selector
    SR              shift and go to state 58
    LATCH           shift and go to state 60
    REG             shift and go to state 61
    MUX             shift and go to state 62
    (               shift and go to state 59
    ~               shift and go to state 63
    INTEGER         shift and go to state 64
    LOGICVALUE      shift and go to state 65
    ID              shift and go to state 54

    expresion                      shift and go to state 101
    termino                        shift and go to state 56
    factor                         shift and go to state 57

state 60

    (36) factor -> LATCH . ( expresion , expresion )
    (               shift and go to state 102


state 61

    (37) factor -> REG . ( expresionComaO expresion
    (               shift and go to state 103


state 62

    (38) factor -> MUX . ( expresion , expresion : expresion , expresion , expresion , expresion )
    (39) factor -> MUX . ( expresion : expresion , expresion )
    (               shift and go to state 104


state 63

    (41) factor -> ~ . factor
    (35) factor -> . SR ( expresion , expresion )
    (36) factor -> . LATCH ( expresion , expresion )
    (37) factor -> . REG ( expresionComaO expresion
    (38) factor -> . MUX ( expresion , expresion : expresion , expresion , expresion , expresion )
    (39) factor -> . MUX ( expresion : expresion , expresion )
    (40) factor -> . ( expresion )
    (41) factor -> . ~ factor
    (42) factor -> . INTEGER
    (43) factor -> . LOGICVALUE
    (44) factor -> . ID selector
    SR              shift and go to state 58
    LATCH           shift and go to state 60
    REG             shift and go to state 61
    MUX             shift and go to state 62
    (               shift and go to state 59
    ~               shift and go to state 63
    INTEGER         shift and go to state 64
    LOGICVALUE      shift and go to state 65
    ID              shift and go to state 54

    factor                         shift and go to state 105

state 64

    (42) factor -> INTEGER .
    MOD             reduce using rule 42 (factor -> INTEGER .)
    DIV             reduce using rule 42 (factor -> INTEGER .)
    /               reduce using rule 42 (factor -> INTEGER .)
    *               reduce using rule 42 (factor -> INTEGER .)
    -               reduce using rule 42 (factor -> INTEGER .)
    +               reduce using rule 42 (factor -> INTEGER .)
    ;               reduce using rule 42 (factor -> INTEGER .)
    )               reduce using rule 42 (factor -> INTEGER .)
    ]               reduce using rule 42 (factor -> INTEGER .)
    ,               reduce using rule 42 (factor -> INTEGER .)
    :               reduce using rule 42 (factor -> INTEGER .)
    MAYORIGUAL      reduce using rule 42 (factor -> INTEGER .)
    >               reduce using rule 42 (factor -> INTEGER .)
    MENORIGUAL      reduce using rule 42 (factor -> INTEGER .)
    <               reduce using rule 42 (factor -> INTEGER .)
    #               reduce using rule 42 (factor -> INTEGER .)
    =               reduce using rule 42 (factor -> INTEGER .)
    DOBLEPUNTO      reduce using rule 42 (factor -> INTEGER .)
    END             reduce using rule 42 (factor -> INTEGER .)
    ELSIF           reduce using rule 42 (factor -> INTEGER .)
    ELSE            reduce using rule 42 (factor -> INTEGER .)
    |               reduce using rule 42 (factor -> INTEGER .)
    THEN            reduce using rule 42 (factor -> INTEGER .)
    DO              reduce using rule 42 (factor -> INTEGER .)


state 65

    (43) factor -> LOGICVALUE .
    MOD             reduce using rule 43 (factor -> LOGICVALUE .)
    DIV             reduce using rule 43 (factor -> LOGICVALUE .)
    /               reduce using rule 43 (factor -> LOGICVALUE .)
    *               reduce using rule 43 (factor -> LOGICVALUE .)
    -               reduce using rule 43 (factor -> LOGICVALUE .)
    +               reduce using rule 43 (factor -> LOGICVALUE .)
    ;               reduce using rule 43 (factor -> LOGICVALUE .)
    )               reduce using rule 43 (factor -> LOGICVALUE .)
    ]               reduce using rule 43 (factor -> LOGICVALUE .)
    ,               reduce using rule 43 (factor -> LOGICVALUE .)
    :               reduce using rule 43 (factor -> LOGICVALUE .)
    MAYORIGUAL      reduce using rule 43 (factor -> LOGICVALUE .)
    >               reduce using rule 43 (factor -> LOGICVALUE .)
    MENORIGUAL      reduce using rule 43 (factor -> LOGICVALUE .)
    <               reduce using rule 43 (factor -> LOGICVALUE .)
    #               reduce using rule 43 (factor -> LOGICVALUE .)
    =               reduce using rule 43 (factor -> LOGICVALUE .)
    DOBLEPUNTO      reduce using rule 43 (factor -> LOGICVALUE .)
    END             reduce using rule 43 (factor -> LOGICVALUE .)
    ELSIF           reduce using rule 43 (factor -> LOGICVALUE .)
    ELSE            reduce using rule 43 (factor -> LOGICVALUE .)
    |               reduce using rule 43 (factor -> LOGICVALUE .)
    THEN            reduce using rule 43 (factor -> LOGICVALUE .)
    DO              reduce using rule 43 (factor -> LOGICVALUE .)


state 66

    (124) declaracionTipo -> TYPE ID simboloPor listaIdParentesis ; . declaracionConstanteCONST tipoFormalIN tipoFormlINOUT declaracionVariableOUT declaracionVariableVAR sentenciaSecuenciaBEGIN END ID
    (95) declaracionConstanteCONST -> . empty
    (96) declaracionConstanteCONST -> . CONST declaracionConstanteRecursivo
    (143) empty -> .
    CONST           shift and go to state 14
    IN              reduce using rule 143 (empty -> .)
    INOUT           reduce using rule 143 (empty -> .)
    OUT             reduce using rule 143 (empty -> .)
    VAR             reduce using rule 143 (empty -> .)
    BEGIN           reduce using rule 143 (empty -> .)
    END             reduce using rule 143 (empty -> .)

    declaracionConstanteCONST      shift and go to state 106
    empty                          shift and go to state 13

state 67

    (128) listaIdParentesis -> ( listaId . )
    )               shift and go to state 107


state 68

    (3) modulo -> MODULE ID ; declaracionTipoPuntoComa declaracionConstanteCONST declaracionVariableIN declaracionVariableINOUT declaracionVariableOUT declaracionVariableVAR . sentenciaSecuenciaBEGIN END ID .
    (109) sentenciaSecuenciaBEGIN -> . empty
    (110) sentenciaSecuenciaBEGIN -> . BEGIN sentenciaSecuencia
    (143) empty -> .
    BEGIN           shift and go to state 110
    END             reduce using rule 143 (empty -> .)

    sentenciaSecuenciaBEGIN        shift and go to state 108
    empty                          shift and go to state 109

state 69

    (107) declaracionVariableVAR -> empty .
    BEGIN           reduce using rule 107 (declaracionVariableVAR -> empty .)
    END             reduce using rule 107 (declaracionVariableVAR -> empty .)


state 70

    (108) declaracionVariableVAR -> VAR . declaracionVariableRecursivo
    (111) declaracionVariableRecursivo -> . empty
    (112) declaracionVariableRecursivo -> . declaracionVariableRecursivoR
    (143) empty -> .
    (113) declaracionVariableRecursivoR -> . declaracionVariable
    (114) declaracionVariableRecursivoR -> . declaracionVariableRecursivoR declaracionVariable
    (22) declaracionVariable -> . listaId : tipo ;
    (23) listaId -> . ID IDComa
    BEGIN           reduce using rule 143 (empty -> .)
    END             reduce using rule 143 (empty -> .)
    ID              shift and go to state 38

    declaracionVariableRecursivo   shift and go to state 111
    empty                          shift and go to state 34
    declaracionVariableRecursivoR  shift and go to state 35
    declaracionVariable            shift and go to state 36
    listaId                        shift and go to state 37

state 71

    (106) declaracionVariableOUT -> OUT declaracionVariableRecursivo .
    VAR             reduce using rule 106 (declaracionVariableOUT -> OUT declaracionVariableRecursivo .)
    BEGIN           reduce using rule 106 (declaracionVariableOUT -> OUT declaracionVariableRecursivo .)
    END             reduce using rule 106 (declaracionVariableOUT -> OUT declaracionVariableRecursivo .)


state 72

    (22) declaracionVariable -> listaId : tipo . ;
    ;               shift and go to state 112


state 73

    (16) tipo -> expresionCorchete . tipoSimple
    (4) tipoSimple -> . ID conjuntoExpresiones
    (5) tipoSimple -> . tipoBasico
    (6) tipoBasico -> . OC
    (7) tipoBasico -> . TS
    (8) tipoBasico -> . BIT
    ID              shift and go to state 114
    OC              shift and go to state 116
    TS              shift and go to state 117
    BIT             shift and go to state 118

    tipoSimple                     shift and go to state 113
    tipoBasico                     shift and go to state 115

state 74

    (17) expresionCorchete -> empty .
    ID              reduce using rule 17 (expresionCorchete -> empty .)
    OC              reduce using rule 17 (expresionCorchete -> empty .)
    TS              reduce using rule 17 (expresionCorchete -> empty .)
    BIT             reduce using rule 17 (expresionCorchete -> empty .)


state 75

    (18) expresionCorchete -> expresionCorcheteR .
    (20) expresionCorcheteR -> expresionCorcheteR . [ expresion ]
    ID              reduce using rule 18 (expresionCorchete -> expresionCorcheteR .)
    OC              reduce using rule 18 (expresionCorchete -> expresionCorcheteR .)
    TS              reduce using rule 18 (expresionCorchete -> expresionCorcheteR .)
    BIT             reduce using rule 18 (expresionCorchete -> expresionCorcheteR .)
    [               shift and go to state 119


state 76

    (19) expresionCorcheteR -> [ . expresion ]
    (56) expresion -> . termino terminoMasMenos
    (47) termino -> . factor terminoOperadores
    (35) factor -> . SR ( expresion , expresion )
    (36) factor -> . LATCH ( expresion , expresion )
    (37) factor -> . REG ( expresionComaO expresion
    (38) factor -> . MUX ( expresion , expresion : expresion , expresion , expresion , expresion )
    (39) factor -> . MUX ( expresion : expresion , expresion )
    (40) factor -> . ( expresion )
    (41) factor -> . ~ factor
    (42) factor -> . INTEGER
    (43) factor -> . LOGICVALUE
    (44) factor -> . ID selector
    SR              shift and go to state 58
    LATCH           shift and go to state 60
    REG             shift and go to state 61
    MUX             shift and go to state 62
    (               shift and go to state 59
    ~               shift and go to state 63
    INTEGER         shift and go to state 64
    LOGICVALUE      shift and go to state 65
    ID              shift and go to state 54

    expresion                      shift and go to state 120
    termino                        shift and go to state 56
    factor                         shift and go to state 57

state 77

    (27) IDComaR -> IDComaR , . ID
    ID              shift and go to state 121


state 78

    (26) IDComaR -> , ID .
    ,               reduce using rule 26 (IDComaR -> , ID .)
    :               reduce using rule 26 (IDComaR -> , ID .)
    )               reduce using rule 26 (IDComaR -> , ID .)


state 79

    (44) factor -> ID selector .
    MOD             reduce using rule 44 (factor -> ID selector .)
    DIV             reduce using rule 44 (factor -> ID selector .)
    /               reduce using rule 44 (factor -> ID selector .)
    *               reduce using rule 44 (factor -> ID selector .)
    -               reduce using rule 44 (factor -> ID selector .)
    +               reduce using rule 44 (factor -> ID selector .)
    ;               reduce using rule 44 (factor -> ID selector .)
    )               reduce using rule 44 (factor -> ID selector .)
    ]               reduce using rule 44 (factor -> ID selector .)
    ,               reduce using rule 44 (factor -> ID selector .)
    :               reduce using rule 44 (factor -> ID selector .)
    MAYORIGUAL      reduce using rule 44 (factor -> ID selector .)
    >               reduce using rule 44 (factor -> ID selector .)
    MENORIGUAL      reduce using rule 44 (factor -> ID selector .)
    <               reduce using rule 44 (factor -> ID selector .)
    #               reduce using rule 44 (factor -> ID selector .)
    =               reduce using rule 44 (factor -> ID selector .)
    DOBLEPUNTO      reduce using rule 44 (factor -> ID selector .)
    END             reduce using rule 44 (factor -> ID selector .)
    ELSIF           reduce using rule 44 (factor -> ID selector .)
    ELSE            reduce using rule 44 (factor -> ID selector .)
    |               reduce using rule 44 (factor -> ID selector .)
    THEN            reduce using rule 44 (factor -> ID selector .)
    DO              reduce using rule 44 (factor -> ID selector .)


state 80

    (28) selector -> empty .
    MOD             reduce using rule 28 (selector -> empty .)
    DIV             reduce using rule 28 (selector -> empty .)
    /               reduce using rule 28 (selector -> empty .)
    *               reduce using rule 28 (selector -> empty .)
    -               reduce using rule 28 (selector -> empty .)
    +               reduce using rule 28 (selector -> empty .)
    ;               reduce using rule 28 (selector -> empty .)
    )               reduce using rule 28 (selector -> empty .)
    ]               reduce using rule 28 (selector -> empty .)
    ,               reduce using rule 28 (selector -> empty .)
    :               reduce using rule 28 (selector -> empty .)
    MAYORIGUAL      reduce using rule 28 (selector -> empty .)
    >               reduce using rule 28 (selector -> empty .)
    MENORIGUAL      reduce using rule 28 (selector -> empty .)
    <               reduce using rule 28 (selector -> empty .)
    #               reduce using rule 28 (selector -> empty .)
    =               reduce using rule 28 (selector -> empty .)
    DOBLEPUNTO      reduce using rule 28 (selector -> empty .)
    END             reduce using rule 28 (selector -> empty .)
    ELSIF           reduce using rule 28 (selector -> empty .)
    ELSE            reduce using rule 28 (selector -> empty .)
    |               reduce using rule 28 (selector -> empty .)
    THEN            reduce using rule 28 (selector -> empty .)
    DO              reduce using rule 28 (selector -> empty .)
    error           reduce using rule 28 (selector -> empty .)
    (               reduce using rule 28 (selector -> empty .)
    DOSPUNTOSIGUAL  reduce using rule 28 (selector -> empty .)


state 81

    (29) selector -> selectorR .
    (31) selectorR -> selectorR . selectorRR
    (32) selectorRR -> . [ expresion ]
    (33) selectorRR -> . . INTEGER
    (34) selectorRR -> . . ID
    MOD             reduce using rule 29 (selector -> selectorR .)
    DIV             reduce using rule 29 (selector -> selectorR .)
    /               reduce using rule 29 (selector -> selectorR .)
    *               reduce using rule 29 (selector -> selectorR .)
    -               reduce using rule 29 (selector -> selectorR .)
    +               reduce using rule 29 (selector -> selectorR .)
    ;               reduce using rule 29 (selector -> selectorR .)
    )               reduce using rule 29 (selector -> selectorR .)
    ]               reduce using rule 29 (selector -> selectorR .)
    ,               reduce using rule 29 (selector -> selectorR .)
    :               reduce using rule 29 (selector -> selectorR .)
    MAYORIGUAL      reduce using rule 29 (selector -> selectorR .)
    >               reduce using rule 29 (selector -> selectorR .)
    MENORIGUAL      reduce using rule 29 (selector -> selectorR .)
    <               reduce using rule 29 (selector -> selectorR .)
    #               reduce using rule 29 (selector -> selectorR .)
    =               reduce using rule 29 (selector -> selectorR .)
    DOBLEPUNTO      reduce using rule 29 (selector -> selectorR .)
    END             reduce using rule 29 (selector -> selectorR .)
    ELSIF           reduce using rule 29 (selector -> selectorR .)
    ELSE            reduce using rule 29 (selector -> selectorR .)
    |               reduce using rule 29 (selector -> selectorR .)
    THEN            reduce using rule 29 (selector -> selectorR .)
    DO              reduce using rule 29 (selector -> selectorR .)
    error           reduce using rule 29 (selector -> selectorR .)
    (               reduce using rule 29 (selector -> selectorR .)
    DOSPUNTOSIGUAL  reduce using rule 29 (selector -> selectorR .)
    [               shift and go to state 83
    .               shift and go to state 84

    selectorRR                     shift and go to state 122

state 82

    (30) selectorR -> selectorRR .
    [               reduce using rule 30 (selectorR -> selectorRR .)
    .               reduce using rule 30 (selectorR -> selectorRR .)
    MOD             reduce using rule 30 (selectorR -> selectorRR .)
    DIV             reduce using rule 30 (selectorR -> selectorRR .)
    /               reduce using rule 30 (selectorR -> selectorRR .)
    *               reduce using rule 30 (selectorR -> selectorRR .)
    -               reduce using rule 30 (selectorR -> selectorRR .)
    +               reduce using rule 30 (selectorR -> selectorRR .)
    ;               reduce using rule 30 (selectorR -> selectorRR .)
    )               reduce using rule 30 (selectorR -> selectorRR .)
    ]               reduce using rule 30 (selectorR -> selectorRR .)
    ,               reduce using rule 30 (selectorR -> selectorRR .)
    :               reduce using rule 30 (selectorR -> selectorRR .)
    MAYORIGUAL      reduce using rule 30 (selectorR -> selectorRR .)
    >               reduce using rule 30 (selectorR -> selectorRR .)
    MENORIGUAL      reduce using rule 30 (selectorR -> selectorRR .)
    <               reduce using rule 30 (selectorR -> selectorRR .)
    #               reduce using rule 30 (selectorR -> selectorRR .)
    =               reduce using rule 30 (selectorR -> selectorRR .)
    DOBLEPUNTO      reduce using rule 30 (selectorR -> selectorRR .)
    END             reduce using rule 30 (selectorR -> selectorRR .)
    ELSIF           reduce using rule 30 (selectorR -> selectorRR .)
    ELSE            reduce using rule 30 (selectorR -> selectorRR .)
    |               reduce using rule 30 (selectorR -> selectorRR .)
    THEN            reduce using rule 30 (selectorR -> selectorRR .)
    DO              reduce using rule 30 (selectorR -> selectorRR .)
    error           reduce using rule 30 (selectorR -> selectorRR .)
    (               reduce using rule 30 (selectorR -> selectorRR .)
    DOSPUNTOSIGUAL  reduce using rule 30 (selectorR -> selectorRR .)


state 83

    (32) selectorRR -> [ . expresion ]
    (56) expresion -> . termino terminoMasMenos
    (47) termino -> . factor terminoOperadores
    (35) factor -> . SR ( expresion , expresion )
    (36) factor -> . LATCH ( expresion , expresion )
    (37) factor -> . REG ( expresionComaO expresion
    (38) factor -> . MUX ( expresion , expresion : expresion , expresion , expresion , expresion )
    (39) factor -> . MUX ( expresion : expresion , expresion )
    (40) factor -> . ( expresion )
    (41) factor -> . ~ factor
    (42) factor -> . INTEGER
    (43) factor -> . LOGICVALUE
    (44) factor -> . ID selector
    SR              shift and go to state 58
    LATCH           shift and go to state 60
    REG             shift and go to state 61
    MUX             shift and go to state 62
    (               shift and go to state 59
    ~               shift and go to state 63
    INTEGER         shift and go to state 64
    LOGICVALUE      shift and go to state 65
    ID              shift and go to state 54

    expresion                      shift and go to state 123
    termino                        shift and go to state 56
    factor                         shift and go to state 57

state 84

    (33) selectorRR -> . . INTEGER
    (34) selectorRR -> . . ID
    INTEGER         shift and go to state 124
    ID              shift and go to state 125


state 85

    (21) declaracionConstante -> ID DOSPUNTOSIGUAL expresion ; .
    ID              reduce using rule 21 (declaracionConstante -> ID DOSPUNTOSIGUAL expresion ; .)
    IN              reduce using rule 21 (declaracionConstante -> ID DOSPUNTOSIGUAL expresion ; .)
    INOUT           reduce using rule 21 (declaracionConstante -> ID DOSPUNTOSIGUAL expresion ; .)
    OUT             reduce using rule 21 (declaracionConstante -> ID DOSPUNTOSIGUAL expresion ; .)
    VAR             reduce using rule 21 (declaracionConstante -> ID DOSPUNTOSIGUAL expresion ; .)
    BEGIN           reduce using rule 21 (declaracionConstante -> ID DOSPUNTOSIGUAL expresion ; .)
    END             reduce using rule 21 (declaracionConstante -> ID DOSPUNTOSIGUAL expresion ; .)


state 86

    (56) expresion -> termino terminoMasMenos .
    ;               reduce using rule 56 (expresion -> termino terminoMasMenos .)
    )               reduce using rule 56 (expresion -> termino terminoMasMenos .)
    ]               reduce using rule 56 (expresion -> termino terminoMasMenos .)
    ,               reduce using rule 56 (expresion -> termino terminoMasMenos .)
    :               reduce using rule 56 (expresion -> termino terminoMasMenos .)
    MOD             reduce using rule 56 (expresion -> termino terminoMasMenos .)
    DIV             reduce using rule 56 (expresion -> termino terminoMasMenos .)
    /               reduce using rule 56 (expresion -> termino terminoMasMenos .)
    *               reduce using rule 56 (expresion -> termino terminoMasMenos .)
    -               reduce using rule 56 (expresion -> termino terminoMasMenos .)
    +               reduce using rule 56 (expresion -> termino terminoMasMenos .)
    MAYORIGUAL      reduce using rule 56 (expresion -> termino terminoMasMenos .)
    >               reduce using rule 56 (expresion -> termino terminoMasMenos .)
    MENORIGUAL      reduce using rule 56 (expresion -> termino terminoMasMenos .)
    <               reduce using rule 56 (expresion -> termino terminoMasMenos .)
    #               reduce using rule 56 (expresion -> termino terminoMasMenos .)
    =               reduce using rule 56 (expresion -> termino terminoMasMenos .)
    DOBLEPUNTO      reduce using rule 56 (expresion -> termino terminoMasMenos .)
    END             reduce using rule 56 (expresion -> termino terminoMasMenos .)
    ELSIF           reduce using rule 56 (expresion -> termino terminoMasMenos .)
    ELSE            reduce using rule 56 (expresion -> termino terminoMasMenos .)
    |               reduce using rule 56 (expresion -> termino terminoMasMenos .)
    THEN            reduce using rule 56 (expresion -> termino terminoMasMenos .)
    DO              reduce using rule 56 (expresion -> termino terminoMasMenos .)


state 87

    (57) terminoMasMenos -> empty .
    MOD             reduce using rule 57 (terminoMasMenos -> empty .)
    DIV             reduce using rule 57 (terminoMasMenos -> empty .)
    /               reduce using rule 57 (terminoMasMenos -> empty .)
    *               reduce using rule 57 (terminoMasMenos -> empty .)
    -               reduce using rule 57 (terminoMasMenos -> empty .)
    +               reduce using rule 57 (terminoMasMenos -> empty .)
    ;               reduce using rule 57 (terminoMasMenos -> empty .)
    )               reduce using rule 57 (terminoMasMenos -> empty .)
    ]               reduce using rule 57 (terminoMasMenos -> empty .)
    ,               reduce using rule 57 (terminoMasMenos -> empty .)
    :               reduce using rule 57 (terminoMasMenos -> empty .)
    MAYORIGUAL      reduce using rule 57 (terminoMasMenos -> empty .)
    >               reduce using rule 57 (terminoMasMenos -> empty .)
    MENORIGUAL      reduce using rule 57 (terminoMasMenos -> empty .)
    <               reduce using rule 57 (terminoMasMenos -> empty .)
    #               reduce using rule 57 (terminoMasMenos -> empty .)
    =               reduce using rule 57 (terminoMasMenos -> empty .)
    DOBLEPUNTO      reduce using rule 57 (terminoMasMenos -> empty .)
    END             reduce using rule 57 (terminoMasMenos -> empty .)
    ELSIF           reduce using rule 57 (terminoMasMenos -> empty .)
    ELSE            reduce using rule 57 (terminoMasMenos -> empty .)
    |               reduce using rule 57 (terminoMasMenos -> empty .)
    THEN            reduce using rule 57 (terminoMasMenos -> empty .)
    DO              reduce using rule 57 (terminoMasMenos -> empty .)


state 88

    (58) terminoMasMenos -> terminoMasMenosR .
    (60) terminoMasMenosR -> terminoMasMenosR . simbolosMasMenos termino
    (61) simbolosMasMenos -> . -
    (62) simbolosMasMenos -> . +
  ! shift/reduce conflict for - resolved as shift
  ! shift/reduce conflict for + resolved as shift
    MOD             reduce using rule 58 (terminoMasMenos -> terminoMasMenosR .)
    DIV             reduce using rule 58 (terminoMasMenos -> terminoMasMenosR .)
    /               reduce using rule 58 (terminoMasMenos -> terminoMasMenosR .)
    *               reduce using rule 58 (terminoMasMenos -> terminoMasMenosR .)
    ;               reduce using rule 58 (terminoMasMenos -> terminoMasMenosR .)
    )               reduce using rule 58 (terminoMasMenos -> terminoMasMenosR .)
    ]               reduce using rule 58 (terminoMasMenos -> terminoMasMenosR .)
    ,               reduce using rule 58 (terminoMasMenos -> terminoMasMenosR .)
    :               reduce using rule 58 (terminoMasMenos -> terminoMasMenosR .)
    MAYORIGUAL      reduce using rule 58 (terminoMasMenos -> terminoMasMenosR .)
    >               reduce using rule 58 (terminoMasMenos -> terminoMasMenosR .)
    MENORIGUAL      reduce using rule 58 (terminoMasMenos -> terminoMasMenosR .)
    <               reduce using rule 58 (terminoMasMenos -> terminoMasMenosR .)
    #               reduce using rule 58 (terminoMasMenos -> terminoMasMenosR .)
    =               reduce using rule 58 (terminoMasMenos -> terminoMasMenosR .)
    DOBLEPUNTO      reduce using rule 58 (terminoMasMenos -> terminoMasMenosR .)
    END             reduce using rule 58 (terminoMasMenos -> terminoMasMenosR .)
    ELSIF           reduce using rule 58 (terminoMasMenos -> terminoMasMenosR .)
    ELSE            reduce using rule 58 (terminoMasMenos -> terminoMasMenosR .)
    |               reduce using rule 58 (terminoMasMenos -> terminoMasMenosR .)
    THEN            reduce using rule 58 (terminoMasMenos -> terminoMasMenosR .)
    DO              reduce using rule 58 (terminoMasMenos -> terminoMasMenosR .)
    -               shift and go to state 90
    +               shift and go to state 91

    simbolosMasMenos               shift and go to state 126

state 89

    (59) terminoMasMenosR -> simbolosMasMenos . termino
    (47) termino -> . factor terminoOperadores
    (35) factor -> . SR ( expresion , expresion )
    (36) factor -> . LATCH ( expresion , expresion )
    (37) factor -> . REG ( expresionComaO expresion
    (38) factor -> . MUX ( expresion , expresion : expresion , expresion , expresion , expresion )
    (39) factor -> . MUX ( expresion : expresion , expresion )
    (40) factor -> . ( expresion )
    (41) factor -> . ~ factor
    (42) factor -> . INTEGER
    (43) factor -> . LOGICVALUE
    (44) factor -> . ID selector
    SR              shift and go to state 58
    LATCH           shift and go to state 60
    REG             shift and go to state 61
    MUX             shift and go to state 62
    (               shift and go to state 59
    ~               shift and go to state 63
    INTEGER         shift and go to state 64
    LOGICVALUE      shift and go to state 65
    ID              shift and go to state 54

    termino                        shift and go to state 127
    factor                         shift and go to state 57

state 90

    (61) simbolosMasMenos -> - .
    SR              reduce using rule 61 (simbolosMasMenos -> - .)
    LATCH           reduce using rule 61 (simbolosMasMenos -> - .)
    REG             reduce using rule 61 (simbolosMasMenos -> - .)
    MUX             reduce using rule 61 (simbolosMasMenos -> - .)
    (               reduce using rule 61 (simbolosMasMenos -> - .)
    ~               reduce using rule 61 (simbolosMasMenos -> - .)
    INTEGER         reduce using rule 61 (simbolosMasMenos -> - .)
    LOGICVALUE      reduce using rule 61 (simbolosMasMenos -> - .)
    ID              reduce using rule 61 (simbolosMasMenos -> - .)


state 91

    (62) simbolosMasMenos -> + .
    SR              reduce using rule 62 (simbolosMasMenos -> + .)
    LATCH           reduce using rule 62 (simbolosMasMenos -> + .)
    REG             reduce using rule 62 (simbolosMasMenos -> + .)
    MUX             reduce using rule 62 (simbolosMasMenos -> + .)
    (               reduce using rule 62 (simbolosMasMenos -> + .)
    ~               reduce using rule 62 (simbolosMasMenos -> + .)
    INTEGER         reduce using rule 62 (simbolosMasMenos -> + .)
    LOGICVALUE      reduce using rule 62 (simbolosMasMenos -> + .)
    ID              reduce using rule 62 (simbolosMasMenos -> + .)


state 92

    (47) termino -> factor terminoOperadores .
    -               reduce using rule 47 (termino -> factor terminoOperadores .)
    +               reduce using rule 47 (termino -> factor terminoOperadores .)
    ;               reduce using rule 47 (termino -> factor terminoOperadores .)
    )               reduce using rule 47 (termino -> factor terminoOperadores .)
    ]               reduce using rule 47 (termino -> factor terminoOperadores .)
    MOD             reduce using rule 47 (termino -> factor terminoOperadores .)
    DIV             reduce using rule 47 (termino -> factor terminoOperadores .)
    /               reduce using rule 47 (termino -> factor terminoOperadores .)
    *               reduce using rule 47 (termino -> factor terminoOperadores .)
    ,               reduce using rule 47 (termino -> factor terminoOperadores .)
    :               reduce using rule 47 (termino -> factor terminoOperadores .)
    MAYORIGUAL      reduce using rule 47 (termino -> factor terminoOperadores .)
    >               reduce using rule 47 (termino -> factor terminoOperadores .)
    MENORIGUAL      reduce using rule 47 (termino -> factor terminoOperadores .)
    <               reduce using rule 47 (termino -> factor terminoOperadores .)
    #               reduce using rule 47 (termino -> factor terminoOperadores .)
    =               reduce using rule 47 (termino -> factor terminoOperadores .)
    DOBLEPUNTO      reduce using rule 47 (termino -> factor terminoOperadores .)
    END             reduce using rule 47 (termino -> factor terminoOperadores .)
    ELSIF           reduce using rule 47 (termino -> factor terminoOperadores .)
    ELSE            reduce using rule 47 (termino -> factor terminoOperadores .)
    |               reduce using rule 47 (termino -> factor terminoOperadores .)
    THEN            reduce using rule 47 (termino -> factor terminoOperadores .)
    DO              reduce using rule 47 (termino -> factor terminoOperadores .)


state 93

    (48) terminoOperadores -> empty .
    MOD             reduce using rule 48 (terminoOperadores -> empty .)
    DIV             reduce using rule 48 (terminoOperadores -> empty .)
    /               reduce using rule 48 (terminoOperadores -> empty .)
    *               reduce using rule 48 (terminoOperadores -> empty .)
    -               reduce using rule 48 (terminoOperadores -> empty .)
    +               reduce using rule 48 (terminoOperadores -> empty .)
    ;               reduce using rule 48 (terminoOperadores -> empty .)
    )               reduce using rule 48 (terminoOperadores -> empty .)
    ]               reduce using rule 48 (terminoOperadores -> empty .)
    ,               reduce using rule 48 (terminoOperadores -> empty .)
    :               reduce using rule 48 (terminoOperadores -> empty .)
    MAYORIGUAL      reduce using rule 48 (terminoOperadores -> empty .)
    >               reduce using rule 48 (terminoOperadores -> empty .)
    MENORIGUAL      reduce using rule 48 (terminoOperadores -> empty .)
    <               reduce using rule 48 (terminoOperadores -> empty .)
    #               reduce using rule 48 (terminoOperadores -> empty .)
    =               reduce using rule 48 (terminoOperadores -> empty .)
    DOBLEPUNTO      reduce using rule 48 (terminoOperadores -> empty .)
    END             reduce using rule 48 (terminoOperadores -> empty .)
    ELSIF           reduce using rule 48 (terminoOperadores -> empty .)
    ELSE            reduce using rule 48 (terminoOperadores -> empty .)
    |               reduce using rule 48 (terminoOperadores -> empty .)
    THEN            reduce using rule 48 (terminoOperadores -> empty .)
    DO              reduce using rule 48 (terminoOperadores -> empty .)


state 94

    (49) terminoOperadores -> terminoOperadoresR .
    (51) terminoOperadoresR -> terminoOperadoresR . simbolosProd factor
    (52) simbolosProd -> . MOD
    (53) simbolosProd -> . DIV
    (54) simbolosProd -> . /
    (55) simbolosProd -> . *
  ! shift/reduce conflict for MOD resolved as shift
  ! shift/reduce conflict for DIV resolved as shift
  ! shift/reduce conflict for / resolved as shift
  ! shift/reduce conflict for * resolved as shift
    -               reduce using rule 49 (terminoOperadores -> terminoOperadoresR .)
    +               reduce using rule 49 (terminoOperadores -> terminoOperadoresR .)
    ;               reduce using rule 49 (terminoOperadores -> terminoOperadoresR .)
    )               reduce using rule 49 (terminoOperadores -> terminoOperadoresR .)
    ]               reduce using rule 49 (terminoOperadores -> terminoOperadoresR .)
    ,               reduce using rule 49 (terminoOperadores -> terminoOperadoresR .)
    :               reduce using rule 49 (terminoOperadores -> terminoOperadoresR .)
    MAYORIGUAL      reduce using rule 49 (terminoOperadores -> terminoOperadoresR .)
    >               reduce using rule 49 (terminoOperadores -> terminoOperadoresR .)
    MENORIGUAL      reduce using rule 49 (terminoOperadores -> terminoOperadoresR .)
    <               reduce using rule 49 (terminoOperadores -> terminoOperadoresR .)
    #               reduce using rule 49 (terminoOperadores -> terminoOperadoresR .)
    =               reduce using rule 49 (terminoOperadores -> terminoOperadoresR .)
    DOBLEPUNTO      reduce using rule 49 (terminoOperadores -> terminoOperadoresR .)
    END             reduce using rule 49 (terminoOperadores -> terminoOperadoresR .)
    ELSIF           reduce using rule 49 (terminoOperadores -> terminoOperadoresR .)
    ELSE            reduce using rule 49 (terminoOperadores -> terminoOperadoresR .)
    |               reduce using rule 49 (terminoOperadores -> terminoOperadoresR .)
    THEN            reduce using rule 49 (terminoOperadores -> terminoOperadoresR .)
    DO              reduce using rule 49 (terminoOperadores -> terminoOperadoresR .)
    MOD             shift and go to state 96
    DIV             shift and go to state 97
    /               shift and go to state 98
    *               shift and go to state 99

    simbolosProd                   shift and go to state 128

state 95

    (50) terminoOperadoresR -> simbolosProd . factor
    (35) factor -> . SR ( expresion , expresion )
    (36) factor -> . LATCH ( expresion , expresion )
    (37) factor -> . REG ( expresionComaO expresion
    (38) factor -> . MUX ( expresion , expresion : expresion , expresion , expresion , expresion )
    (39) factor -> . MUX ( expresion : expresion , expresion )
    (40) factor -> . ( expresion )
    (41) factor -> . ~ factor
    (42) factor -> . INTEGER
    (43) factor -> . LOGICVALUE
    (44) factor -> . ID selector
    SR              shift and go to state 58
    LATCH           shift and go to state 60
    REG             shift and go to state 61
    MUX             shift and go to state 62
    (               shift and go to state 59
    ~               shift and go to state 63
    INTEGER         shift and go to state 64
    LOGICVALUE      shift and go to state 65
    ID              shift and go to state 54

    factor                         shift and go to state 129

state 96

    (52) simbolosProd -> MOD .
    SR              reduce using rule 52 (simbolosProd -> MOD .)
    LATCH           reduce using rule 52 (simbolosProd -> MOD .)
    REG             reduce using rule 52 (simbolosProd -> MOD .)
    MUX             reduce using rule 52 (simbolosProd -> MOD .)
    (               reduce using rule 52 (simbolosProd -> MOD .)
    ~               reduce using rule 52 (simbolosProd -> MOD .)
    INTEGER         reduce using rule 52 (simbolosProd -> MOD .)
    LOGICVALUE      reduce using rule 52 (simbolosProd -> MOD .)
    ID              reduce using rule 52 (simbolosProd -> MOD .)


state 97

    (53) simbolosProd -> DIV .
    SR              reduce using rule 53 (simbolosProd -> DIV .)
    LATCH           reduce using rule 53 (simbolosProd -> DIV .)
    REG             reduce using rule 53 (simbolosProd -> DIV .)
    MUX             reduce using rule 53 (simbolosProd -> DIV .)
    (               reduce using rule 53 (simbolosProd -> DIV .)
    ~               reduce using rule 53 (simbolosProd -> DIV .)
    INTEGER         reduce using rule 53 (simbolosProd -> DIV .)
    LOGICVALUE      reduce using rule 53 (simbolosProd -> DIV .)
    ID              reduce using rule 53 (simbolosProd -> DIV .)


state 98

    (54) simbolosProd -> / .
    SR              reduce using rule 54 (simbolosProd -> / .)
    LATCH           reduce using rule 54 (simbolosProd -> / .)
    REG             reduce using rule 54 (simbolosProd -> / .)
    MUX             reduce using rule 54 (simbolosProd -> / .)
    (               reduce using rule 54 (simbolosProd -> / .)
    ~               reduce using rule 54 (simbolosProd -> / .)
    INTEGER         reduce using rule 54 (simbolosProd -> / .)
    LOGICVALUE      reduce using rule 54 (simbolosProd -> / .)
    ID              reduce using rule 54 (simbolosProd -> / .)


state 99

    (55) simbolosProd -> * .
    SR              reduce using rule 55 (simbolosProd -> * .)
    LATCH           reduce using rule 55 (simbolosProd -> * .)
    REG             reduce using rule 55 (simbolosProd -> * .)
    MUX             reduce using rule 55 (simbolosProd -> * .)
    (               reduce using rule 55 (simbolosProd -> * .)
    ~               reduce using rule 55 (simbolosProd -> * .)
    INTEGER         reduce using rule 55 (simbolosProd -> * .)
    LOGICVALUE      reduce using rule 55 (simbolosProd -> * .)
    ID              reduce using rule 55 (simbolosProd -> * .)


state 100

    (35) factor -> SR ( . expresion , expresion )
    (56) expresion -> . termino terminoMasMenos
    (47) termino -> . factor terminoOperadores
    (35) factor -> . SR ( expresion , expresion )
    (36) factor -> . LATCH ( expresion , expresion )
    (37) factor -> . REG ( expresionComaO expresion
    (38) factor -> . MUX ( expresion , expresion : expresion , expresion , expresion , expresion )
    (39) factor -> . MUX ( expresion : expresion , expresion )
    (40) factor -> . ( expresion )
    (41) factor -> . ~ factor
    (42) factor -> . INTEGER
    (43) factor -> . LOGICVALUE
    (44) factor -> . ID selector
    SR              shift and go to state 58
    LATCH           shift and go to state 60
    REG             shift and go to state 61
    MUX             shift and go to state 62
    (               shift and go to state 59
    ~               shift and go to state 63
    INTEGER         shift and go to state 64
    LOGICVALUE      shift and go to state 65
    ID              shift and go to state 54

    expresion                      shift and go to state 130
    termino                        shift and go to state 56
    factor                         shift and go to state 57

state 101

    (40) factor -> ( expresion . )
    )               shift and go to state 131


state 102

    (36) factor -> LATCH ( . expresion , expresion )
    (56) expresion -> . termino terminoMasMenos
    (47) termino -> . factor terminoOperadores
    (35) factor -> . SR ( expresion , expresion )
    (36) factor -> . LATCH ( expresion , expresion )
    (37) factor -> . REG ( expresionComaO expresion
    (38) factor -> . MUX ( expresion , expresion : expresion , expresion , expresion , expresion )
    (39) factor -> . MUX ( expresion : expresion , expresion )
    (40) factor -> . ( expresion )
    (41) factor -> . ~ factor
    (42) factor -> . INTEGER
    (43) factor -> . LOGICVALUE
    (44) factor -> . ID selector
    SR              shift and go to state 58
    LATCH           shift and go to state 60
    REG             shift and go to state 61
    MUX             shift and go to state 62
    (               shift and go to state 59
    ~               shift and go to state 63
    INTEGER         shift and go to state 64
    LOGICVALUE      shift and go to state 65
    ID              shift and go to state 54

    expresion                      shift and go to state 132
    termino                        shift and go to state 56
    factor                         shift and go to state 57

state 103

    (37) factor -> REG ( . expresionComaO expresion
    (45) expresionComaO -> . empty
    (46) expresionComaO -> . expresion ,
    (143) empty -> .
    (56) expresion -> . termino terminoMasMenos
    (47) termino -> . factor terminoOperadores
    (35) factor -> . SR ( expresion , expresion )
    (36) factor -> . LATCH ( expresion , expresion )
    (37) factor -> . REG ( expresionComaO expresion
    (38) factor -> . MUX ( expresion , expresion : expresion , expresion , expresion , expresion )
    (39) factor -> . MUX ( expresion : expresion , expresion )
    (40) factor -> . ( expresion )
    (41) factor -> . ~ factor
    (42) factor -> . INTEGER
    (43) factor -> . LOGICVALUE
    (44) factor -> . ID selector
  ! shift/reduce conflict for SR resolved as shift
  ! shift/reduce conflict for LATCH resolved as shift
  ! shift/reduce conflict for REG resolved as shift
  ! shift/reduce conflict for MUX resolved as shift
  ! shift/reduce conflict for ( resolved as shift
  ! shift/reduce conflict for ~ resolved as shift
  ! shift/reduce conflict for INTEGER resolved as shift
  ! shift/reduce conflict for LOGICVALUE resolved as shift
  ! shift/reduce conflict for ID resolved as shift
    SR              shift and go to state 58
    LATCH           shift and go to state 60
    REG             shift and go to state 61
    MUX             shift and go to state 62
    (               shift and go to state 59
    ~               shift and go to state 63
    INTEGER         shift and go to state 64
    LOGICVALUE      shift and go to state 65
    ID              shift and go to state 54

    expresionComaO                 shift and go to state 133
    expresion                      shift and go to state 134
    empty                          shift and go to state 135
    termino                        shift and go to state 56
    factor                         shift and go to state 57

state 104

    (38) factor -> MUX ( . expresion , expresion : expresion , expresion , expresion , expresion )
    (39) factor -> MUX ( . expresion : expresion , expresion )
    (56) expresion -> . termino terminoMasMenos
    (47) termino -> . factor terminoOperadores
    (35) factor -> . SR ( expresion , expresion )
    (36) factor -> . LATCH ( expresion , expresion )
    (37) factor -> . REG ( expresionComaO expresion
    (38) factor -> . MUX ( expresion , expresion : expresion , expresion , expresion , expresion )
    (39) factor -> . MUX ( expresion : expresion , expresion )
    (40) factor -> . ( expresion )
    (41) factor -> . ~ factor
    (42) factor -> . INTEGER
    (43) factor -> . LOGICVALUE
    (44) factor -> . ID selector
    SR              shift and go to state 58
    LATCH           shift and go to state 60
    REG             shift and go to state 61
    MUX             shift and go to state 62
    (               shift and go to state 59
    ~               shift and go to state 63
    INTEGER         shift and go to state 64
    LOGICVALUE      shift and go to state 65
    ID              shift and go to state 54

    expresion                      shift and go to state 136
    termino                        shift and go to state 56
    factor                         shift and go to state 57

state 105

    (41) factor -> ~ factor .
    MOD             reduce using rule 41 (factor -> ~ factor .)
    DIV             reduce using rule 41 (factor -> ~ factor .)
    /               reduce using rule 41 (factor -> ~ factor .)
    *               reduce using rule 41 (factor -> ~ factor .)
    -               reduce using rule 41 (factor -> ~ factor .)
    +               reduce using rule 41 (factor -> ~ factor .)
    ;               reduce using rule 41 (factor -> ~ factor .)
    )               reduce using rule 41 (factor -> ~ factor .)
    ]               reduce using rule 41 (factor -> ~ factor .)
    ,               reduce using rule 41 (factor -> ~ factor .)
    :               reduce using rule 41 (factor -> ~ factor .)
    MAYORIGUAL      reduce using rule 41 (factor -> ~ factor .)
    >               reduce using rule 41 (factor -> ~ factor .)
    MENORIGUAL      reduce using rule 41 (factor -> ~ factor .)
    <               reduce using rule 41 (factor -> ~ factor .)
    #               reduce using rule 41 (factor -> ~ factor .)
    =               reduce using rule 41 (factor -> ~ factor .)
    DOBLEPUNTO      reduce using rule 41 (factor -> ~ factor .)
    END             reduce using rule 41 (factor -> ~ factor .)
    ELSIF           reduce using rule 41 (factor -> ~ factor .)
    ELSE            reduce using rule 41 (factor -> ~ factor .)
    |               reduce using rule 41 (factor -> ~ factor .)
    THEN            reduce using rule 41 (factor -> ~ factor .)
    DO              reduce using rule 41 (factor -> ~ factor .)


state 106

    (124) declaracionTipo -> TYPE ID simboloPor listaIdParentesis ; declaracionConstanteCONST . tipoFormalIN tipoFormlINOUT declaracionVariableOUT declaracionVariableVAR sentenciaSecuenciaBEGIN END ID
    (129) tipoFormalIN -> . empty
    (130) tipoFormalIN -> . IN tipoFormallistaId
    (143) empty -> .
    IN              shift and go to state 139
    INOUT           reduce using rule 143 (empty -> .)
    OUT             reduce using rule 143 (empty -> .)
    VAR             reduce using rule 143 (empty -> .)
    BEGIN           reduce using rule 143 (empty -> .)
    END             reduce using rule 143 (empty -> .)

    tipoFormalIN                   shift and go to state 137
    empty                          shift and go to state 138

state 107

    (128) listaIdParentesis -> ( listaId ) .
    ;               reduce using rule 128 (listaIdParentesis -> ( listaId ) .)


state 108

    (3) modulo -> MODULE ID ; declaracionTipoPuntoComa declaracionConstanteCONST declaracionVariableIN declaracionVariableINOUT declaracionVariableOUT declaracionVariableVAR sentenciaSecuenciaBEGIN . END ID .
    END             shift and go to state 140


state 109

    (109) sentenciaSecuenciaBEGIN -> empty .
    END             reduce using rule 109 (sentenciaSecuenciaBEGIN -> empty .)


state 110

    (110) sentenciaSecuenciaBEGIN -> BEGIN . sentenciaSecuencia
    (86) sentenciaSecuencia -> . sentencia sentenciaPuntoComa
    (81) sentencia -> . empty
    (82) sentencia -> . sentenciaPara
    (83) sentencia -> . sentenciaSi
    (84) sentencia -> . asignacionUnidad
    (85) sentencia -> . asignacion
    (143) empty -> .
    (80) sentenciaPara -> . FOR ID DOSPUNTOSIGUAL expresion DOBLEPUNTO expresion DO sentenciaSecuencia END
    (73) sentenciaSi -> . IF relacion THEN sentenciaSecuencia sentenciaSiSino sentenciaSiEntonces END
    (141) asignacionUnidad -> . ID selector error listaExpresiones )
    (142) asignacionUnidad -> . ID selector ( listaExpresiones )
    (63) asignacion -> . ID selector DOSPUNTOSIGUAL condicion | expresion
    (64) asignacion -> . ID selector DOSPUNTOSIGUAL expresion
    ;               reduce using rule 143 (empty -> .)
    END             reduce using rule 143 (empty -> .)
    FOR             shift and go to state 148
    IF              shift and go to state 150
    ID              shift and go to state 149

    sentenciaSecuencia             shift and go to state 141
    sentencia                      shift and go to state 142
    empty                          shift and go to state 143
    sentenciaPara                  shift and go to state 144
    sentenciaSi                    shift and go to state 145
    asignacionUnidad               shift and go to state 146
    asignacion                     shift and go to state 147

state 111

    (108) declaracionVariableVAR -> VAR declaracionVariableRecursivo .
    BEGIN           reduce using rule 108 (declaracionVariableVAR -> VAR declaracionVariableRecursivo .)
    END             reduce using rule 108 (declaracionVariableVAR -> VAR declaracionVariableRecursivo .)


state 112

    (22) declaracionVariable -> listaId : tipo ; .
    ID              reduce using rule 22 (declaracionVariable -> listaId : tipo ; .)
    INOUT           reduce using rule 22 (declaracionVariable -> listaId : tipo ; .)
    OUT             reduce using rule 22 (declaracionVariable -> listaId : tipo ; .)
    VAR             reduce using rule 22 (declaracionVariable -> listaId : tipo ; .)
    BEGIN           reduce using rule 22 (declaracionVariable -> listaId : tipo ; .)
    END             reduce using rule 22 (declaracionVariable -> listaId : tipo ; .)


state 113

    (16) tipo -> expresionCorchete tipoSimple .
    ;               reduce using rule 16 (tipo -> expresionCorchete tipoSimple .)


state 114

    (4) tipoSimple -> ID . conjuntoExpresiones
    (9) conjuntoExpresiones -> . ( listaExpresiones )
    (10) conjuntoExpresiones -> . empty
    (143) empty -> .
    (               shift and go to state 152
    ;               reduce using rule 143 (empty -> .)

    conjuntoExpresiones            shift and go to state 151
    empty                          shift and go to state 153

state 115

    (5) tipoSimple -> tipoBasico .
    ;               reduce using rule 5 (tipoSimple -> tipoBasico .)


state 116

    (6) tipoBasico -> OC .
    ;               reduce using rule 6 (tipoBasico -> OC .)


state 117

    (7) tipoBasico -> TS .
    ;               reduce using rule 7 (tipoBasico -> TS .)


state 118

    (8) tipoBasico -> BIT .
    ;               reduce using rule 8 (tipoBasico -> BIT .)


state 119

    (20) expresionCorcheteR -> expresionCorcheteR [ . expresion ]
    (56) expresion -> . termino terminoMasMenos
    (47) termino -> . factor terminoOperadores
    (35) factor -> . SR ( expresion , expresion )
    (36) factor -> . LATCH ( expresion , expresion )
    (37) factor -> . REG ( expresionComaO expresion
    (38) factor -> . MUX ( expresion , expresion : expresion , expresion , expresion , expresion )
    (39) factor -> . MUX ( expresion : expresion , expresion )
    (40) factor -> . ( expresion )
    (41) factor -> . ~ factor
    (42) factor -> . INTEGER
    (43) factor -> . LOGICVALUE
    (44) factor -> . ID selector
    SR              shift and go to state 58
    LATCH           shift and go to state 60
    REG             shift and go to state 61
    MUX             shift and go to state 62
    (               shift and go to state 59
    ~               shift and go to state 63
    INTEGER         shift and go to state 64
    LOGICVALUE      shift and go to state 65
    ID              shift and go to state 54

    expresion                      shift and go to state 154
    termino                        shift and go to state 56
    factor                         shift and go to state 57

state 120

    (19) expresionCorcheteR -> [ expresion . ]
    ]               shift and go to state 155


state 121

    (27) IDComaR -> IDComaR , ID .
    ,               reduce using rule 27 (IDComaR -> IDComaR , ID .)
    :               reduce using rule 27 (IDComaR -> IDComaR , ID .)
    )               reduce using rule 27 (IDComaR -> IDComaR , ID .)


state 122

    (31) selectorR -> selectorR selectorRR .
    [               reduce using rule 31 (selectorR -> selectorR selectorRR .)
    .               reduce using rule 31 (selectorR -> selectorR selectorRR .)
    MOD             reduce using rule 31 (selectorR -> selectorR selectorRR .)
    DIV             reduce using rule 31 (selectorR -> selectorR selectorRR .)
    /               reduce using rule 31 (selectorR -> selectorR selectorRR .)
    *               reduce using rule 31 (selectorR -> selectorR selectorRR .)
    -               reduce using rule 31 (selectorR -> selectorR selectorRR .)
    +               reduce using rule 31 (selectorR -> selectorR selectorRR .)
    ;               reduce using rule 31 (selectorR -> selectorR selectorRR .)
    )               reduce using rule 31 (selectorR -> selectorR selectorRR .)
    ]               reduce using rule 31 (selectorR -> selectorR selectorRR .)
    ,               reduce using rule 31 (selectorR -> selectorR selectorRR .)
    :               reduce using rule 31 (selectorR -> selectorR selectorRR .)
    MAYORIGUAL      reduce using rule 31 (selectorR -> selectorR selectorRR .)
    >               reduce using rule 31 (selectorR -> selectorR selectorRR .)
    MENORIGUAL      reduce using rule 31 (selectorR -> selectorR selectorRR .)
    <               reduce using rule 31 (selectorR -> selectorR selectorRR .)
    #               reduce using rule 31 (selectorR -> selectorR selectorRR .)
    =               reduce using rule 31 (selectorR -> selectorR selectorRR .)
    DOBLEPUNTO      reduce using rule 31 (selectorR -> selectorR selectorRR .)
    END             reduce using rule 31 (selectorR -> selectorR selectorRR .)
    ELSIF           reduce using rule 31 (selectorR -> selectorR selectorRR .)
    ELSE            reduce using rule 31 (selectorR -> selectorR selectorRR .)
    |               reduce using rule 31 (selectorR -> selectorR selectorRR .)
    THEN            reduce using rule 31 (selectorR -> selectorR selectorRR .)
    DO              reduce using rule 31 (selectorR -> selectorR selectorRR .)
    error           reduce using rule 31 (selectorR -> selectorR selectorRR .)
    (               reduce using rule 31 (selectorR -> selectorR selectorRR .)
    DOSPUNTOSIGUAL  reduce using rule 31 (selectorR -> selectorR selectorRR .)


state 123

    (32) selectorRR -> [ expresion . ]
    ]               shift and go to state 156


state 124

    (33) selectorRR -> . INTEGER .
    [               reduce using rule 33 (selectorRR -> . INTEGER .)
    .               reduce using rule 33 (selectorRR -> . INTEGER .)
    MOD             reduce using rule 33 (selectorRR -> . INTEGER .)
    DIV             reduce using rule 33 (selectorRR -> . INTEGER .)
    /               reduce using rule 33 (selectorRR -> . INTEGER .)
    *               reduce using rule 33 (selectorRR -> . INTEGER .)
    -               reduce using rule 33 (selectorRR -> . INTEGER .)
    +               reduce using rule 33 (selectorRR -> . INTEGER .)
    ;               reduce using rule 33 (selectorRR -> . INTEGER .)
    )               reduce using rule 33 (selectorRR -> . INTEGER .)
    ]               reduce using rule 33 (selectorRR -> . INTEGER .)
    ,               reduce using rule 33 (selectorRR -> . INTEGER .)
    :               reduce using rule 33 (selectorRR -> . INTEGER .)
    MAYORIGUAL      reduce using rule 33 (selectorRR -> . INTEGER .)
    >               reduce using rule 33 (selectorRR -> . INTEGER .)
    MENORIGUAL      reduce using rule 33 (selectorRR -> . INTEGER .)
    <               reduce using rule 33 (selectorRR -> . INTEGER .)
    #               reduce using rule 33 (selectorRR -> . INTEGER .)
    =               reduce using rule 33 (selectorRR -> . INTEGER .)
    DOBLEPUNTO      reduce using rule 33 (selectorRR -> . INTEGER .)
    END             reduce using rule 33 (selectorRR -> . INTEGER .)
    ELSIF           reduce using rule 33 (selectorRR -> . INTEGER .)
    ELSE            reduce using rule 33 (selectorRR -> . INTEGER .)
    |               reduce using rule 33 (selectorRR -> . INTEGER .)
    THEN            reduce using rule 33 (selectorRR -> . INTEGER .)
    DO              reduce using rule 33 (selectorRR -> . INTEGER .)
    error           reduce using rule 33 (selectorRR -> . INTEGER .)
    (               reduce using rule 33 (selectorRR -> . INTEGER .)
    DOSPUNTOSIGUAL  reduce using rule 33 (selectorRR -> . INTEGER .)


state 125

    (34) selectorRR -> . ID .
    [               reduce using rule 34 (selectorRR -> . ID .)
    .               reduce using rule 34 (selectorRR -> . ID .)
    MOD             reduce using rule 34 (selectorRR -> . ID .)
    DIV             reduce using rule 34 (selectorRR -> . ID .)
    /               reduce using rule 34 (selectorRR -> . ID .)
    *               reduce using rule 34 (selectorRR -> . ID .)
    -               reduce using rule 34 (selectorRR -> . ID .)
    +               reduce using rule 34 (selectorRR -> . ID .)
    ;               reduce using rule 34 (selectorRR -> . ID .)
    )               reduce using rule 34 (selectorRR -> . ID .)
    ]               reduce using rule 34 (selectorRR -> . ID .)
    ,               reduce using rule 34 (selectorRR -> . ID .)
    :               reduce using rule 34 (selectorRR -> . ID .)
    MAYORIGUAL      reduce using rule 34 (selectorRR -> . ID .)
    >               reduce using rule 34 (selectorRR -> . ID .)
    MENORIGUAL      reduce using rule 34 (selectorRR -> . ID .)
    <               reduce using rule 34 (selectorRR -> . ID .)
    #               reduce using rule 34 (selectorRR -> . ID .)
    =               reduce using rule 34 (selectorRR -> . ID .)
    DOBLEPUNTO      reduce using rule 34 (selectorRR -> . ID .)
    END             reduce using rule 34 (selectorRR -> . ID .)
    ELSIF           reduce using rule 34 (selectorRR -> . ID .)
    ELSE            reduce using rule 34 (selectorRR -> . ID .)
    |               reduce using rule 34 (selectorRR -> . ID .)
    THEN            reduce using rule 34 (selectorRR -> . ID .)
    DO              reduce using rule 34 (selectorRR -> . ID .)
    error           reduce using rule 34 (selectorRR -> . ID .)
    (               reduce using rule 34 (selectorRR -> . ID .)
    DOSPUNTOSIGUAL  reduce using rule 34 (selectorRR -> . ID .)


state 126

    (60) terminoMasMenosR -> terminoMasMenosR simbolosMasMenos . termino
    (47) termino -> . factor terminoOperadores
    (35) factor -> . SR ( expresion , expresion )
    (36) factor -> . LATCH ( expresion , expresion )
    (37) factor -> . REG ( expresionComaO expresion
    (38) factor -> . MUX ( expresion , expresion : expresion , expresion , expresion , expresion )
    (39) factor -> . MUX ( expresion : expresion , expresion )
    (40) factor -> . ( expresion )
    (41) factor -> . ~ factor
    (42) factor -> . INTEGER
    (43) factor -> . LOGICVALUE
    (44) factor -> . ID selector
    SR              shift and go to state 58
    LATCH           shift and go to state 60
    REG             shift and go to state 61
    MUX             shift and go to state 62
    (               shift and go to state 59
    ~               shift and go to state 63
    INTEGER         shift and go to state 64
    LOGICVALUE      shift and go to state 65
    ID              shift and go to state 54

    termino                        shift and go to state 157
    factor                         shift and go to state 57

state 127

    (59) terminoMasMenosR -> simbolosMasMenos termino .
    MOD             reduce using rule 59 (terminoMasMenosR -> simbolosMasMenos termino .)
    DIV             reduce using rule 59 (terminoMasMenosR -> simbolosMasMenos termino .)
    /               reduce using rule 59 (terminoMasMenosR -> simbolosMasMenos termino .)
    *               reduce using rule 59 (terminoMasMenosR -> simbolosMasMenos termino .)
    -               reduce using rule 59 (terminoMasMenosR -> simbolosMasMenos termino .)
    +               reduce using rule 59 (terminoMasMenosR -> simbolosMasMenos termino .)
    ;               reduce using rule 59 (terminoMasMenosR -> simbolosMasMenos termino .)
    )               reduce using rule 59 (terminoMasMenosR -> simbolosMasMenos termino .)
    ]               reduce using rule 59 (terminoMasMenosR -> simbolosMasMenos termino .)
    ,               reduce using rule 59 (terminoMasMenosR -> simbolosMasMenos termino .)
    :               reduce using rule 59 (terminoMasMenosR -> simbolosMasMenos termino .)
    MAYORIGUAL      reduce using rule 59 (terminoMasMenosR -> simbolosMasMenos termino .)
    >               reduce using rule 59 (terminoMasMenosR -> simbolosMasMenos termino .)
    MENORIGUAL      reduce using rule 59 (terminoMasMenosR -> simbolosMasMenos termino .)
    <               reduce using rule 59 (terminoMasMenosR -> simbolosMasMenos termino .)
    #               reduce using rule 59 (terminoMasMenosR -> simbolosMasMenos termino .)
    =               reduce using rule 59 (terminoMasMenosR -> simbolosMasMenos termino .)
    DOBLEPUNTO      reduce using rule 59 (terminoMasMenosR -> simbolosMasMenos termino .)
    END             reduce using rule 59 (terminoMasMenosR -> simbolosMasMenos termino .)
    ELSIF           reduce using rule 59 (terminoMasMenosR -> simbolosMasMenos termino .)
    ELSE            reduce using rule 59 (terminoMasMenosR -> simbolosMasMenos termino .)
    |               reduce using rule 59 (terminoMasMenosR -> simbolosMasMenos termino .)
    THEN            reduce using rule 59 (terminoMasMenosR -> simbolosMasMenos termino .)
    DO              reduce using rule 59 (terminoMasMenosR -> simbolosMasMenos termino .)


state 128

    (51) terminoOperadoresR -> terminoOperadoresR simbolosProd . factor
    (35) factor -> . SR ( expresion , expresion )
    (36) factor -> . LATCH ( expresion , expresion )
    (37) factor -> . REG ( expresionComaO expresion
    (38) factor -> . MUX ( expresion , expresion : expresion , expresion , expresion , expresion )
    (39) factor -> . MUX ( expresion : expresion , expresion )
    (40) factor -> . ( expresion )
    (41) factor -> . ~ factor
    (42) factor -> . INTEGER
    (43) factor -> . LOGICVALUE
    (44) factor -> . ID selector
    SR              shift and go to state 58
    LATCH           shift and go to state 60
    REG             shift and go to state 61
    MUX             shift and go to state 62
    (               shift and go to state 59
    ~               shift and go to state 63
    INTEGER         shift and go to state 64
    LOGICVALUE      shift and go to state 65
    ID              shift and go to state 54

    factor                         shift and go to state 158

state 129

    (50) terminoOperadoresR -> simbolosProd factor .
    MOD             reduce using rule 50 (terminoOperadoresR -> simbolosProd factor .)
    DIV             reduce using rule 50 (terminoOperadoresR -> simbolosProd factor .)
    /               reduce using rule 50 (terminoOperadoresR -> simbolosProd factor .)
    *               reduce using rule 50 (terminoOperadoresR -> simbolosProd factor .)
    -               reduce using rule 50 (terminoOperadoresR -> simbolosProd factor .)
    +               reduce using rule 50 (terminoOperadoresR -> simbolosProd factor .)
    ;               reduce using rule 50 (terminoOperadoresR -> simbolosProd factor .)
    )               reduce using rule 50 (terminoOperadoresR -> simbolosProd factor .)
    ]               reduce using rule 50 (terminoOperadoresR -> simbolosProd factor .)
    ,               reduce using rule 50 (terminoOperadoresR -> simbolosProd factor .)
    :               reduce using rule 50 (terminoOperadoresR -> simbolosProd factor .)
    MAYORIGUAL      reduce using rule 50 (terminoOperadoresR -> simbolosProd factor .)
    >               reduce using rule 50 (terminoOperadoresR -> simbolosProd factor .)
    MENORIGUAL      reduce using rule 50 (terminoOperadoresR -> simbolosProd factor .)
    <               reduce using rule 50 (terminoOperadoresR -> simbolosProd factor .)
    #               reduce using rule 50 (terminoOperadoresR -> simbolosProd factor .)
    =               reduce using rule 50 (terminoOperadoresR -> simbolosProd factor .)
    DOBLEPUNTO      reduce using rule 50 (terminoOperadoresR -> simbolosProd factor .)
    END             reduce using rule 50 (terminoOperadoresR -> simbolosProd factor .)
    ELSIF           reduce using rule 50 (terminoOperadoresR -> simbolosProd factor .)
    ELSE            reduce using rule 50 (terminoOperadoresR -> simbolosProd factor .)
    |               reduce using rule 50 (terminoOperadoresR -> simbolosProd factor .)
    THEN            reduce using rule 50 (terminoOperadoresR -> simbolosProd factor .)
    DO              reduce using rule 50 (terminoOperadoresR -> simbolosProd factor .)


state 130

    (35) factor -> SR ( expresion . , expresion )
    ,               shift and go to state 159


state 131

    (40) factor -> ( expresion ) .
    MOD             reduce using rule 40 (factor -> ( expresion ) .)
    DIV             reduce using rule 40 (factor -> ( expresion ) .)
    /               reduce using rule 40 (factor -> ( expresion ) .)
    *               reduce using rule 40 (factor -> ( expresion ) .)
    -               reduce using rule 40 (factor -> ( expresion ) .)
    +               reduce using rule 40 (factor -> ( expresion ) .)
    ;               reduce using rule 40 (factor -> ( expresion ) .)
    )               reduce using rule 40 (factor -> ( expresion ) .)
    ]               reduce using rule 40 (factor -> ( expresion ) .)
    ,               reduce using rule 40 (factor -> ( expresion ) .)
    :               reduce using rule 40 (factor -> ( expresion ) .)
    MAYORIGUAL      reduce using rule 40 (factor -> ( expresion ) .)
    >               reduce using rule 40 (factor -> ( expresion ) .)
    MENORIGUAL      reduce using rule 40 (factor -> ( expresion ) .)
    <               reduce using rule 40 (factor -> ( expresion ) .)
    #               reduce using rule 40 (factor -> ( expresion ) .)
    =               reduce using rule 40 (factor -> ( expresion ) .)
    DOBLEPUNTO      reduce using rule 40 (factor -> ( expresion ) .)
    END             reduce using rule 40 (factor -> ( expresion ) .)
    ELSIF           reduce using rule 40 (factor -> ( expresion ) .)
    ELSE            reduce using rule 40 (factor -> ( expresion ) .)
    |               reduce using rule 40 (factor -> ( expresion ) .)
    THEN            reduce using rule 40 (factor -> ( expresion ) .)
    DO              reduce using rule 40 (factor -> ( expresion ) .)


state 132

    (36) factor -> LATCH ( expresion . , expresion )
    ,               shift and go to state 160


state 133

    (37) factor -> REG ( expresionComaO . expresion
    (56) expresion -> . termino terminoMasMenos
    (47) termino -> . factor terminoOperadores
    (35) factor -> . SR ( expresion , expresion )
    (36) factor -> . LATCH ( expresion , expresion )
    (37) factor -> . REG ( expresionComaO expresion
    (38) factor -> . MUX ( expresion , expresion : expresion , expresion , expresion , expresion )
    (39) factor -> . MUX ( expresion : expresion , expresion )
    (40) factor -> . ( expresion )
    (41) factor -> . ~ factor
    (42) factor -> . INTEGER
    (43) factor -> . LOGICVALUE
    (44) factor -> . ID selector
    SR              shift and go to state 58
    LATCH           shift and go to state 60
    REG             shift and go to state 61
    MUX             shift and go to state 62
    (               shift and go to state 59
    ~               shift and go to state 63
    INTEGER         shift and go to state 64
    LOGICVALUE      shift and go to state 65
    ID              shift and go to state 54

    expresion                      shift and go to state 161
    termino                        shift and go to state 56
    factor                         shift and go to state 57

state 134

    (46) expresionComaO -> expresion . ,
    ,               shift and go to state 162


state 135

    (45) expresionComaO -> empty .
    SR              reduce using rule 45 (expresionComaO -> empty .)
    LATCH           reduce using rule 45 (expresionComaO -> empty .)
    REG             reduce using rule 45 (expresionComaO -> empty .)
    MUX             reduce using rule 45 (expresionComaO -> empty .)
    (               reduce using rule 45 (expresionComaO -> empty .)
    ~               reduce using rule 45 (expresionComaO -> empty .)
    INTEGER         reduce using rule 45 (expresionComaO -> empty .)
    LOGICVALUE      reduce using rule 45 (expresionComaO -> empty .)
    ID              reduce using rule 45 (expresionComaO -> empty .)


state 136

    (38) factor -> MUX ( expresion . , expresion : expresion , expresion , expresion , expresion )
    (39) factor -> MUX ( expresion . : expresion , expresion )
    ,               shift and go to state 163
    :               shift and go to state 164


state 137

    (124) declaracionTipo -> TYPE ID simboloPor listaIdParentesis ; declaracionConstanteCONST tipoFormalIN . tipoFormlINOUT declaracionVariableOUT declaracionVariableVAR sentenciaSecuenciaBEGIN END ID
    (135) tipoFormlINOUT -> . empty
    (136) tipoFormlINOUT -> . INOUT tipoFormlBuslistaId
    (143) empty -> .
    INOUT           shift and go to state 167
    OUT             reduce using rule 143 (empty -> .)
    VAR             reduce using rule 143 (empty -> .)
    BEGIN           reduce using rule 143 (empty -> .)
    END             reduce using rule 143 (empty -> .)

    tipoFormlINOUT                 shift and go to state 165
    empty                          shift and go to state 166

state 138

    (129) tipoFormalIN -> empty .
    INOUT           reduce using rule 129 (tipoFormalIN -> empty .)
    OUT             reduce using rule 129 (tipoFormalIN -> empty .)
    VAR             reduce using rule 129 (tipoFormalIN -> empty .)
    BEGIN           reduce using rule 129 (tipoFormalIN -> empty .)
    END             reduce using rule 129 (tipoFormalIN -> empty .)


state 139

    (130) tipoFormalIN -> IN . tipoFormallistaId
    (131) tipoFormallistaId -> . empty
    (132) tipoFormallistaId -> . tipoFormallistaIdR
    (143) empty -> .
    (133) tipoFormallistaIdR -> . listaId : tipoFormal ;
    (134) tipoFormallistaIdR -> . tipoFormallistaIdR listaId : tipoFormal ;
    (23) listaId -> . ID IDComa
    INOUT           reduce using rule 143 (empty -> .)
    OUT             reduce using rule 143 (empty -> .)
    VAR             reduce using rule 143 (empty -> .)
    BEGIN           reduce using rule 143 (empty -> .)
    END             reduce using rule 143 (empty -> .)
    ID              shift and go to state 38

    tipoFormallistaId              shift and go to state 168
    empty                          shift and go to state 169
    tipoFormallistaIdR             shift and go to state 170
    listaId                        shift and go to state 171

state 140

    (3) modulo -> MODULE ID ; declaracionTipoPuntoComa declaracionConstanteCONST declaracionVariableIN declaracionVariableINOUT declaracionVariableOUT declaracionVariableVAR sentenciaSecuenciaBEGIN END . ID .
    ID              shift and go to state 172


state 141

    (110) sentenciaSecuenciaBEGIN -> BEGIN sentenciaSecuencia .
    END             reduce using rule 110 (sentenciaSecuenciaBEGIN -> BEGIN sentenciaSecuencia .)


state 142

    (86) sentenciaSecuencia -> sentencia . sentenciaPuntoComa
    (87) sentenciaPuntoComa -> . empty
    (88) sentenciaPuntoComa -> . sentenciaPuntoComaR
    (143) empty -> .
    (89) sentenciaPuntoComaR -> . ; sentencia
    (90) sentenciaPuntoComaR -> . sentenciaPuntoComaR ; sentencia
    END             reduce using rule 143 (empty -> .)
    ELSIF           reduce using rule 143 (empty -> .)
    ELSE            reduce using rule 143 (empty -> .)
    ;               shift and go to state 176

    sentenciaPuntoComa             shift and go to state 173
    empty                          shift and go to state 174
    sentenciaPuntoComaR            shift and go to state 175

state 143

    (81) sentencia -> empty .
    ;               reduce using rule 81 (sentencia -> empty .)
    END             reduce using rule 81 (sentencia -> empty .)
    ELSIF           reduce using rule 81 (sentencia -> empty .)
    ELSE            reduce using rule 81 (sentencia -> empty .)


state 144

    (82) sentencia -> sentenciaPara .
    ;               reduce using rule 82 (sentencia -> sentenciaPara .)
    END             reduce using rule 82 (sentencia -> sentenciaPara .)
    ELSIF           reduce using rule 82 (sentencia -> sentenciaPara .)
    ELSE            reduce using rule 82 (sentencia -> sentenciaPara .)


state 145

    (83) sentencia -> sentenciaSi .
    ;               reduce using rule 83 (sentencia -> sentenciaSi .)
    END             reduce using rule 83 (sentencia -> sentenciaSi .)
    ELSIF           reduce using rule 83 (sentencia -> sentenciaSi .)
    ELSE            reduce using rule 83 (sentencia -> sentenciaSi .)


state 146

    (84) sentencia -> asignacionUnidad .
    ;               reduce using rule 84 (sentencia -> asignacionUnidad .)
    END             reduce using rule 84 (sentencia -> asignacionUnidad .)
    ELSIF           reduce using rule 84 (sentencia -> asignacionUnidad .)
    ELSE            reduce using rule 84 (sentencia -> asignacionUnidad .)


state 147

    (85) sentencia -> asignacion .
    ;               reduce using rule 85 (sentencia -> asignacion .)
    END             reduce using rule 85 (sentencia -> asignacion .)
    ELSIF           reduce using rule 85 (sentencia -> asignacion .)
    ELSE            reduce using rule 85 (sentencia -> asignacion .)


state 148

    (80) sentenciaPara -> FOR . ID DOSPUNTOSIGUAL expresion DOBLEPUNTO expresion DO sentenciaSecuencia END
    ID              shift and go to state 177


state 149

    (141) asignacionUnidad -> ID . selector error listaExpresiones )
    (142) asignacionUnidad -> ID . selector ( listaExpresiones )
    (63) asignacion -> ID . selector DOSPUNTOSIGUAL condicion | expresion
    (64) asignacion -> ID . selector DOSPUNTOSIGUAL expresion
    (28) selector -> . empty
    (29) selector -> . selectorR
    (143) empty -> .
    (30) selectorR -> . selectorRR
    (31) selectorR -> . selectorR selectorRR
    (32) selectorRR -> . [ expresion ]
    (33) selectorRR -> . . INTEGER
    (34) selectorRR -> . . ID
    error           reduce using rule 143 (empty -> .)
    (               reduce using rule 143 (empty -> .)
    DOSPUNTOSIGUAL  reduce using rule 143 (empty -> .)
    [               shift and go to state 83
    .               shift and go to state 84

    selector                       shift and go to state 178
    empty                          shift and go to state 80
    selectorR                      shift and go to state 81
    selectorRR                     shift and go to state 82

state 150

    (73) sentenciaSi -> IF . relacion THEN sentenciaSecuencia sentenciaSiSino sentenciaSiEntonces END
    (66) relacion -> . expresion simbolosRelacion expresion
    (56) expresion -> . termino terminoMasMenos
    (47) termino -> . factor terminoOperadores
    (35) factor -> . SR ( expresion , expresion )
    (36) factor -> . LATCH ( expresion , expresion )
    (37) factor -> . REG ( expresionComaO expresion
    (38) factor -> . MUX ( expresion , expresion : expresion , expresion , expresion , expresion )
    (39) factor -> . MUX ( expresion : expresion , expresion )
    (40) factor -> . ( expresion )
    (41) factor -> . ~ factor
    (42) factor -> . INTEGER
    (43) factor -> . LOGICVALUE
    (44) factor -> . ID selector
    SR              shift and go to state 58
    LATCH           shift and go to state 60
    REG             shift and go to state 61
    MUX             shift and go to state 62
    (               shift and go to state 59
    ~               shift and go to state 63
    INTEGER         shift and go to state 64
    LOGICVALUE      shift and go to state 65
    ID              shift and go to state 54

    relacion                       shift and go to state 179
    expresion                      shift and go to state 180
    termino                        shift and go to state 56
    factor                         shift and go to state 57

state 151

    (4) tipoSimple -> ID conjuntoExpresiones .
    ;               reduce using rule 4 (tipoSimple -> ID conjuntoExpresiones .)


state 152

    (9) conjuntoExpresiones -> ( . listaExpresiones )
    (11) listaExpresiones -> . expresion expresionComa
    (56) expresion -> . termino terminoMasMenos
    (47) termino -> . factor terminoOperadores
    (35) factor -> . SR ( expresion , expresion )
    (36) factor -> . LATCH ( expresion , expresion )
    (37) factor -> . REG ( expresionComaO expresion
    (38) factor -> . MUX ( expresion , expresion : expresion , expresion , expresion , expresion )
    (39) factor -> . MUX ( expresion : expresion , expresion )
    (40) factor -> . ( expresion )
    (41) factor -> . ~ factor
    (42) factor -> . INTEGER
    (43) factor -> . LOGICVALUE
    (44) factor -> . ID selector
    SR              shift and go to state 58
    LATCH           shift and go to state 60
    REG             shift and go to state 61
    MUX             shift and go to state 62
    (               shift and go to state 59
    ~               shift and go to state 63
    INTEGER         shift and go to state 64
    LOGICVALUE      shift and go to state 65
    ID              shift and go to state 54

    listaExpresiones               shift and go to state 181
    expresion                      shift and go to state 182
    termino                        shift and go to state 56
    factor                         shift and go to state 57

state 153

    (10) conjuntoExpresiones -> empty .
    ;               reduce using rule 10 (conjuntoExpresiones -> empty .)


state 154

    (20) expresionCorcheteR -> expresionCorcheteR [ expresion . ]
    ]               shift and go to state 183


state 155

    (19) expresionCorcheteR -> [ expresion ] .
    [               reduce using rule 19 (expresionCorcheteR -> [ expresion ] .)
    ID              reduce using rule 19 (expresionCorcheteR -> [ expresion ] .)
    OC              reduce using rule 19 (expresionCorcheteR -> [ expresion ] .)
    TS              reduce using rule 19 (expresionCorcheteR -> [ expresion ] .)
    BIT             reduce using rule 19 (expresionCorcheteR -> [ expresion ] .)


state 156

    (32) selectorRR -> [ expresion ] .
    [               reduce using rule 32 (selectorRR -> [ expresion ] .)
    .               reduce using rule 32 (selectorRR -> [ expresion ] .)
    MOD             reduce using rule 32 (selectorRR -> [ expresion ] .)
    DIV             reduce using rule 32 (selectorRR -> [ expresion ] .)
    /               reduce using rule 32 (selectorRR -> [ expresion ] .)
    *               reduce using rule 32 (selectorRR -> [ expresion ] .)
    -               reduce using rule 32 (selectorRR -> [ expresion ] .)
    +               reduce using rule 32 (selectorRR -> [ expresion ] .)
    ;               reduce using rule 32 (selectorRR -> [ expresion ] .)
    )               reduce using rule 32 (selectorRR -> [ expresion ] .)
    ]               reduce using rule 32 (selectorRR -> [ expresion ] .)
    ,               reduce using rule 32 (selectorRR -> [ expresion ] .)
    :               reduce using rule 32 (selectorRR -> [ expresion ] .)
    MAYORIGUAL      reduce using rule 32 (selectorRR -> [ expresion ] .)
    >               reduce using rule 32 (selectorRR -> [ expresion ] .)
    MENORIGUAL      reduce using rule 32 (selectorRR -> [ expresion ] .)
    <               reduce using rule 32 (selectorRR -> [ expresion ] .)
    #               reduce using rule 32 (selectorRR -> [ expresion ] .)
    =               reduce using rule 32 (selectorRR -> [ expresion ] .)
    DOBLEPUNTO      reduce using rule 32 (selectorRR -> [ expresion ] .)
    END             reduce using rule 32 (selectorRR -> [ expresion ] .)
    ELSIF           reduce using rule 32 (selectorRR -> [ expresion ] .)
    ELSE            reduce using rule 32 (selectorRR -> [ expresion ] .)
    |               reduce using rule 32 (selectorRR -> [ expresion ] .)
    THEN            reduce using rule 32 (selectorRR -> [ expresion ] .)
    DO              reduce using rule 32 (selectorRR -> [ expresion ] .)
    error           reduce using rule 32 (selectorRR -> [ expresion ] .)
    (               reduce using rule 32 (selectorRR -> [ expresion ] .)
    DOSPUNTOSIGUAL  reduce using rule 32 (selectorRR -> [ expresion ] .)


state 157

    (60) terminoMasMenosR -> terminoMasMenosR simbolosMasMenos termino .
    MOD             reduce using rule 60 (terminoMasMenosR -> terminoMasMenosR simbolosMasMenos termino .)
    DIV             reduce using rule 60 (terminoMasMenosR -> terminoMasMenosR simbolosMasMenos termino .)
    /               reduce using rule 60 (terminoMasMenosR -> terminoMasMenosR simbolosMasMenos termino .)
    *               reduce using rule 60 (terminoMasMenosR -> terminoMasMenosR simbolosMasMenos termino .)
    -               reduce using rule 60 (terminoMasMenosR -> terminoMasMenosR simbolosMasMenos termino .)
    +               reduce using rule 60 (terminoMasMenosR -> terminoMasMenosR simbolosMasMenos termino .)
    ;               reduce using rule 60 (terminoMasMenosR -> terminoMasMenosR simbolosMasMenos termino .)
    )               reduce using rule 60 (terminoMasMenosR -> terminoMasMenosR simbolosMasMenos termino .)
    ]               reduce using rule 60 (terminoMasMenosR -> terminoMasMenosR simbolosMasMenos termino .)
    ,               reduce using rule 60 (terminoMasMenosR -> terminoMasMenosR simbolosMasMenos termino .)
    :               reduce using rule 60 (terminoMasMenosR -> terminoMasMenosR simbolosMasMenos termino .)
    MAYORIGUAL      reduce using rule 60 (terminoMasMenosR -> terminoMasMenosR simbolosMasMenos termino .)
    >               reduce using rule 60 (terminoMasMenosR -> terminoMasMenosR simbolosMasMenos termino .)
    MENORIGUAL      reduce using rule 60 (terminoMasMenosR -> terminoMasMenosR simbolosMasMenos termino .)
    <               reduce using rule 60 (terminoMasMenosR -> terminoMasMenosR simbolosMasMenos termino .)
    #               reduce using rule 60 (terminoMasMenosR -> terminoMasMenosR simbolosMasMenos termino .)
    =               reduce using rule 60 (terminoMasMenosR -> terminoMasMenosR simbolosMasMenos termino .)
    DOBLEPUNTO      reduce using rule 60 (terminoMasMenosR -> terminoMasMenosR simbolosMasMenos termino .)
    END             reduce using rule 60 (terminoMasMenosR -> terminoMasMenosR simbolosMasMenos termino .)
    ELSIF           reduce using rule 60 (terminoMasMenosR -> terminoMasMenosR simbolosMasMenos termino .)
    ELSE            reduce using rule 60 (terminoMasMenosR -> terminoMasMenosR simbolosMasMenos termino .)
    |               reduce using rule 60 (terminoMasMenosR -> terminoMasMenosR simbolosMasMenos termino .)
    THEN            reduce using rule 60 (terminoMasMenosR -> terminoMasMenosR simbolosMasMenos termino .)
    DO              reduce using rule 60 (terminoMasMenosR -> terminoMasMenosR simbolosMasMenos termino .)


state 158

    (51) terminoOperadoresR -> terminoOperadoresR simbolosProd factor .
    MOD             reduce using rule 51 (terminoOperadoresR -> terminoOperadoresR simbolosProd factor .)
    DIV             reduce using rule 51 (terminoOperadoresR -> terminoOperadoresR simbolosProd factor .)
    /               reduce using rule 51 (terminoOperadoresR -> terminoOperadoresR simbolosProd factor .)
    *               reduce using rule 51 (terminoOperadoresR -> terminoOperadoresR simbolosProd factor .)
    -               reduce using rule 51 (terminoOperadoresR -> terminoOperadoresR simbolosProd factor .)
    +               reduce using rule 51 (terminoOperadoresR -> terminoOperadoresR simbolosProd factor .)
    ;               reduce using rule 51 (terminoOperadoresR -> terminoOperadoresR simbolosProd factor .)
    )               reduce using rule 51 (terminoOperadoresR -> terminoOperadoresR simbolosProd factor .)
    ]               reduce using rule 51 (terminoOperadoresR -> terminoOperadoresR simbolosProd factor .)
    ,               reduce using rule 51 (terminoOperadoresR -> terminoOperadoresR simbolosProd factor .)
    :               reduce using rule 51 (terminoOperadoresR -> terminoOperadoresR simbolosProd factor .)
    MAYORIGUAL      reduce using rule 51 (terminoOperadoresR -> terminoOperadoresR simbolosProd factor .)
    >               reduce using rule 51 (terminoOperadoresR -> terminoOperadoresR simbolosProd factor .)
    MENORIGUAL      reduce using rule 51 (terminoOperadoresR -> terminoOperadoresR simbolosProd factor .)
    <               reduce using rule 51 (terminoOperadoresR -> terminoOperadoresR simbolosProd factor .)
    #               reduce using rule 51 (terminoOperadoresR -> terminoOperadoresR simbolosProd factor .)
    =               reduce using rule 51 (terminoOperadoresR -> terminoOperadoresR simbolosProd factor .)
    DOBLEPUNTO      reduce using rule 51 (terminoOperadoresR -> terminoOperadoresR simbolosProd factor .)
    END             reduce using rule 51 (terminoOperadoresR -> terminoOperadoresR simbolosProd factor .)
    ELSIF           reduce using rule 51 (terminoOperadoresR -> terminoOperadoresR simbolosProd factor .)
    ELSE            reduce using rule 51 (terminoOperadoresR -> terminoOperadoresR simbolosProd factor .)
    |               reduce using rule 51 (terminoOperadoresR -> terminoOperadoresR simbolosProd factor .)
    THEN            reduce using rule 51 (terminoOperadoresR -> terminoOperadoresR simbolosProd factor .)
    DO              reduce using rule 51 (terminoOperadoresR -> terminoOperadoresR simbolosProd factor .)


state 159

    (35) factor -> SR ( expresion , . expresion )
    (56) expresion -> . termino terminoMasMenos
    (47) termino -> . factor terminoOperadores
    (35) factor -> . SR ( expresion , expresion )
    (36) factor -> . LATCH ( expresion , expresion )
    (37) factor -> . REG ( expresionComaO expresion
    (38) factor -> . MUX ( expresion , expresion : expresion , expresion , expresion , expresion )
    (39) factor -> . MUX ( expresion : expresion , expresion )
    (40) factor -> . ( expresion )
    (41) factor -> . ~ factor
    (42) factor -> . INTEGER
    (43) factor -> . LOGICVALUE
    (44) factor -> . ID selector
    SR              shift and go to state 58
    LATCH           shift and go to state 60
    REG             shift and go to state 61
    MUX             shift and go to state 62
    (               shift and go to state 59
    ~               shift and go to state 63
    INTEGER         shift and go to state 64
    LOGICVALUE      shift and go to state 65
    ID              shift and go to state 54

    expresion                      shift and go to state 184
    termino                        shift and go to state 56
    factor                         shift and go to state 57

state 160

    (36) factor -> LATCH ( expresion , . expresion )
    (56) expresion -> . termino terminoMasMenos
    (47) termino -> . factor terminoOperadores
    (35) factor -> . SR ( expresion , expresion )
    (36) factor -> . LATCH ( expresion , expresion )
    (37) factor -> . REG ( expresionComaO expresion
    (38) factor -> . MUX ( expresion , expresion : expresion , expresion , expresion , expresion )
    (39) factor -> . MUX ( expresion : expresion , expresion )
    (40) factor -> . ( expresion )
    (41) factor -> . ~ factor
    (42) factor -> . INTEGER
    (43) factor -> . LOGICVALUE
    (44) factor -> . ID selector
    SR              shift and go to state 58
    LATCH           shift and go to state 60
    REG             shift and go to state 61
    MUX             shift and go to state 62
    (               shift and go to state 59
    ~               shift and go to state 63
    INTEGER         shift and go to state 64
    LOGICVALUE      shift and go to state 65
    ID              shift and go to state 54

    expresion                      shift and go to state 185
    termino                        shift and go to state 56
    factor                         shift and go to state 57

state 161

    (37) factor -> REG ( expresionComaO expresion .
    MOD             reduce using rule 37 (factor -> REG ( expresionComaO expresion .)
    DIV             reduce using rule 37 (factor -> REG ( expresionComaO expresion .)
    /               reduce using rule 37 (factor -> REG ( expresionComaO expresion .)
    *               reduce using rule 37 (factor -> REG ( expresionComaO expresion .)
    -               reduce using rule 37 (factor -> REG ( expresionComaO expresion .)
    +               reduce using rule 37 (factor -> REG ( expresionComaO expresion .)
    ;               reduce using rule 37 (factor -> REG ( expresionComaO expresion .)
    )               reduce using rule 37 (factor -> REG ( expresionComaO expresion .)
    ]               reduce using rule 37 (factor -> REG ( expresionComaO expresion .)
    ,               reduce using rule 37 (factor -> REG ( expresionComaO expresion .)
    :               reduce using rule 37 (factor -> REG ( expresionComaO expresion .)
    MAYORIGUAL      reduce using rule 37 (factor -> REG ( expresionComaO expresion .)
    >               reduce using rule 37 (factor -> REG ( expresionComaO expresion .)
    MENORIGUAL      reduce using rule 37 (factor -> REG ( expresionComaO expresion .)
    <               reduce using rule 37 (factor -> REG ( expresionComaO expresion .)
    #               reduce using rule 37 (factor -> REG ( expresionComaO expresion .)
    =               reduce using rule 37 (factor -> REG ( expresionComaO expresion .)
    DOBLEPUNTO      reduce using rule 37 (factor -> REG ( expresionComaO expresion .)
    END             reduce using rule 37 (factor -> REG ( expresionComaO expresion .)
    ELSIF           reduce using rule 37 (factor -> REG ( expresionComaO expresion .)
    ELSE            reduce using rule 37 (factor -> REG ( expresionComaO expresion .)
    |               reduce using rule 37 (factor -> REG ( expresionComaO expresion .)
    THEN            reduce using rule 37 (factor -> REG ( expresionComaO expresion .)
    DO              reduce using rule 37 (factor -> REG ( expresionComaO expresion .)


state 162

    (46) expresionComaO -> expresion , .
    SR              reduce using rule 46 (expresionComaO -> expresion , .)
    LATCH           reduce using rule 46 (expresionComaO -> expresion , .)
    REG             reduce using rule 46 (expresionComaO -> expresion , .)
    MUX             reduce using rule 46 (expresionComaO -> expresion , .)
    (               reduce using rule 46 (expresionComaO -> expresion , .)
    ~               reduce using rule 46 (expresionComaO -> expresion , .)
    INTEGER         reduce using rule 46 (expresionComaO -> expresion , .)
    LOGICVALUE      reduce using rule 46 (expresionComaO -> expresion , .)
    ID              reduce using rule 46 (expresionComaO -> expresion , .)


state 163

    (38) factor -> MUX ( expresion , . expresion : expresion , expresion , expresion , expresion )
    (56) expresion -> . termino terminoMasMenos
    (47) termino -> . factor terminoOperadores
    (35) factor -> . SR ( expresion , expresion )
    (36) factor -> . LATCH ( expresion , expresion )
    (37) factor -> . REG ( expresionComaO expresion
    (38) factor -> . MUX ( expresion , expresion : expresion , expresion , expresion , expresion )
    (39) factor -> . MUX ( expresion : expresion , expresion )
    (40) factor -> . ( expresion )
    (41) factor -> . ~ factor
    (42) factor -> . INTEGER
    (43) factor -> . LOGICVALUE
    (44) factor -> . ID selector
    SR              shift and go to state 58
    LATCH           shift and go to state 60
    REG             shift and go to state 61
    MUX             shift and go to state 62
    (               shift and go to state 59
    ~               shift and go to state 63
    INTEGER         shift and go to state 64
    LOGICVALUE      shift and go to state 65
    ID              shift and go to state 54

    expresion                      shift and go to state 186
    termino                        shift and go to state 56
    factor                         shift and go to state 57

state 164

    (39) factor -> MUX ( expresion : . expresion , expresion )
    (56) expresion -> . termino terminoMasMenos
    (47) termino -> . factor terminoOperadores
    (35) factor -> . SR ( expresion , expresion )
    (36) factor -> . LATCH ( expresion , expresion )
    (37) factor -> . REG ( expresionComaO expresion
    (38) factor -> . MUX ( expresion , expresion : expresion , expresion , expresion , expresion )
    (39) factor -> . MUX ( expresion : expresion , expresion )
    (40) factor -> . ( expresion )
    (41) factor -> . ~ factor
    (42) factor -> . INTEGER
    (43) factor -> . LOGICVALUE
    (44) factor -> . ID selector
    SR              shift and go to state 58
    LATCH           shift and go to state 60
    REG             shift and go to state 61
    MUX             shift and go to state 62
    (               shift and go to state 59
    ~               shift and go to state 63
    INTEGER         shift and go to state 64
    LOGICVALUE      shift and go to state 65
    ID              shift and go to state 54

    expresion                      shift and go to state 187
    termino                        shift and go to state 56
    factor                         shift and go to state 57

state 165

    (124) declaracionTipo -> TYPE ID simboloPor listaIdParentesis ; declaracionConstanteCONST tipoFormalIN tipoFormlINOUT . declaracionVariableOUT declaracionVariableVAR sentenciaSecuenciaBEGIN END ID
    (105) declaracionVariableOUT -> . empty
    (106) declaracionVariableOUT -> . OUT declaracionVariableRecursivo
    (143) empty -> .
    OUT             shift and go to state 46
    VAR             reduce using rule 143 (empty -> .)
    BEGIN           reduce using rule 143 (empty -> .)
    END             reduce using rule 143 (empty -> .)

    declaracionVariableOUT         shift and go to state 188
    empty                          shift and go to state 45

state 166

    (135) tipoFormlINOUT -> empty .
    OUT             reduce using rule 135 (tipoFormlINOUT -> empty .)
    VAR             reduce using rule 135 (tipoFormlINOUT -> empty .)
    BEGIN           reduce using rule 135 (tipoFormlINOUT -> empty .)
    END             reduce using rule 135 (tipoFormlINOUT -> empty .)


state 167

    (136) tipoFormlINOUT -> INOUT . tipoFormlBuslistaId
    (137) tipoFormlBuslistaId -> . empty
    (138) tipoFormlBuslistaId -> . tipoFormlBuslistaIdR
    (143) empty -> .
    (139) tipoFormlBuslistaIdR -> . listaId : tipoFormalBus ;
    (140) tipoFormlBuslistaIdR -> . tipoFormlBuslistaIdR listaId : tipoFormalBus ;
    (23) listaId -> . ID IDComa
    OUT             reduce using rule 143 (empty -> .)
    VAR             reduce using rule 143 (empty -> .)
    BEGIN           reduce using rule 143 (empty -> .)
    END             reduce using rule 143 (empty -> .)
    ID              shift and go to state 38

    tipoFormlBuslistaId            shift and go to state 189
    empty                          shift and go to state 190
    tipoFormlBuslistaIdR           shift and go to state 191
    listaId                        shift and go to state 192

state 168

    (130) tipoFormalIN -> IN tipoFormallistaId .
    INOUT           reduce using rule 130 (tipoFormalIN -> IN tipoFormallistaId .)
    OUT             reduce using rule 130 (tipoFormalIN -> IN tipoFormallistaId .)
    VAR             reduce using rule 130 (tipoFormalIN -> IN tipoFormallistaId .)
    BEGIN           reduce using rule 130 (tipoFormalIN -> IN tipoFormallistaId .)
    END             reduce using rule 130 (tipoFormalIN -> IN tipoFormallistaId .)


state 169

    (131) tipoFormallistaId -> empty .
    INOUT           reduce using rule 131 (tipoFormallistaId -> empty .)
    OUT             reduce using rule 131 (tipoFormallistaId -> empty .)
    VAR             reduce using rule 131 (tipoFormallistaId -> empty .)
    BEGIN           reduce using rule 131 (tipoFormallistaId -> empty .)
    END             reduce using rule 131 (tipoFormallistaId -> empty .)


state 170

    (132) tipoFormallistaId -> tipoFormallistaIdR .
    (134) tipoFormallistaIdR -> tipoFormallistaIdR . listaId : tipoFormal ;
    (23) listaId -> . ID IDComa
    INOUT           reduce using rule 132 (tipoFormallistaId -> tipoFormallistaIdR .)
    OUT             reduce using rule 132 (tipoFormallistaId -> tipoFormallistaIdR .)
    VAR             reduce using rule 132 (tipoFormallistaId -> tipoFormallistaIdR .)
    BEGIN           reduce using rule 132 (tipoFormallistaId -> tipoFormallistaIdR .)
    END             reduce using rule 132 (tipoFormallistaId -> tipoFormallistaIdR .)
    ID              shift and go to state 38

    listaId                        shift and go to state 193

state 171

    (133) tipoFormallistaIdR -> listaId . : tipoFormal ;
    :               shift and go to state 194


state 172

    (3) modulo -> MODULE ID ; declaracionTipoPuntoComa declaracionConstanteCONST declaracionVariableIN declaracionVariableINOUT declaracionVariableOUT declaracionVariableVAR sentenciaSecuenciaBEGIN END ID . .
    .               shift and go to state 195


state 173

    (86) sentenciaSecuencia -> sentencia sentenciaPuntoComa .
    END             reduce using rule 86 (sentenciaSecuencia -> sentencia sentenciaPuntoComa .)
    ELSIF           reduce using rule 86 (sentenciaSecuencia -> sentencia sentenciaPuntoComa .)
    ELSE            reduce using rule 86 (sentenciaSecuencia -> sentencia sentenciaPuntoComa .)


state 174

    (87) sentenciaPuntoComa -> empty .
    END             reduce using rule 87 (sentenciaPuntoComa -> empty .)
    ELSIF           reduce using rule 87 (sentenciaPuntoComa -> empty .)
    ELSE            reduce using rule 87 (sentenciaPuntoComa -> empty .)


state 175

    (88) sentenciaPuntoComa -> sentenciaPuntoComaR .
    (90) sentenciaPuntoComaR -> sentenciaPuntoComaR . ; sentencia
    END             reduce using rule 88 (sentenciaPuntoComa -> sentenciaPuntoComaR .)
    ELSIF           reduce using rule 88 (sentenciaPuntoComa -> sentenciaPuntoComaR .)
    ELSE            reduce using rule 88 (sentenciaPuntoComa -> sentenciaPuntoComaR .)
    ;               shift and go to state 196


state 176

    (89) sentenciaPuntoComaR -> ; . sentencia
    (81) sentencia -> . empty
    (82) sentencia -> . sentenciaPara
    (83) sentencia -> . sentenciaSi
    (84) sentencia -> . asignacionUnidad
    (85) sentencia -> . asignacion
    (143) empty -> .
    (80) sentenciaPara -> . FOR ID DOSPUNTOSIGUAL expresion DOBLEPUNTO expresion DO sentenciaSecuencia END
    (73) sentenciaSi -> . IF relacion THEN sentenciaSecuencia sentenciaSiSino sentenciaSiEntonces END
    (141) asignacionUnidad -> . ID selector error listaExpresiones )
    (142) asignacionUnidad -> . ID selector ( listaExpresiones )
    (63) asignacion -> . ID selector DOSPUNTOSIGUAL condicion | expresion
    (64) asignacion -> . ID selector DOSPUNTOSIGUAL expresion
    ;               reduce using rule 143 (empty -> .)
    END             reduce using rule 143 (empty -> .)
    ELSIF           reduce using rule 143 (empty -> .)
    ELSE            reduce using rule 143 (empty -> .)
    FOR             shift and go to state 148
    IF              shift and go to state 150
    ID              shift and go to state 149

    sentencia                      shift and go to state 197
    empty                          shift and go to state 143
    sentenciaPara                  shift and go to state 144
    sentenciaSi                    shift and go to state 145
    asignacionUnidad               shift and go to state 146
    asignacion                     shift and go to state 147

state 177

    (80) sentenciaPara -> FOR ID . DOSPUNTOSIGUAL expresion DOBLEPUNTO expresion DO sentenciaSecuencia END
    DOSPUNTOSIGUAL  shift and go to state 198


state 178

    (141) asignacionUnidad -> ID selector . error listaExpresiones )
    (142) asignacionUnidad -> ID selector . ( listaExpresiones )
    (63) asignacion -> ID selector . DOSPUNTOSIGUAL condicion | expresion
    (64) asignacion -> ID selector . DOSPUNTOSIGUAL expresion
    error           shift and go to state 199
    (               shift and go to state 200
    DOSPUNTOSIGUAL  shift and go to state 201


state 179

    (73) sentenciaSi -> IF relacion . THEN sentenciaSecuencia sentenciaSiSino sentenciaSiEntonces END
    THEN            shift and go to state 202


state 180

    (66) relacion -> expresion . simbolosRelacion expresion
    (67) simbolosRelacion -> . MAYORIGUAL
    (68) simbolosRelacion -> . >
    (69) simbolosRelacion -> . MENORIGUAL
    (70) simbolosRelacion -> . <
    (71) simbolosRelacion -> . #
    (72) simbolosRelacion -> . =
    MAYORIGUAL      shift and go to state 204
    >               shift and go to state 205
    MENORIGUAL      shift and go to state 206
    <               shift and go to state 207
    #               shift and go to state 208
    =               shift and go to state 209

    simbolosRelacion               shift and go to state 203

state 181

    (9) conjuntoExpresiones -> ( listaExpresiones . )
    )               shift and go to state 210


state 182

    (11) listaExpresiones -> expresion . expresionComa
    (12) expresionComa -> . empty
    (13) expresionComa -> . expresionComaR
    (143) empty -> .
    (14) expresionComaR -> . , expresion
    (15) expresionComaR -> . expresionComaR , expresion
    )               reduce using rule 143 (empty -> .)
    ,               shift and go to state 214

    expresionComa                  shift and go to state 211
    empty                          shift and go to state 212
    expresionComaR                 shift and go to state 213

state 183

    (20) expresionCorcheteR -> expresionCorcheteR [ expresion ] .
    [               reduce using rule 20 (expresionCorcheteR -> expresionCorcheteR [ expresion ] .)
    ID              reduce using rule 20 (expresionCorcheteR -> expresionCorcheteR [ expresion ] .)
    OC              reduce using rule 20 (expresionCorcheteR -> expresionCorcheteR [ expresion ] .)
    TS              reduce using rule 20 (expresionCorcheteR -> expresionCorcheteR [ expresion ] .)
    BIT             reduce using rule 20 (expresionCorcheteR -> expresionCorcheteR [ expresion ] .)


state 184

    (35) factor -> SR ( expresion , expresion . )
    )               shift and go to state 215


state 185

    (36) factor -> LATCH ( expresion , expresion . )
    )               shift and go to state 216


state 186

    (38) factor -> MUX ( expresion , expresion . : expresion , expresion , expresion , expresion )
    :               shift and go to state 217


state 187

    (39) factor -> MUX ( expresion : expresion . , expresion )
    ,               shift and go to state 218


state 188

    (124) declaracionTipo -> TYPE ID simboloPor listaIdParentesis ; declaracionConstanteCONST tipoFormalIN tipoFormlINOUT declaracionVariableOUT . declaracionVariableVAR sentenciaSecuenciaBEGIN END ID
    (107) declaracionVariableVAR -> . empty
    (108) declaracionVariableVAR -> . VAR declaracionVariableRecursivo
    (143) empty -> .
    VAR             shift and go to state 70
    BEGIN           reduce using rule 143 (empty -> .)
    END             reduce using rule 143 (empty -> .)

    declaracionVariableVAR         shift and go to state 219
    empty                          shift and go to state 69

state 189

    (136) tipoFormlINOUT -> INOUT tipoFormlBuslistaId .
    OUT             reduce using rule 136 (tipoFormlINOUT -> INOUT tipoFormlBuslistaId .)
    VAR             reduce using rule 136 (tipoFormlINOUT -> INOUT tipoFormlBuslistaId .)
    BEGIN           reduce using rule 136 (tipoFormlINOUT -> INOUT tipoFormlBuslistaId .)
    END             reduce using rule 136 (tipoFormlINOUT -> INOUT tipoFormlBuslistaId .)


state 190

    (137) tipoFormlBuslistaId -> empty .
    OUT             reduce using rule 137 (tipoFormlBuslistaId -> empty .)
    VAR             reduce using rule 137 (tipoFormlBuslistaId -> empty .)
    BEGIN           reduce using rule 137 (tipoFormlBuslistaId -> empty .)
    END             reduce using rule 137 (tipoFormlBuslistaId -> empty .)


state 191

    (138) tipoFormlBuslistaId -> tipoFormlBuslistaIdR .
    (140) tipoFormlBuslistaIdR -> tipoFormlBuslistaIdR . listaId : tipoFormalBus ;
    (23) listaId -> . ID IDComa
    OUT             reduce using rule 138 (tipoFormlBuslistaId -> tipoFormlBuslistaIdR .)
    VAR             reduce using rule 138 (tipoFormlBuslistaId -> tipoFormlBuslistaIdR .)
    BEGIN           reduce using rule 138 (tipoFormlBuslistaId -> tipoFormlBuslistaIdR .)
    END             reduce using rule 138 (tipoFormlBuslistaId -> tipoFormlBuslistaIdR .)
    ID              shift and go to state 38

    listaId                        shift and go to state 220

state 192

    (139) tipoFormlBuslistaIdR -> listaId . : tipoFormalBus ;
    :               shift and go to state 221


state 193

    (134) tipoFormallistaIdR -> tipoFormallistaIdR listaId . : tipoFormal ;
    :               shift and go to state 222


state 194

    (133) tipoFormallistaIdR -> listaId : . tipoFormal ;
    (115) tipoFormal -> . expresionCorcheteO BIT
    (116) expresionCorcheteO -> . empty
    (117) expresionCorcheteO -> . expresionCorcheteOR
    (143) empty -> .
    (118) expresionCorcheteOR -> . [ expresionOpcional ]
    (119) expresionCorcheteOR -> . expresionCorcheteOR [ expresionOpcional ]
    BIT             reduce using rule 143 (empty -> .)
    [               shift and go to state 227

    tipoFormal                     shift and go to state 223
    expresionCorcheteO             shift and go to state 224
    empty                          shift and go to state 225
    expresionCorcheteOR            shift and go to state 226

state 195

    (3) modulo -> MODULE ID ; declaracionTipoPuntoComa declaracionConstanteCONST declaracionVariableIN declaracionVariableINOUT declaracionVariableOUT declaracionVariableVAR sentenciaSecuenciaBEGIN END ID . .
    MODULE          reduce using rule 3 (modulo -> MODULE ID ; declaracionTipoPuntoComa declaracionConstanteCONST declaracionVariableIN declaracionVariableINOUT declaracionVariableOUT declaracionVariableVAR sentenciaSecuenciaBEGIN END ID . .)
    $end            reduce using rule 3 (modulo -> MODULE ID ; declaracionTipoPuntoComa declaracionConstanteCONST declaracionVariableIN declaracionVariableINOUT declaracionVariableOUT declaracionVariableVAR sentenciaSecuenciaBEGIN END ID . .)


state 196

    (90) sentenciaPuntoComaR -> sentenciaPuntoComaR ; . sentencia
    (81) sentencia -> . empty
    (82) sentencia -> . sentenciaPara
    (83) sentencia -> . sentenciaSi
    (84) sentencia -> . asignacionUnidad
    (85) sentencia -> . asignacion
    (143) empty -> .
    (80) sentenciaPara -> . FOR ID DOSPUNTOSIGUAL expresion DOBLEPUNTO expresion DO sentenciaSecuencia END
    (73) sentenciaSi -> . IF relacion THEN sentenciaSecuencia sentenciaSiSino sentenciaSiEntonces END
    (141) asignacionUnidad -> . ID selector error listaExpresiones )
    (142) asignacionUnidad -> . ID selector ( listaExpresiones )
    (63) asignacion -> . ID selector DOSPUNTOSIGUAL condicion | expresion
    (64) asignacion -> . ID selector DOSPUNTOSIGUAL expresion
    ;               reduce using rule 143 (empty -> .)
    END             reduce using rule 143 (empty -> .)
    ELSIF           reduce using rule 143 (empty -> .)
    ELSE            reduce using rule 143 (empty -> .)
    FOR             shift and go to state 148
    IF              shift and go to state 150
    ID              shift and go to state 149

    sentencia                      shift and go to state 228
    empty                          shift and go to state 143
    sentenciaPara                  shift and go to state 144
    sentenciaSi                    shift and go to state 145
    asignacionUnidad               shift and go to state 146
    asignacion                     shift and go to state 147

state 197

    (89) sentenciaPuntoComaR -> ; sentencia .
    ;               reduce using rule 89 (sentenciaPuntoComaR -> ; sentencia .)
    END             reduce using rule 89 (sentenciaPuntoComaR -> ; sentencia .)
    ELSIF           reduce using rule 89 (sentenciaPuntoComaR -> ; sentencia .)
    ELSE            reduce using rule 89 (sentenciaPuntoComaR -> ; sentencia .)


state 198

    (80) sentenciaPara -> FOR ID DOSPUNTOSIGUAL . expresion DOBLEPUNTO expresion DO sentenciaSecuencia END
    (56) expresion -> . termino terminoMasMenos
    (47) termino -> . factor terminoOperadores
    (35) factor -> . SR ( expresion , expresion )
    (36) factor -> . LATCH ( expresion , expresion )
    (37) factor -> . REG ( expresionComaO expresion
    (38) factor -> . MUX ( expresion , expresion : expresion , expresion , expresion , expresion )
    (39) factor -> . MUX ( expresion : expresion , expresion )
    (40) factor -> . ( expresion )
    (41) factor -> . ~ factor
    (42) factor -> . INTEGER
    (43) factor -> . LOGICVALUE
    (44) factor -> . ID selector
    SR              shift and go to state 58
    LATCH           shift and go to state 60
    REG             shift and go to state 61
    MUX             shift and go to state 62
    (               shift and go to state 59
    ~               shift and go to state 63
    INTEGER         shift and go to state 64
    LOGICVALUE      shift and go to state 65
    ID              shift and go to state 54

    expresion                      shift and go to state 229
    termino                        shift and go to state 56
    factor                         shift and go to state 57

state 199

    (141) asignacionUnidad -> ID selector error . listaExpresiones )
    (11) listaExpresiones -> . expresion expresionComa
    (56) expresion -> . termino terminoMasMenos
    (47) termino -> . factor terminoOperadores
    (35) factor -> . SR ( expresion , expresion )
    (36) factor -> . LATCH ( expresion , expresion )
    (37) factor -> . REG ( expresionComaO expresion
    (38) factor -> . MUX ( expresion , expresion : expresion , expresion , expresion , expresion )
    (39) factor -> . MUX ( expresion : expresion , expresion )
    (40) factor -> . ( expresion )
    (41) factor -> . ~ factor
    (42) factor -> . INTEGER
    (43) factor -> . LOGICVALUE
    (44) factor -> . ID selector
    SR              shift and go to state 58
    LATCH           shift and go to state 60
    REG             shift and go to state 61
    MUX             shift and go to state 62
    (               shift and go to state 59
    ~               shift and go to state 63
    INTEGER         shift and go to state 64
    LOGICVALUE      shift and go to state 65
    ID              shift and go to state 54

    listaExpresiones               shift and go to state 230
    expresion                      shift and go to state 182
    termino                        shift and go to state 56
    factor                         shift and go to state 57

state 200

    (142) asignacionUnidad -> ID selector ( . listaExpresiones )
    (11) listaExpresiones -> . expresion expresionComa
    (56) expresion -> . termino terminoMasMenos
    (47) termino -> . factor terminoOperadores
    (35) factor -> . SR ( expresion , expresion )
    (36) factor -> . LATCH ( expresion , expresion )
    (37) factor -> . REG ( expresionComaO expresion
    (38) factor -> . MUX ( expresion , expresion : expresion , expresion , expresion , expresion )
    (39) factor -> . MUX ( expresion : expresion , expresion )
    (40) factor -> . ( expresion )
    (41) factor -> . ~ factor
    (42) factor -> . INTEGER
    (43) factor -> . LOGICVALUE
    (44) factor -> . ID selector
    SR              shift and go to state 58
    LATCH           shift and go to state 60
    REG             shift and go to state 61
    MUX             shift and go to state 62
    (               shift and go to state 59
    ~               shift and go to state 63
    INTEGER         shift and go to state 64
    LOGICVALUE      shift and go to state 65
    ID              shift and go to state 54

    listaExpresiones               shift and go to state 231
    expresion                      shift and go to state 182
    termino                        shift and go to state 56
    factor                         shift and go to state 57

state 201

    (63) asignacion -> ID selector DOSPUNTOSIGUAL . condicion | expresion
    (64) asignacion -> ID selector DOSPUNTOSIGUAL . expresion
    (65) condicion -> . expresion
    (56) expresion -> . termino terminoMasMenos
    (47) termino -> . factor terminoOperadores
    (35) factor -> . SR ( expresion , expresion )
    (36) factor -> . LATCH ( expresion , expresion )
    (37) factor -> . REG ( expresionComaO expresion
    (38) factor -> . MUX ( expresion , expresion : expresion , expresion , expresion , expresion )
    (39) factor -> . MUX ( expresion : expresion , expresion )
    (40) factor -> . ( expresion )
    (41) factor -> . ~ factor
    (42) factor -> . INTEGER
    (43) factor -> . LOGICVALUE
    (44) factor -> . ID selector
    SR              shift and go to state 58
    LATCH           shift and go to state 60
    REG             shift and go to state 61
    MUX             shift and go to state 62
    (               shift and go to state 59
    ~               shift and go to state 63
    INTEGER         shift and go to state 64
    LOGICVALUE      shift and go to state 65
    ID              shift and go to state 54

    condicion                      shift and go to state 232
    expresion                      shift and go to state 233
    termino                        shift and go to state 56
    factor                         shift and go to state 57

state 202

    (73) sentenciaSi -> IF relacion THEN . sentenciaSecuencia sentenciaSiSino sentenciaSiEntonces END
    (86) sentenciaSecuencia -> . sentencia sentenciaPuntoComa
    (81) sentencia -> . empty
    (82) sentencia -> . sentenciaPara
    (83) sentencia -> . sentenciaSi
    (84) sentencia -> . asignacionUnidad
    (85) sentencia -> . asignacion
    (143) empty -> .
    (80) sentenciaPara -> . FOR ID DOSPUNTOSIGUAL expresion DOBLEPUNTO expresion DO sentenciaSecuencia END
    (73) sentenciaSi -> . IF relacion THEN sentenciaSecuencia sentenciaSiSino sentenciaSiEntonces END
    (141) asignacionUnidad -> . ID selector error listaExpresiones )
    (142) asignacionUnidad -> . ID selector ( listaExpresiones )
    (63) asignacion -> . ID selector DOSPUNTOSIGUAL condicion | expresion
    (64) asignacion -> . ID selector DOSPUNTOSIGUAL expresion
    ;               reduce using rule 143 (empty -> .)
    ELSIF           reduce using rule 143 (empty -> .)
    ELSE            reduce using rule 143 (empty -> .)
    END             reduce using rule 143 (empty -> .)
    FOR             shift and go to state 148
    IF              shift and go to state 150
    ID              shift and go to state 149

    sentenciaSecuencia             shift and go to state 234
    sentencia                      shift and go to state 142
    empty                          shift and go to state 143
    sentenciaPara                  shift and go to state 144
    sentenciaSi                    shift and go to state 145
    asignacionUnidad               shift and go to state 146
    asignacion                     shift and go to state 147

state 203

    (66) relacion -> expresion simbolosRelacion . expresion
    (56) expresion -> . termino terminoMasMenos
    (47) termino -> . factor terminoOperadores
    (35) factor -> . SR ( expresion , expresion )
    (36) factor -> . LATCH ( expresion , expresion )
    (37) factor -> . REG ( expresionComaO expresion
    (38) factor -> . MUX ( expresion , expresion : expresion , expresion , expresion , expresion )
    (39) factor -> . MUX ( expresion : expresion , expresion )
    (40) factor -> . ( expresion )
    (41) factor -> . ~ factor
    (42) factor -> . INTEGER
    (43) factor -> . LOGICVALUE
    (44) factor -> . ID selector
    SR              shift and go to state 58
    LATCH           shift and go to state 60
    REG             shift and go to state 61
    MUX             shift and go to state 62
    (               shift and go to state 59
    ~               shift and go to state 63
    INTEGER         shift and go to state 64
    LOGICVALUE      shift and go to state 65
    ID              shift and go to state 54

    expresion                      shift and go to state 235
    termino                        shift and go to state 56
    factor                         shift and go to state 57

state 204

    (67) simbolosRelacion -> MAYORIGUAL .
    SR              reduce using rule 67 (simbolosRelacion -> MAYORIGUAL .)
    LATCH           reduce using rule 67 (simbolosRelacion -> MAYORIGUAL .)
    REG             reduce using rule 67 (simbolosRelacion -> MAYORIGUAL .)
    MUX             reduce using rule 67 (simbolosRelacion -> MAYORIGUAL .)
    (               reduce using rule 67 (simbolosRelacion -> MAYORIGUAL .)
    ~               reduce using rule 67 (simbolosRelacion -> MAYORIGUAL .)
    INTEGER         reduce using rule 67 (simbolosRelacion -> MAYORIGUAL .)
    LOGICVALUE      reduce using rule 67 (simbolosRelacion -> MAYORIGUAL .)
    ID              reduce using rule 67 (simbolosRelacion -> MAYORIGUAL .)


state 205

    (68) simbolosRelacion -> > .
    SR              reduce using rule 68 (simbolosRelacion -> > .)
    LATCH           reduce using rule 68 (simbolosRelacion -> > .)
    REG             reduce using rule 68 (simbolosRelacion -> > .)
    MUX             reduce using rule 68 (simbolosRelacion -> > .)
    (               reduce using rule 68 (simbolosRelacion -> > .)
    ~               reduce using rule 68 (simbolosRelacion -> > .)
    INTEGER         reduce using rule 68 (simbolosRelacion -> > .)
    LOGICVALUE      reduce using rule 68 (simbolosRelacion -> > .)
    ID              reduce using rule 68 (simbolosRelacion -> > .)


state 206

    (69) simbolosRelacion -> MENORIGUAL .
    SR              reduce using rule 69 (simbolosRelacion -> MENORIGUAL .)
    LATCH           reduce using rule 69 (simbolosRelacion -> MENORIGUAL .)
    REG             reduce using rule 69 (simbolosRelacion -> MENORIGUAL .)
    MUX             reduce using rule 69 (simbolosRelacion -> MENORIGUAL .)
    (               reduce using rule 69 (simbolosRelacion -> MENORIGUAL .)
    ~               reduce using rule 69 (simbolosRelacion -> MENORIGUAL .)
    INTEGER         reduce using rule 69 (simbolosRelacion -> MENORIGUAL .)
    LOGICVALUE      reduce using rule 69 (simbolosRelacion -> MENORIGUAL .)
    ID              reduce using rule 69 (simbolosRelacion -> MENORIGUAL .)


state 207

    (70) simbolosRelacion -> < .
    SR              reduce using rule 70 (simbolosRelacion -> < .)
    LATCH           reduce using rule 70 (simbolosRelacion -> < .)
    REG             reduce using rule 70 (simbolosRelacion -> < .)
    MUX             reduce using rule 70 (simbolosRelacion -> < .)
    (               reduce using rule 70 (simbolosRelacion -> < .)
    ~               reduce using rule 70 (simbolosRelacion -> < .)
    INTEGER         reduce using rule 70 (simbolosRelacion -> < .)
    LOGICVALUE      reduce using rule 70 (simbolosRelacion -> < .)
    ID              reduce using rule 70 (simbolosRelacion -> < .)


state 208

    (71) simbolosRelacion -> # .
    SR              reduce using rule 71 (simbolosRelacion -> # .)
    LATCH           reduce using rule 71 (simbolosRelacion -> # .)
    REG             reduce using rule 71 (simbolosRelacion -> # .)
    MUX             reduce using rule 71 (simbolosRelacion -> # .)
    (               reduce using rule 71 (simbolosRelacion -> # .)
    ~               reduce using rule 71 (simbolosRelacion -> # .)
    INTEGER         reduce using rule 71 (simbolosRelacion -> # .)
    LOGICVALUE      reduce using rule 71 (simbolosRelacion -> # .)
    ID              reduce using rule 71 (simbolosRelacion -> # .)


state 209

    (72) simbolosRelacion -> = .
    SR              reduce using rule 72 (simbolosRelacion -> = .)
    LATCH           reduce using rule 72 (simbolosRelacion -> = .)
    REG             reduce using rule 72 (simbolosRelacion -> = .)
    MUX             reduce using rule 72 (simbolosRelacion -> = .)
    (               reduce using rule 72 (simbolosRelacion -> = .)
    ~               reduce using rule 72 (simbolosRelacion -> = .)
    INTEGER         reduce using rule 72 (simbolosRelacion -> = .)
    LOGICVALUE      reduce using rule 72 (simbolosRelacion -> = .)
    ID              reduce using rule 72 (simbolosRelacion -> = .)


state 210

    (9) conjuntoExpresiones -> ( listaExpresiones ) .
    ;               reduce using rule 9 (conjuntoExpresiones -> ( listaExpresiones ) .)


state 211

    (11) listaExpresiones -> expresion expresionComa .
    )               reduce using rule 11 (listaExpresiones -> expresion expresionComa .)


state 212

    (12) expresionComa -> empty .
    )               reduce using rule 12 (expresionComa -> empty .)


state 213

    (13) expresionComa -> expresionComaR .
    (15) expresionComaR -> expresionComaR . , expresion
    )               reduce using rule 13 (expresionComa -> expresionComaR .)
    ,               shift and go to state 236


state 214

    (14) expresionComaR -> , . expresion
    (56) expresion -> . termino terminoMasMenos
    (47) termino -> . factor terminoOperadores
    (35) factor -> . SR ( expresion , expresion )
    (36) factor -> . LATCH ( expresion , expresion )
    (37) factor -> . REG ( expresionComaO expresion
    (38) factor -> . MUX ( expresion , expresion : expresion , expresion , expresion , expresion )
    (39) factor -> . MUX ( expresion : expresion , expresion )
    (40) factor -> . ( expresion )
    (41) factor -> . ~ factor
    (42) factor -> . INTEGER
    (43) factor -> . LOGICVALUE
    (44) factor -> . ID selector
    SR              shift and go to state 58
    LATCH           shift and go to state 60
    REG             shift and go to state 61
    MUX             shift and go to state 62
    (               shift and go to state 59
    ~               shift and go to state 63
    INTEGER         shift and go to state 64
    LOGICVALUE      shift and go to state 65
    ID              shift and go to state 54

    expresion                      shift and go to state 237
    termino                        shift and go to state 56
    factor                         shift and go to state 57

state 215

    (35) factor -> SR ( expresion , expresion ) .
    MOD             reduce using rule 35 (factor -> SR ( expresion , expresion ) .)
    DIV             reduce using rule 35 (factor -> SR ( expresion , expresion ) .)
    /               reduce using rule 35 (factor -> SR ( expresion , expresion ) .)
    *               reduce using rule 35 (factor -> SR ( expresion , expresion ) .)
    -               reduce using rule 35 (factor -> SR ( expresion , expresion ) .)
    +               reduce using rule 35 (factor -> SR ( expresion , expresion ) .)
    ;               reduce using rule 35 (factor -> SR ( expresion , expresion ) .)
    )               reduce using rule 35 (factor -> SR ( expresion , expresion ) .)
    ]               reduce using rule 35 (factor -> SR ( expresion , expresion ) .)
    ,               reduce using rule 35 (factor -> SR ( expresion , expresion ) .)
    :               reduce using rule 35 (factor -> SR ( expresion , expresion ) .)
    MAYORIGUAL      reduce using rule 35 (factor -> SR ( expresion , expresion ) .)
    >               reduce using rule 35 (factor -> SR ( expresion , expresion ) .)
    MENORIGUAL      reduce using rule 35 (factor -> SR ( expresion , expresion ) .)
    <               reduce using rule 35 (factor -> SR ( expresion , expresion ) .)
    #               reduce using rule 35 (factor -> SR ( expresion , expresion ) .)
    =               reduce using rule 35 (factor -> SR ( expresion , expresion ) .)
    DOBLEPUNTO      reduce using rule 35 (factor -> SR ( expresion , expresion ) .)
    END             reduce using rule 35 (factor -> SR ( expresion , expresion ) .)
    ELSIF           reduce using rule 35 (factor -> SR ( expresion , expresion ) .)
    ELSE            reduce using rule 35 (factor -> SR ( expresion , expresion ) .)
    |               reduce using rule 35 (factor -> SR ( expresion , expresion ) .)
    THEN            reduce using rule 35 (factor -> SR ( expresion , expresion ) .)
    DO              reduce using rule 35 (factor -> SR ( expresion , expresion ) .)


state 216

    (36) factor -> LATCH ( expresion , expresion ) .
    MOD             reduce using rule 36 (factor -> LATCH ( expresion , expresion ) .)
    DIV             reduce using rule 36 (factor -> LATCH ( expresion , expresion ) .)
    /               reduce using rule 36 (factor -> LATCH ( expresion , expresion ) .)
    *               reduce using rule 36 (factor -> LATCH ( expresion , expresion ) .)
    -               reduce using rule 36 (factor -> LATCH ( expresion , expresion ) .)
    +               reduce using rule 36 (factor -> LATCH ( expresion , expresion ) .)
    ;               reduce using rule 36 (factor -> LATCH ( expresion , expresion ) .)
    )               reduce using rule 36 (factor -> LATCH ( expresion , expresion ) .)
    ]               reduce using rule 36 (factor -> LATCH ( expresion , expresion ) .)
    ,               reduce using rule 36 (factor -> LATCH ( expresion , expresion ) .)
    :               reduce using rule 36 (factor -> LATCH ( expresion , expresion ) .)
    MAYORIGUAL      reduce using rule 36 (factor -> LATCH ( expresion , expresion ) .)
    >               reduce using rule 36 (factor -> LATCH ( expresion , expresion ) .)
    MENORIGUAL      reduce using rule 36 (factor -> LATCH ( expresion , expresion ) .)
    <               reduce using rule 36 (factor -> LATCH ( expresion , expresion ) .)
    #               reduce using rule 36 (factor -> LATCH ( expresion , expresion ) .)
    =               reduce using rule 36 (factor -> LATCH ( expresion , expresion ) .)
    DOBLEPUNTO      reduce using rule 36 (factor -> LATCH ( expresion , expresion ) .)
    END             reduce using rule 36 (factor -> LATCH ( expresion , expresion ) .)
    ELSIF           reduce using rule 36 (factor -> LATCH ( expresion , expresion ) .)
    ELSE            reduce using rule 36 (factor -> LATCH ( expresion , expresion ) .)
    |               reduce using rule 36 (factor -> LATCH ( expresion , expresion ) .)
    THEN            reduce using rule 36 (factor -> LATCH ( expresion , expresion ) .)
    DO              reduce using rule 36 (factor -> LATCH ( expresion , expresion ) .)


state 217

    (38) factor -> MUX ( expresion , expresion : . expresion , expresion , expresion , expresion )
    (56) expresion -> . termino terminoMasMenos
    (47) termino -> . factor terminoOperadores
    (35) factor -> . SR ( expresion , expresion )
    (36) factor -> . LATCH ( expresion , expresion )
    (37) factor -> . REG ( expresionComaO expresion
    (38) factor -> . MUX ( expresion , expresion : expresion , expresion , expresion , expresion )
    (39) factor -> . MUX ( expresion : expresion , expresion )
    (40) factor -> . ( expresion )
    (41) factor -> . ~ factor
    (42) factor -> . INTEGER
    (43) factor -> . LOGICVALUE
    (44) factor -> . ID selector
    SR              shift and go to state 58
    LATCH           shift and go to state 60
    REG             shift and go to state 61
    MUX             shift and go to state 62
    (               shift and go to state 59
    ~               shift and go to state 63
    INTEGER         shift and go to state 64
    LOGICVALUE      shift and go to state 65
    ID              shift and go to state 54

    expresion                      shift and go to state 238
    termino                        shift and go to state 56
    factor                         shift and go to state 57

state 218

    (39) factor -> MUX ( expresion : expresion , . expresion )
    (56) expresion -> . termino terminoMasMenos
    (47) termino -> . factor terminoOperadores
    (35) factor -> . SR ( expresion , expresion )
    (36) factor -> . LATCH ( expresion , expresion )
    (37) factor -> . REG ( expresionComaO expresion
    (38) factor -> . MUX ( expresion , expresion : expresion , expresion , expresion , expresion )
    (39) factor -> . MUX ( expresion : expresion , expresion )
    (40) factor -> . ( expresion )
    (41) factor -> . ~ factor
    (42) factor -> . INTEGER
    (43) factor -> . LOGICVALUE
    (44) factor -> . ID selector
    SR              shift and go to state 58
    LATCH           shift and go to state 60
    REG             shift and go to state 61
    MUX             shift and go to state 62
    (               shift and go to state 59
    ~               shift and go to state 63
    INTEGER         shift and go to state 64
    LOGICVALUE      shift and go to state 65
    ID              shift and go to state 54

    expresion                      shift and go to state 239
    termino                        shift and go to state 56
    factor                         shift and go to state 57

state 219

    (124) declaracionTipo -> TYPE ID simboloPor listaIdParentesis ; declaracionConstanteCONST tipoFormalIN tipoFormlINOUT declaracionVariableOUT declaracionVariableVAR . sentenciaSecuenciaBEGIN END ID
    (109) sentenciaSecuenciaBEGIN -> . empty
    (110) sentenciaSecuenciaBEGIN -> . BEGIN sentenciaSecuencia
    (143) empty -> .
    BEGIN           shift and go to state 110
    END             reduce using rule 143 (empty -> .)

    sentenciaSecuenciaBEGIN        shift and go to state 240
    empty                          shift and go to state 109

state 220

    (140) tipoFormlBuslistaIdR -> tipoFormlBuslistaIdR listaId . : tipoFormalBus ;
    :               shift and go to state 241


state 221

    (139) tipoFormlBuslistaIdR -> listaId : . tipoFormalBus ;
    (122) tipoFormalBus -> . expresionCorcheteO OC
    (123) tipoFormalBus -> . expresionCorcheteO TS
    (116) expresionCorcheteO -> . empty
    (117) expresionCorcheteO -> . expresionCorcheteOR
    (143) empty -> .
    (118) expresionCorcheteOR -> . [ expresionOpcional ]
    (119) expresionCorcheteOR -> . expresionCorcheteOR [ expresionOpcional ]
    OC              reduce using rule 143 (empty -> .)
    TS              reduce using rule 143 (empty -> .)
    [               shift and go to state 227

    tipoFormalBus                  shift and go to state 242
    expresionCorcheteO             shift and go to state 243
    empty                          shift and go to state 225
    expresionCorcheteOR            shift and go to state 226

state 222

    (134) tipoFormallistaIdR -> tipoFormallistaIdR listaId : . tipoFormal ;
    (115) tipoFormal -> . expresionCorcheteO BIT
    (116) expresionCorcheteO -> . empty
    (117) expresionCorcheteO -> . expresionCorcheteOR
    (143) empty -> .
    (118) expresionCorcheteOR -> . [ expresionOpcional ]
    (119) expresionCorcheteOR -> . expresionCorcheteOR [ expresionOpcional ]
    BIT             reduce using rule 143 (empty -> .)
    [               shift and go to state 227

    tipoFormal                     shift and go to state 244
    expresionCorcheteO             shift and go to state 224
    empty                          shift and go to state 225
    expresionCorcheteOR            shift and go to state 226

state 223

    (133) tipoFormallistaIdR -> listaId : tipoFormal . ;
    ;               shift and go to state 245


state 224

    (115) tipoFormal -> expresionCorcheteO . BIT
    BIT             shift and go to state 246


state 225

    (116) expresionCorcheteO -> empty .
    BIT             reduce using rule 116 (expresionCorcheteO -> empty .)
    OC              reduce using rule 116 (expresionCorcheteO -> empty .)
    TS              reduce using rule 116 (expresionCorcheteO -> empty .)


state 226

    (117) expresionCorcheteO -> expresionCorcheteOR .
    (119) expresionCorcheteOR -> expresionCorcheteOR . [ expresionOpcional ]
    BIT             reduce using rule 117 (expresionCorcheteO -> expresionCorcheteOR .)
    OC              reduce using rule 117 (expresionCorcheteO -> expresionCorcheteOR .)
    TS              reduce using rule 117 (expresionCorcheteO -> expresionCorcheteOR .)
    [               shift and go to state 247


state 227

    (118) expresionCorcheteOR -> [ . expresionOpcional ]
    (120) expresionOpcional -> . empty
    (121) expresionOpcional -> . expresion
    (143) empty -> .
    (56) expresion -> . termino terminoMasMenos
    (47) termino -> . factor terminoOperadores
    (35) factor -> . SR ( expresion , expresion )
    (36) factor -> . LATCH ( expresion , expresion )
    (37) factor -> . REG ( expresionComaO expresion
    (38) factor -> . MUX ( expresion , expresion : expresion , expresion , expresion , expresion )
    (39) factor -> . MUX ( expresion : expresion , expresion )
    (40) factor -> . ( expresion )
    (41) factor -> . ~ factor
    (42) factor -> . INTEGER
    (43) factor -> . LOGICVALUE
    (44) factor -> . ID selector
    ]               reduce using rule 143 (empty -> .)
    SR              shift and go to state 58
    LATCH           shift and go to state 60
    REG             shift and go to state 61
    MUX             shift and go to state 62
    (               shift and go to state 59
    ~               shift and go to state 63
    INTEGER         shift and go to state 64
    LOGICVALUE      shift and go to state 65
    ID              shift and go to state 54

    expresionOpcional              shift and go to state 248
    empty                          shift and go to state 249
    expresion                      shift and go to state 250
    termino                        shift and go to state 56
    factor                         shift and go to state 57

state 228

    (90) sentenciaPuntoComaR -> sentenciaPuntoComaR ; sentencia .
    ;               reduce using rule 90 (sentenciaPuntoComaR -> sentenciaPuntoComaR ; sentencia .)
    END             reduce using rule 90 (sentenciaPuntoComaR -> sentenciaPuntoComaR ; sentencia .)
    ELSIF           reduce using rule 90 (sentenciaPuntoComaR -> sentenciaPuntoComaR ; sentencia .)
    ELSE            reduce using rule 90 (sentenciaPuntoComaR -> sentenciaPuntoComaR ; sentencia .)


state 229

    (80) sentenciaPara -> FOR ID DOSPUNTOSIGUAL expresion . DOBLEPUNTO expresion DO sentenciaSecuencia END
    DOBLEPUNTO      shift and go to state 251


state 230

    (141) asignacionUnidad -> ID selector error listaExpresiones . )
    )               shift and go to state 252


state 231

    (142) asignacionUnidad -> ID selector ( listaExpresiones . )
    )               shift and go to state 253


state 232

    (63) asignacion -> ID selector DOSPUNTOSIGUAL condicion . | expresion
    |               shift and go to state 254


state 233

    (64) asignacion -> ID selector DOSPUNTOSIGUAL expresion .
    (65) condicion -> expresion .
    ;               reduce using rule 64 (asignacion -> ID selector DOSPUNTOSIGUAL expresion .)
    END             reduce using rule 64 (asignacion -> ID selector DOSPUNTOSIGUAL expresion .)
    ELSIF           reduce using rule 64 (asignacion -> ID selector DOSPUNTOSIGUAL expresion .)
    ELSE            reduce using rule 64 (asignacion -> ID selector DOSPUNTOSIGUAL expresion .)
    |               reduce using rule 65 (condicion -> expresion .)


state 234

    (73) sentenciaSi -> IF relacion THEN sentenciaSecuencia . sentenciaSiSino sentenciaSiEntonces END
    (74) sentenciaSiSino -> . empty
    (75) sentenciaSiSino -> . sentenciaSiSinoR
    (143) empty -> .
    (76) sentenciaSiSinoR -> . ELSIF relacion THEN sentenciaSecuencia
    (77) sentenciaSiSinoR -> . sentenciaSiSinoR ELSIF relacion THEN sentenciaSecuencia
    ELSE            reduce using rule 143 (empty -> .)
    END             reduce using rule 143 (empty -> .)
    ELSIF           shift and go to state 258

    sentenciaSiSino                shift and go to state 255
    empty                          shift and go to state 256
    sentenciaSiSinoR               shift and go to state 257

state 235

    (66) relacion -> expresion simbolosRelacion expresion .
    THEN            reduce using rule 66 (relacion -> expresion simbolosRelacion expresion .)


state 236

    (15) expresionComaR -> expresionComaR , . expresion
    (56) expresion -> . termino terminoMasMenos
    (47) termino -> . factor terminoOperadores
    (35) factor -> . SR ( expresion , expresion )
    (36) factor -> . LATCH ( expresion , expresion )
    (37) factor -> . REG ( expresionComaO expresion
    (38) factor -> . MUX ( expresion , expresion : expresion , expresion , expresion , expresion )
    (39) factor -> . MUX ( expresion : expresion , expresion )
    (40) factor -> . ( expresion )
    (41) factor -> . ~ factor
    (42) factor -> . INTEGER
    (43) factor -> . LOGICVALUE
    (44) factor -> . ID selector
    SR              shift and go to state 58
    LATCH           shift and go to state 60
    REG             shift and go to state 61
    MUX             shift and go to state 62
    (               shift and go to state 59
    ~               shift and go to state 63
    INTEGER         shift and go to state 64
    LOGICVALUE      shift and go to state 65
    ID              shift and go to state 54

    expresion                      shift and go to state 259
    termino                        shift and go to state 56
    factor                         shift and go to state 57

state 237

    (14) expresionComaR -> , expresion .
    ,               reduce using rule 14 (expresionComaR -> , expresion .)
    )               reduce using rule 14 (expresionComaR -> , expresion .)


state 238

    (38) factor -> MUX ( expresion , expresion : expresion . , expresion , expresion , expresion )
    ,               shift and go to state 260


state 239

    (39) factor -> MUX ( expresion : expresion , expresion . )
    )               shift and go to state 261


state 240

    (124) declaracionTipo -> TYPE ID simboloPor listaIdParentesis ; declaracionConstanteCONST tipoFormalIN tipoFormlINOUT declaracionVariableOUT declaracionVariableVAR sentenciaSecuenciaBEGIN . END ID
    END             shift and go to state 262


state 241

    (140) tipoFormlBuslistaIdR -> tipoFormlBuslistaIdR listaId : . tipoFormalBus ;
    (122) tipoFormalBus -> . expresionCorcheteO OC
    (123) tipoFormalBus -> . expresionCorcheteO TS
    (116) expresionCorcheteO -> . empty
    (117) expresionCorcheteO -> . expresionCorcheteOR
    (143) empty -> .
    (118) expresionCorcheteOR -> . [ expresionOpcional ]
    (119) expresionCorcheteOR -> . expresionCorcheteOR [ expresionOpcional ]
    OC              reduce using rule 143 (empty -> .)
    TS              reduce using rule 143 (empty -> .)
    [               shift and go to state 227

    tipoFormalBus                  shift and go to state 263
    expresionCorcheteO             shift and go to state 243
    empty                          shift and go to state 225
    expresionCorcheteOR            shift and go to state 226

state 242

    (139) tipoFormlBuslistaIdR -> listaId : tipoFormalBus . ;
    ;               shift and go to state 264


state 243

    (122) tipoFormalBus -> expresionCorcheteO . OC
    (123) tipoFormalBus -> expresionCorcheteO . TS
    OC              shift and go to state 265
    TS              shift and go to state 266


state 244

    (134) tipoFormallistaIdR -> tipoFormallistaIdR listaId : tipoFormal . ;
    ;               shift and go to state 267


state 245

    (133) tipoFormallistaIdR -> listaId : tipoFormal ; .
    ID              reduce using rule 133 (tipoFormallistaIdR -> listaId : tipoFormal ; .)
    INOUT           reduce using rule 133 (tipoFormallistaIdR -> listaId : tipoFormal ; .)
    OUT             reduce using rule 133 (tipoFormallistaIdR -> listaId : tipoFormal ; .)
    VAR             reduce using rule 133 (tipoFormallistaIdR -> listaId : tipoFormal ; .)
    BEGIN           reduce using rule 133 (tipoFormallistaIdR -> listaId : tipoFormal ; .)
    END             reduce using rule 133 (tipoFormallistaIdR -> listaId : tipoFormal ; .)


state 246

    (115) tipoFormal -> expresionCorcheteO BIT .
    ;               reduce using rule 115 (tipoFormal -> expresionCorcheteO BIT .)


state 247

    (119) expresionCorcheteOR -> expresionCorcheteOR [ . expresionOpcional ]
    (120) expresionOpcional -> . empty
    (121) expresionOpcional -> . expresion
    (143) empty -> .
    (56) expresion -> . termino terminoMasMenos
    (47) termino -> . factor terminoOperadores
    (35) factor -> . SR ( expresion , expresion )
    (36) factor -> . LATCH ( expresion , expresion )
    (37) factor -> . REG ( expresionComaO expresion
    (38) factor -> . MUX ( expresion , expresion : expresion , expresion , expresion , expresion )
    (39) factor -> . MUX ( expresion : expresion , expresion )
    (40) factor -> . ( expresion )
    (41) factor -> . ~ factor
    (42) factor -> . INTEGER
    (43) factor -> . LOGICVALUE
    (44) factor -> . ID selector
    ]               reduce using rule 143 (empty -> .)
    SR              shift and go to state 58
    LATCH           shift and go to state 60
    REG             shift and go to state 61
    MUX             shift and go to state 62
    (               shift and go to state 59
    ~               shift and go to state 63
    INTEGER         shift and go to state 64
    LOGICVALUE      shift and go to state 65
    ID              shift and go to state 54

    expresionOpcional              shift and go to state 268
    empty                          shift and go to state 249
    expresion                      shift and go to state 250
    termino                        shift and go to state 56
    factor                         shift and go to state 57

state 248

    (118) expresionCorcheteOR -> [ expresionOpcional . ]
    ]               shift and go to state 269


state 249

    (120) expresionOpcional -> empty .
    ]               reduce using rule 120 (expresionOpcional -> empty .)


state 250

    (121) expresionOpcional -> expresion .
    ]               reduce using rule 121 (expresionOpcional -> expresion .)


state 251

    (80) sentenciaPara -> FOR ID DOSPUNTOSIGUAL expresion DOBLEPUNTO . expresion DO sentenciaSecuencia END
    (56) expresion -> . termino terminoMasMenos
    (47) termino -> . factor terminoOperadores
    (35) factor -> . SR ( expresion , expresion )
    (36) factor -> . LATCH ( expresion , expresion )
    (37) factor -> . REG ( expresionComaO expresion
    (38) factor -> . MUX ( expresion , expresion : expresion , expresion , expresion , expresion )
    (39) factor -> . MUX ( expresion : expresion , expresion )
    (40) factor -> . ( expresion )
    (41) factor -> . ~ factor
    (42) factor -> . INTEGER
    (43) factor -> . LOGICVALUE
    (44) factor -> . ID selector
    SR              shift and go to state 58
    LATCH           shift and go to state 60
    REG             shift and go to state 61
    MUX             shift and go to state 62
    (               shift and go to state 59
    ~               shift and go to state 63
    INTEGER         shift and go to state 64
    LOGICVALUE      shift and go to state 65
    ID              shift and go to state 54

    expresion                      shift and go to state 270
    termino                        shift and go to state 56
    factor                         shift and go to state 57

state 252

    (141) asignacionUnidad -> ID selector error listaExpresiones ) .
    ;               reduce using rule 141 (asignacionUnidad -> ID selector error listaExpresiones ) .)
    END             reduce using rule 141 (asignacionUnidad -> ID selector error listaExpresiones ) .)
    ELSIF           reduce using rule 141 (asignacionUnidad -> ID selector error listaExpresiones ) .)
    ELSE            reduce using rule 141 (asignacionUnidad -> ID selector error listaExpresiones ) .)


state 253

    (142) asignacionUnidad -> ID selector ( listaExpresiones ) .
    ;               reduce using rule 142 (asignacionUnidad -> ID selector ( listaExpresiones ) .)
    END             reduce using rule 142 (asignacionUnidad -> ID selector ( listaExpresiones ) .)
    ELSIF           reduce using rule 142 (asignacionUnidad -> ID selector ( listaExpresiones ) .)
    ELSE            reduce using rule 142 (asignacionUnidad -> ID selector ( listaExpresiones ) .)


state 254

    (63) asignacion -> ID selector DOSPUNTOSIGUAL condicion | . expresion
    (56) expresion -> . termino terminoMasMenos
    (47) termino -> . factor terminoOperadores
    (35) factor -> . SR ( expresion , expresion )
    (36) factor -> . LATCH ( expresion , expresion )
    (37) factor -> . REG ( expresionComaO expresion
    (38) factor -> . MUX ( expresion , expresion : expresion , expresion , expresion , expresion )
    (39) factor -> . MUX ( expresion : expresion , expresion )
    (40) factor -> . ( expresion )
    (41) factor -> . ~ factor
    (42) factor -> . INTEGER
    (43) factor -> . LOGICVALUE
    (44) factor -> . ID selector
    SR              shift and go to state 58
    LATCH           shift and go to state 60
    REG             shift and go to state 61
    MUX             shift and go to state 62
    (               shift and go to state 59
    ~               shift and go to state 63
    INTEGER         shift and go to state 64
    LOGICVALUE      shift and go to state 65
    ID              shift and go to state 54

    expresion                      shift and go to state 271
    termino                        shift and go to state 56
    factor                         shift and go to state 57

state 255

    (73) sentenciaSi -> IF relacion THEN sentenciaSecuencia sentenciaSiSino . sentenciaSiEntonces END
    (78) sentenciaSiEntonces -> . empty
    (79) sentenciaSiEntonces -> . ELSE sentenciaSecuencia
    (143) empty -> .
    ELSE            shift and go to state 274
    END             reduce using rule 143 (empty -> .)

    sentenciaSiEntonces            shift and go to state 272
    empty                          shift and go to state 273

state 256

    (74) sentenciaSiSino -> empty .
    ELSE            reduce using rule 74 (sentenciaSiSino -> empty .)
    END             reduce using rule 74 (sentenciaSiSino -> empty .)


state 257

    (75) sentenciaSiSino -> sentenciaSiSinoR .
    (77) sentenciaSiSinoR -> sentenciaSiSinoR . ELSIF relacion THEN sentenciaSecuencia
    ELSE            reduce using rule 75 (sentenciaSiSino -> sentenciaSiSinoR .)
    END             reduce using rule 75 (sentenciaSiSino -> sentenciaSiSinoR .)
    ELSIF           shift and go to state 275


state 258

    (76) sentenciaSiSinoR -> ELSIF . relacion THEN sentenciaSecuencia
    (66) relacion -> . expresion simbolosRelacion expresion
    (56) expresion -> . termino terminoMasMenos
    (47) termino -> . factor terminoOperadores
    (35) factor -> . SR ( expresion , expresion )
    (36) factor -> . LATCH ( expresion , expresion )
    (37) factor -> . REG ( expresionComaO expresion
    (38) factor -> . MUX ( expresion , expresion : expresion , expresion , expresion , expresion )
    (39) factor -> . MUX ( expresion : expresion , expresion )
    (40) factor -> . ( expresion )
    (41) factor -> . ~ factor
    (42) factor -> . INTEGER
    (43) factor -> . LOGICVALUE
    (44) factor -> . ID selector
    SR              shift and go to state 58
    LATCH           shift and go to state 60
    REG             shift and go to state 61
    MUX             shift and go to state 62
    (               shift and go to state 59
    ~               shift and go to state 63
    INTEGER         shift and go to state 64
    LOGICVALUE      shift and go to state 65
    ID              shift and go to state 54

    relacion                       shift and go to state 276
    expresion                      shift and go to state 180
    termino                        shift and go to state 56
    factor                         shift and go to state 57

state 259

    (15) expresionComaR -> expresionComaR , expresion .
    ,               reduce using rule 15 (expresionComaR -> expresionComaR , expresion .)
    )               reduce using rule 15 (expresionComaR -> expresionComaR , expresion .)


state 260

    (38) factor -> MUX ( expresion , expresion : expresion , . expresion , expresion , expresion )
    (56) expresion -> . termino terminoMasMenos
    (47) termino -> . factor terminoOperadores
    (35) factor -> . SR ( expresion , expresion )
    (36) factor -> . LATCH ( expresion , expresion )
    (37) factor -> . REG ( expresionComaO expresion
    (38) factor -> . MUX ( expresion , expresion : expresion , expresion , expresion , expresion )
    (39) factor -> . MUX ( expresion : expresion , expresion )
    (40) factor -> . ( expresion )
    (41) factor -> . ~ factor
    (42) factor -> . INTEGER
    (43) factor -> . LOGICVALUE
    (44) factor -> . ID selector
    SR              shift and go to state 58
    LATCH           shift and go to state 60
    REG             shift and go to state 61
    MUX             shift and go to state 62
    (               shift and go to state 59
    ~               shift and go to state 63
    INTEGER         shift and go to state 64
    LOGICVALUE      shift and go to state 65
    ID              shift and go to state 54

    expresion                      shift and go to state 277
    termino                        shift and go to state 56
    factor                         shift and go to state 57

state 261

    (39) factor -> MUX ( expresion : expresion , expresion ) .
    MOD             reduce using rule 39 (factor -> MUX ( expresion : expresion , expresion ) .)
    DIV             reduce using rule 39 (factor -> MUX ( expresion : expresion , expresion ) .)
    /               reduce using rule 39 (factor -> MUX ( expresion : expresion , expresion ) .)
    *               reduce using rule 39 (factor -> MUX ( expresion : expresion , expresion ) .)
    -               reduce using rule 39 (factor -> MUX ( expresion : expresion , expresion ) .)
    +               reduce using rule 39 (factor -> MUX ( expresion : expresion , expresion ) .)
    ;               reduce using rule 39 (factor -> MUX ( expresion : expresion , expresion ) .)
    )               reduce using rule 39 (factor -> MUX ( expresion : expresion , expresion ) .)
    ]               reduce using rule 39 (factor -> MUX ( expresion : expresion , expresion ) .)
    ,               reduce using rule 39 (factor -> MUX ( expresion : expresion , expresion ) .)
    :               reduce using rule 39 (factor -> MUX ( expresion : expresion , expresion ) .)
    MAYORIGUAL      reduce using rule 39 (factor -> MUX ( expresion : expresion , expresion ) .)
    >               reduce using rule 39 (factor -> MUX ( expresion : expresion , expresion ) .)
    MENORIGUAL      reduce using rule 39 (factor -> MUX ( expresion : expresion , expresion ) .)
    <               reduce using rule 39 (factor -> MUX ( expresion : expresion , expresion ) .)
    #               reduce using rule 39 (factor -> MUX ( expresion : expresion , expresion ) .)
    =               reduce using rule 39 (factor -> MUX ( expresion : expresion , expresion ) .)
    DOBLEPUNTO      reduce using rule 39 (factor -> MUX ( expresion : expresion , expresion ) .)
    END             reduce using rule 39 (factor -> MUX ( expresion : expresion , expresion ) .)
    ELSIF           reduce using rule 39 (factor -> MUX ( expresion : expresion , expresion ) .)
    ELSE            reduce using rule 39 (factor -> MUX ( expresion : expresion , expresion ) .)
    |               reduce using rule 39 (factor -> MUX ( expresion : expresion , expresion ) .)
    THEN            reduce using rule 39 (factor -> MUX ( expresion : expresion , expresion ) .)
    DO              reduce using rule 39 (factor -> MUX ( expresion : expresion , expresion ) .)


state 262

    (124) declaracionTipo -> TYPE ID simboloPor listaIdParentesis ; declaracionConstanteCONST tipoFormalIN tipoFormlINOUT declaracionVariableOUT declaracionVariableVAR sentenciaSecuenciaBEGIN END . ID
    ID              shift and go to state 278


state 263

    (140) tipoFormlBuslistaIdR -> tipoFormlBuslistaIdR listaId : tipoFormalBus . ;
    ;               shift and go to state 279


state 264

    (139) tipoFormlBuslistaIdR -> listaId : tipoFormalBus ; .
    ID              reduce using rule 139 (tipoFormlBuslistaIdR -> listaId : tipoFormalBus ; .)
    OUT             reduce using rule 139 (tipoFormlBuslistaIdR -> listaId : tipoFormalBus ; .)
    VAR             reduce using rule 139 (tipoFormlBuslistaIdR -> listaId : tipoFormalBus ; .)
    BEGIN           reduce using rule 139 (tipoFormlBuslistaIdR -> listaId : tipoFormalBus ; .)
    END             reduce using rule 139 (tipoFormlBuslistaIdR -> listaId : tipoFormalBus ; .)


state 265

    (122) tipoFormalBus -> expresionCorcheteO OC .
    ;               reduce using rule 122 (tipoFormalBus -> expresionCorcheteO OC .)


state 266

    (123) tipoFormalBus -> expresionCorcheteO TS .
    ;               reduce using rule 123 (tipoFormalBus -> expresionCorcheteO TS .)


state 267

    (134) tipoFormallistaIdR -> tipoFormallistaIdR listaId : tipoFormal ; .
    ID              reduce using rule 134 (tipoFormallistaIdR -> tipoFormallistaIdR listaId : tipoFormal ; .)
    INOUT           reduce using rule 134 (tipoFormallistaIdR -> tipoFormallistaIdR listaId : tipoFormal ; .)
    OUT             reduce using rule 134 (tipoFormallistaIdR -> tipoFormallistaIdR listaId : tipoFormal ; .)
    VAR             reduce using rule 134 (tipoFormallistaIdR -> tipoFormallistaIdR listaId : tipoFormal ; .)
    BEGIN           reduce using rule 134 (tipoFormallistaIdR -> tipoFormallistaIdR listaId : tipoFormal ; .)
    END             reduce using rule 134 (tipoFormallistaIdR -> tipoFormallistaIdR listaId : tipoFormal ; .)


state 268

    (119) expresionCorcheteOR -> expresionCorcheteOR [ expresionOpcional . ]
    ]               shift and go to state 280


state 269

    (118) expresionCorcheteOR -> [ expresionOpcional ] .
    [               reduce using rule 118 (expresionCorcheteOR -> [ expresionOpcional ] .)
    BIT             reduce using rule 118 (expresionCorcheteOR -> [ expresionOpcional ] .)
    OC              reduce using rule 118 (expresionCorcheteOR -> [ expresionOpcional ] .)
    TS              reduce using rule 118 (expresionCorcheteOR -> [ expresionOpcional ] .)


state 270

    (80) sentenciaPara -> FOR ID DOSPUNTOSIGUAL expresion DOBLEPUNTO expresion . DO sentenciaSecuencia END
    DO              shift and go to state 281


state 271

    (63) asignacion -> ID selector DOSPUNTOSIGUAL condicion | expresion .
    ;               reduce using rule 63 (asignacion -> ID selector DOSPUNTOSIGUAL condicion | expresion .)
    END             reduce using rule 63 (asignacion -> ID selector DOSPUNTOSIGUAL condicion | expresion .)
    ELSIF           reduce using rule 63 (asignacion -> ID selector DOSPUNTOSIGUAL condicion | expresion .)
    ELSE            reduce using rule 63 (asignacion -> ID selector DOSPUNTOSIGUAL condicion | expresion .)


state 272

    (73) sentenciaSi -> IF relacion THEN sentenciaSecuencia sentenciaSiSino sentenciaSiEntonces . END
    END             shift and go to state 282


state 273

    (78) sentenciaSiEntonces -> empty .
    END             reduce using rule 78 (sentenciaSiEntonces -> empty .)


state 274

    (79) sentenciaSiEntonces -> ELSE . sentenciaSecuencia
    (86) sentenciaSecuencia -> . sentencia sentenciaPuntoComa
    (81) sentencia -> . empty
    (82) sentencia -> . sentenciaPara
    (83) sentencia -> . sentenciaSi
    (84) sentencia -> . asignacionUnidad
    (85) sentencia -> . asignacion
    (143) empty -> .
    (80) sentenciaPara -> . FOR ID DOSPUNTOSIGUAL expresion DOBLEPUNTO expresion DO sentenciaSecuencia END
    (73) sentenciaSi -> . IF relacion THEN sentenciaSecuencia sentenciaSiSino sentenciaSiEntonces END
    (141) asignacionUnidad -> . ID selector error listaExpresiones )
    (142) asignacionUnidad -> . ID selector ( listaExpresiones )
    (63) asignacion -> . ID selector DOSPUNTOSIGUAL condicion | expresion
    (64) asignacion -> . ID selector DOSPUNTOSIGUAL expresion
    ;               reduce using rule 143 (empty -> .)
    END             reduce using rule 143 (empty -> .)
    FOR             shift and go to state 148
    IF              shift and go to state 150
    ID              shift and go to state 149

    sentenciaSecuencia             shift and go to state 283
    sentencia                      shift and go to state 142
    empty                          shift and go to state 143
    sentenciaPara                  shift and go to state 144
    sentenciaSi                    shift and go to state 145
    asignacionUnidad               shift and go to state 146
    asignacion                     shift and go to state 147

state 275

    (77) sentenciaSiSinoR -> sentenciaSiSinoR ELSIF . relacion THEN sentenciaSecuencia
    (66) relacion -> . expresion simbolosRelacion expresion
    (56) expresion -> . termino terminoMasMenos
    (47) termino -> . factor terminoOperadores
    (35) factor -> . SR ( expresion , expresion )
    (36) factor -> . LATCH ( expresion , expresion )
    (37) factor -> . REG ( expresionComaO expresion
    (38) factor -> . MUX ( expresion , expresion : expresion , expresion , expresion , expresion )
    (39) factor -> . MUX ( expresion : expresion , expresion )
    (40) factor -> . ( expresion )
    (41) factor -> . ~ factor
    (42) factor -> . INTEGER
    (43) factor -> . LOGICVALUE
    (44) factor -> . ID selector
    SR              shift and go to state 58
    LATCH           shift and go to state 60
    REG             shift and go to state 61
    MUX             shift and go to state 62
    (               shift and go to state 59
    ~               shift and go to state 63
    INTEGER         shift and go to state 64
    LOGICVALUE      shift and go to state 65
    ID              shift and go to state 54

    relacion                       shift and go to state 284
    expresion                      shift and go to state 180
    termino                        shift and go to state 56
    factor                         shift and go to state 57

state 276

    (76) sentenciaSiSinoR -> ELSIF relacion . THEN sentenciaSecuencia
    THEN            shift and go to state 285


state 277

    (38) factor -> MUX ( expresion , expresion : expresion , expresion . , expresion , expresion )
    ,               shift and go to state 286


state 278

    (124) declaracionTipo -> TYPE ID simboloPor listaIdParentesis ; declaracionConstanteCONST tipoFormalIN tipoFormlINOUT declaracionVariableOUT declaracionVariableVAR sentenciaSecuenciaBEGIN END ID .
    ;               reduce using rule 124 (declaracionTipo -> TYPE ID simboloPor listaIdParentesis ; declaracionConstanteCONST tipoFormalIN tipoFormlINOUT declaracionVariableOUT declaracionVariableVAR sentenciaSecuenciaBEGIN END ID .)


state 279

    (140) tipoFormlBuslistaIdR -> tipoFormlBuslistaIdR listaId : tipoFormalBus ; .
    ID              reduce using rule 140 (tipoFormlBuslistaIdR -> tipoFormlBuslistaIdR listaId : tipoFormalBus ; .)
    OUT             reduce using rule 140 (tipoFormlBuslistaIdR -> tipoFormlBuslistaIdR listaId : tipoFormalBus ; .)
    VAR             reduce using rule 140 (tipoFormlBuslistaIdR -> tipoFormlBuslistaIdR listaId : tipoFormalBus ; .)
    BEGIN           reduce using rule 140 (tipoFormlBuslistaIdR -> tipoFormlBuslistaIdR listaId : tipoFormalBus ; .)
    END             reduce using rule 140 (tipoFormlBuslistaIdR -> tipoFormlBuslistaIdR listaId : tipoFormalBus ; .)


state 280

    (119) expresionCorcheteOR -> expresionCorcheteOR [ expresionOpcional ] .
    [               reduce using rule 119 (expresionCorcheteOR -> expresionCorcheteOR [ expresionOpcional ] .)
    BIT             reduce using rule 119 (expresionCorcheteOR -> expresionCorcheteOR [ expresionOpcional ] .)
    OC              reduce using rule 119 (expresionCorcheteOR -> expresionCorcheteOR [ expresionOpcional ] .)
    TS              reduce using rule 119 (expresionCorcheteOR -> expresionCorcheteOR [ expresionOpcional ] .)


state 281

    (80) sentenciaPara -> FOR ID DOSPUNTOSIGUAL expresion DOBLEPUNTO expresion DO . sentenciaSecuencia END
    (86) sentenciaSecuencia -> . sentencia sentenciaPuntoComa
    (81) sentencia -> . empty
    (82) sentencia -> . sentenciaPara
    (83) sentencia -> . sentenciaSi
    (84) sentencia -> . asignacionUnidad
    (85) sentencia -> . asignacion
    (143) empty -> .
    (80) sentenciaPara -> . FOR ID DOSPUNTOSIGUAL expresion DOBLEPUNTO expresion DO sentenciaSecuencia END
    (73) sentenciaSi -> . IF relacion THEN sentenciaSecuencia sentenciaSiSino sentenciaSiEntonces END
    (141) asignacionUnidad -> . ID selector error listaExpresiones )
    (142) asignacionUnidad -> . ID selector ( listaExpresiones )
    (63) asignacion -> . ID selector DOSPUNTOSIGUAL condicion | expresion
    (64) asignacion -> . ID selector DOSPUNTOSIGUAL expresion
    ;               reduce using rule 143 (empty -> .)
    END             reduce using rule 143 (empty -> .)
    FOR             shift and go to state 148
    IF              shift and go to state 150
    ID              shift and go to state 149

    sentenciaSecuencia             shift and go to state 287
    sentencia                      shift and go to state 142
    empty                          shift and go to state 143
    sentenciaPara                  shift and go to state 144
    sentenciaSi                    shift and go to state 145
    asignacionUnidad               shift and go to state 146
    asignacion                     shift and go to state 147

state 282

    (73) sentenciaSi -> IF relacion THEN sentenciaSecuencia sentenciaSiSino sentenciaSiEntonces END .
    ;               reduce using rule 73 (sentenciaSi -> IF relacion THEN sentenciaSecuencia sentenciaSiSino sentenciaSiEntonces END .)
    END             reduce using rule 73 (sentenciaSi -> IF relacion THEN sentenciaSecuencia sentenciaSiSino sentenciaSiEntonces END .)
    ELSIF           reduce using rule 73 (sentenciaSi -> IF relacion THEN sentenciaSecuencia sentenciaSiSino sentenciaSiEntonces END .)
    ELSE            reduce using rule 73 (sentenciaSi -> IF relacion THEN sentenciaSecuencia sentenciaSiSino sentenciaSiEntonces END .)


state 283

    (79) sentenciaSiEntonces -> ELSE sentenciaSecuencia .
    END             reduce using rule 79 (sentenciaSiEntonces -> ELSE sentenciaSecuencia .)


state 284

    (77) sentenciaSiSinoR -> sentenciaSiSinoR ELSIF relacion . THEN sentenciaSecuencia
    THEN            shift and go to state 288


state 285

    (76) sentenciaSiSinoR -> ELSIF relacion THEN . sentenciaSecuencia
    (86) sentenciaSecuencia -> . sentencia sentenciaPuntoComa
    (81) sentencia -> . empty
    (82) sentencia -> . sentenciaPara
    (83) sentencia -> . sentenciaSi
    (84) sentencia -> . asignacionUnidad
    (85) sentencia -> . asignacion
    (143) empty -> .
    (80) sentenciaPara -> . FOR ID DOSPUNTOSIGUAL expresion DOBLEPUNTO expresion DO sentenciaSecuencia END
    (73) sentenciaSi -> . IF relacion THEN sentenciaSecuencia sentenciaSiSino sentenciaSiEntonces END
    (141) asignacionUnidad -> . ID selector error listaExpresiones )
    (142) asignacionUnidad -> . ID selector ( listaExpresiones )
    (63) asignacion -> . ID selector DOSPUNTOSIGUAL condicion | expresion
    (64) asignacion -> . ID selector DOSPUNTOSIGUAL expresion
    ;               reduce using rule 143 (empty -> .)
    ELSIF           reduce using rule 143 (empty -> .)
    ELSE            reduce using rule 143 (empty -> .)
    END             reduce using rule 143 (empty -> .)
    FOR             shift and go to state 148
    IF              shift and go to state 150
    ID              shift and go to state 149

    sentenciaSecuencia             shift and go to state 289
    sentencia                      shift and go to state 142
    empty                          shift and go to state 143
    sentenciaPara                  shift and go to state 144
    sentenciaSi                    shift and go to state 145
    asignacionUnidad               shift and go to state 146
    asignacion                     shift and go to state 147

state 286

    (38) factor -> MUX ( expresion , expresion : expresion , expresion , . expresion , expresion )
    (56) expresion -> . termino terminoMasMenos
    (47) termino -> . factor terminoOperadores
    (35) factor -> . SR ( expresion , expresion )
    (36) factor -> . LATCH ( expresion , expresion )
    (37) factor -> . REG ( expresionComaO expresion
    (38) factor -> . MUX ( expresion , expresion : expresion , expresion , expresion , expresion )
    (39) factor -> . MUX ( expresion : expresion , expresion )
    (40) factor -> . ( expresion )
    (41) factor -> . ~ factor
    (42) factor -> . INTEGER
    (43) factor -> . LOGICVALUE
    (44) factor -> . ID selector
    SR              shift and go to state 58
    LATCH           shift and go to state 60
    REG             shift and go to state 61
    MUX             shift and go to state 62
    (               shift and go to state 59
    ~               shift and go to state 63
    INTEGER         shift and go to state 64
    LOGICVALUE      shift and go to state 65
    ID              shift and go to state 54

    expresion                      shift and go to state 290
    termino                        shift and go to state 56
    factor                         shift and go to state 57

state 287

    (80) sentenciaPara -> FOR ID DOSPUNTOSIGUAL expresion DOBLEPUNTO expresion DO sentenciaSecuencia . END
    END             shift and go to state 291


state 288

    (77) sentenciaSiSinoR -> sentenciaSiSinoR ELSIF relacion THEN . sentenciaSecuencia
    (86) sentenciaSecuencia -> . sentencia sentenciaPuntoComa
    (81) sentencia -> . empty
    (82) sentencia -> . sentenciaPara
    (83) sentencia -> . sentenciaSi
    (84) sentencia -> . asignacionUnidad
    (85) sentencia -> . asignacion
    (143) empty -> .
    (80) sentenciaPara -> . FOR ID DOSPUNTOSIGUAL expresion DOBLEPUNTO expresion DO sentenciaSecuencia END
    (73) sentenciaSi -> . IF relacion THEN sentenciaSecuencia sentenciaSiSino sentenciaSiEntonces END
    (141) asignacionUnidad -> . ID selector error listaExpresiones )
    (142) asignacionUnidad -> . ID selector ( listaExpresiones )
    (63) asignacion -> . ID selector DOSPUNTOSIGUAL condicion | expresion
    (64) asignacion -> . ID selector DOSPUNTOSIGUAL expresion
    ;               reduce using rule 143 (empty -> .)
    ELSIF           reduce using rule 143 (empty -> .)
    ELSE            reduce using rule 143 (empty -> .)
    END             reduce using rule 143 (empty -> .)
    FOR             shift and go to state 148
    IF              shift and go to state 150
    ID              shift and go to state 149

    sentenciaSecuencia             shift and go to state 292
    sentencia                      shift and go to state 142
    empty                          shift and go to state 143
    sentenciaPara                  shift and go to state 144
    sentenciaSi                    shift and go to state 145
    asignacionUnidad               shift and go to state 146
    asignacion                     shift and go to state 147

state 289

    (76) sentenciaSiSinoR -> ELSIF relacion THEN sentenciaSecuencia .
    ELSIF           reduce using rule 76 (sentenciaSiSinoR -> ELSIF relacion THEN sentenciaSecuencia .)
    ELSE            reduce using rule 76 (sentenciaSiSinoR -> ELSIF relacion THEN sentenciaSecuencia .)
    END             reduce using rule 76 (sentenciaSiSinoR -> ELSIF relacion THEN sentenciaSecuencia .)


state 290

    (38) factor -> MUX ( expresion , expresion : expresion , expresion , expresion . , expresion )
    ,               shift and go to state 293


state 291

    (80) sentenciaPara -> FOR ID DOSPUNTOSIGUAL expresion DOBLEPUNTO expresion DO sentenciaSecuencia END .
    ;               reduce using rule 80 (sentenciaPara -> FOR ID DOSPUNTOSIGUAL expresion DOBLEPUNTO expresion DO sentenciaSecuencia END .)
    END             reduce using rule 80 (sentenciaPara -> FOR ID DOSPUNTOSIGUAL expresion DOBLEPUNTO expresion DO sentenciaSecuencia END .)
    ELSIF           reduce using rule 80 (sentenciaPara -> FOR ID DOSPUNTOSIGUAL expresion DOBLEPUNTO expresion DO sentenciaSecuencia END .)
    ELSE            reduce using rule 80 (sentenciaPara -> FOR ID DOSPUNTOSIGUAL expresion DOBLEPUNTO expresion DO sentenciaSecuencia END .)


state 292

    (77) sentenciaSiSinoR -> sentenciaSiSinoR ELSIF relacion THEN sentenciaSecuencia .
    ELSIF           reduce using rule 77 (sentenciaSiSinoR -> sentenciaSiSinoR ELSIF relacion THEN sentenciaSecuencia .)
    ELSE            reduce using rule 77 (sentenciaSiSinoR -> sentenciaSiSinoR ELSIF relacion THEN sentenciaSecuencia .)
    END             reduce using rule 77 (sentenciaSiSinoR -> sentenciaSiSinoR ELSIF relacion THEN sentenciaSecuencia .)


state 293

    (38) factor -> MUX ( expresion , expresion : expresion , expresion , expresion , . expresion )
    (56) expresion -> . termino terminoMasMenos
    (47) termino -> . factor terminoOperadores
    (35) factor -> . SR ( expresion , expresion )
    (36) factor -> . LATCH ( expresion , expresion )
    (37) factor -> . REG ( expresionComaO expresion
    (38) factor -> . MUX ( expresion , expresion : expresion , expresion , expresion , expresion )
    (39) factor -> . MUX ( expresion : expresion , expresion )
    (40) factor -> . ( expresion )
    (41) factor -> . ~ factor
    (42) factor -> . INTEGER
    (43) factor -> . LOGICVALUE
    (44) factor -> . ID selector
    SR              shift and go to state 58
    LATCH           shift and go to state 60
    REG             shift and go to state 61
    MUX             shift and go to state 62
    (               shift and go to state 59
    ~               shift and go to state 63
    INTEGER         shift and go to state 64
    LOGICVALUE      shift and go to state 65
    ID              shift and go to state 54

    expresion                      shift and go to state 294
    termino                        shift and go to state 56
    factor                         shift and go to state 57

state 294

    (38) factor -> MUX ( expresion , expresion : expresion , expresion , expresion , expresion . )
    )               shift and go to state 295


state 295

    (38) factor -> MUX ( expresion , expresion : expresion , expresion , expresion , expresion ) .
    MOD             reduce using rule 38 (factor -> MUX ( expresion , expresion : expresion , expresion , expresion , expresion ) .)
    DIV             reduce using rule 38 (factor -> MUX ( expresion , expresion : expresion , expresion , expresion , expresion ) .)
    /               reduce using rule 38 (factor -> MUX ( expresion , expresion : expresion , expresion , expresion , expresion ) .)
    *               reduce using rule 38 (factor -> MUX ( expresion , expresion : expresion , expresion , expresion , expresion ) .)
    -               reduce using rule 38 (factor -> MUX ( expresion , expresion : expresion , expresion , expresion , expresion ) .)
    +               reduce using rule 38 (factor -> MUX ( expresion , expresion : expresion , expresion , expresion , expresion ) .)
    ;               reduce using rule 38 (factor -> MUX ( expresion , expresion : expresion , expresion , expresion , expresion ) .)
    )               reduce using rule 38 (factor -> MUX ( expresion , expresion : expresion , expresion , expresion , expresion ) .)
    ]               reduce using rule 38 (factor -> MUX ( expresion , expresion : expresion , expresion , expresion , expresion ) .)
    ,               reduce using rule 38 (factor -> MUX ( expresion , expresion : expresion , expresion , expresion , expresion ) .)
    :               reduce using rule 38 (factor -> MUX ( expresion , expresion : expresion , expresion , expresion , expresion ) .)
    MAYORIGUAL      reduce using rule 38 (factor -> MUX ( expresion , expresion : expresion , expresion , expresion , expresion ) .)
    >               reduce using rule 38 (factor -> MUX ( expresion , expresion : expresion , expresion , expresion , expresion ) .)
    MENORIGUAL      reduce using rule 38 (factor -> MUX ( expresion , expresion : expresion , expresion , expresion , expresion ) .)
    <               reduce using rule 38 (factor -> MUX ( expresion , expresion : expresion , expresion , expresion , expresion ) .)
    #               reduce using rule 38 (factor -> MUX ( expresion , expresion : expresion , expresion , expresion , expresion ) .)
    =               reduce using rule 38 (factor -> MUX ( expresion , expresion : expresion , expresion , expresion , expresion ) .)
    DOBLEPUNTO      reduce using rule 38 (factor -> MUX ( expresion , expresion : expresion , expresion , expresion , expresion ) .)
    END             reduce using rule 38 (factor -> MUX ( expresion , expresion : expresion , expresion , expresion , expresion ) .)
    ELSIF           reduce using rule 38 (factor -> MUX ( expresion , expresion : expresion , expresion , expresion , expresion ) .)
    ELSE            reduce using rule 38 (factor -> MUX ( expresion , expresion : expresion , expresion , expresion , expresion ) .)
    |               reduce using rule 38 (factor -> MUX ( expresion , expresion : expresion , expresion , expresion , expresion ) .)
    THEN            reduce using rule 38 (factor -> MUX ( expresion , expresion : expresion , expresion , expresion , expresion ) .)
    DO              reduce using rule 38 (factor -> MUX ( expresion , expresion : expresion , expresion , expresion , expresion ) .)


Conflicts:

shift/reduce conflict for - in state 56 resolved as shift
shift/reduce conflict for + in state 56 resolved as shift
shift/reduce conflict for MOD in state 57 resolved as shift
shift/reduce conflict for DIV in state 57 resolved as shift
shift/reduce conflict for / in state 57 resolved as shift
shift/reduce conflict for * in state 57 resolved as shift
shift/reduce conflict for - in state 88 resolved as shift
shift/reduce conflict for + in state 88 resolved as shift
shift/reduce conflict for MOD in state 94 resolved as shift
shift/reduce conflict for DIV in state 94 resolved as shift
shift/reduce conflict for / in state 94 resolved as shift
shift/reduce conflict for * in state 94 resolved as shift
shift/reduce conflict for SR in state 103 resolved as shift
shift/reduce conflict for LATCH in state 103 resolved as shift
shift/reduce conflict for REG in state 103 resolved as shift
shift/reduce conflict for MUX in state 103 resolved as shift
shift/reduce conflict for ( in state 103 resolved as shift
shift/reduce conflict for ~ in state 103 resolved as shift
shift/reduce conflict for INTEGER in state 103 resolved as shift
shift/reduce conflict for LOGICVALUE in state 103 resolved as shift
shift/reduce conflict for ID in state 103 resolved as shift