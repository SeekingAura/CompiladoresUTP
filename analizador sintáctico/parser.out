Grammar:

Rule 0     S' -> lola
Rule 1     lola -> modulo
Rule 2     lola -> lola modulo
Rule 3     modulo -> MODULE ID ; declaracionTipoPuntoComa declaracionConstanteCONST declaracionVariableIN declaracionVariableINOUT declaracionVariableOUT declaracionVariableVAR sentenciaSecuenciaBEGIN END ID .
Rule 4     tipoSimple -> ID conjuntoExpresiones
Rule 5     tipoSimple -> tipoBasico
Rule 6     conjuntoExpresiones -> ( listaExpresiones )
Rule 7     conjuntoExpresiones -> empty
Rule 8     tipoBasico -> OC
Rule 9     tipoBasico -> TS
Rule 10    tipoBasico -> BIT
Rule 11    listaExpresiones -> expresion
Rule 12    listaExpresiones -> listaExpresiones , expresion
Rule 13    tipo -> expresionCorchete tipoSimple
Rule 14    expresionCorchete -> empty
Rule 15    expresionCorchete -> expresionCorcheteR
Rule 16    expresionCorcheteR -> [ expresion ]
Rule 17    expresionCorcheteR -> expresionCorcheteR [ expresion ]
Rule 18    declaracionConstante -> ID DOSPUNTOSIGUAL expresion ;
Rule 19    declaracionVariable -> listaId : tipo ;
Rule 20    listaId -> ID IDComa
Rule 21    IDComa -> empty
Rule 22    IDComa -> IDComaR
Rule 23    IDComaR -> , ID
Rule 24    IDComaR -> IDComaR , ID
Rule 25    selector -> empty
Rule 26    selector -> selectorR
Rule 27    selectorR -> selectorRR
Rule 28    selectorR -> selectorR selectorRR
Rule 29    selectorRR -> [ expresion ]
Rule 30    selectorRR -> . INTEGER
Rule 31    selectorRR -> . ID
Rule 32    factor -> SR ( expresion , expresion )
Rule 33    factor -> LATCH ( expresion , expresion )
Rule 34    factor -> REG ( expresionComaO expresion )
Rule 35    factor -> MUX ( expresion , expresion : expresion , expresion , expresion , expresion )
Rule 36    factor -> MUX ( expresion : expresion , expresion )
Rule 37    factor -> ( expresion )
Rule 38    factor -> ~ factor
Rule 39    factor -> INTEGER
Rule 40    factor -> LOGICVALUE
Rule 41    factor -> ID selector
Rule 42    expresionComaO -> empty
Rule 43    expresionComaO -> expresion ,
Rule 44    termino -> factor terminoOperadores
Rule 45    terminoOperadores -> empty
Rule 46    terminoOperadores -> terminoOperadoresR
Rule 47    terminoOperadoresR -> simbolosProd factor
Rule 48    terminoOperadoresR -> terminoOperadoresR simbolosProd factor
Rule 49    simbolosProd -> MOD
Rule 50    simbolosProd -> DIV
Rule 51    simbolosProd -> /
Rule 52    simbolosProd -> *
Rule 53    expresion -> termino terminoMasMenos
Rule 54    terminoMasMenos -> empty
Rule 55    terminoMasMenos -> terminoMasMenosR
Rule 56    terminoMasMenosR -> simbolosMasMenos termino
Rule 57    terminoMasMenosR -> terminoMasMenosR simbolosMasMenos termino
Rule 58    simbolosMasMenos -> -  [precedence=left, level=1]
Rule 59    simbolosMasMenos -> +  [precedence=left, level=1]
Rule 60    asignacion -> ID selector DOSPUNTOSIGUAL condicion | expresion
Rule 61    asignacion -> ID selector DOSPUNTOSIGUAL expresion
Rule 62    condicion -> expresion
Rule 63    relacion -> expresion MAYORIGUAL expresion
Rule 64    relacion -> expresion > expresion
Rule 65    relacion -> expresion MENORIGUAL expresion
Rule 66    relacion -> expresion < expresion
Rule 67    relacion -> expresion # expresion
Rule 68    relacion -> expresion = expresion
Rule 69    sentenciaSi -> IF relacion THEN sentenciaSecuencia sentenciaSiSino sentenciaSiEntonces END
Rule 70    sentenciaSiSino -> empty
Rule 71    sentenciaSiSino -> sentenciaSiSinoR
Rule 72    sentenciaSiSinoR -> ELSIF relacion THEN sentenciaSecuencia
Rule 73    sentenciaSiSinoR -> sentenciaSiSinoR ELSIF relacion THEN sentenciaSecuencia
Rule 74    sentenciaSiEntonces -> empty
Rule 75    sentenciaSiEntonces -> ELSE sentenciaSecuencia
Rule 76    sentenciaPara -> FOR ID DOSPUNTOSIGUAL expresion DOBLEPUNTO expresion DO sentenciaSecuencia END
Rule 77    sentencia -> empty
Rule 78    sentencia -> sentenciaPara
Rule 79    sentencia -> sentenciaSi
Rule 80    sentencia -> asignacionUnidad
Rule 81    sentencia -> asignacion
Rule 82    sentenciaSecuencia -> sentencia sentenciaPuntoComa
Rule 83    sentenciaPuntoComa -> empty
Rule 84    sentenciaPuntoComa -> sentenciaPuntoComaR
Rule 85    sentenciaPuntoComaR -> ; sentencia
Rule 86    sentenciaPuntoComaR -> sentenciaPuntoComaR ; sentencia
Rule 87    declaracionTipoPuntoComa -> empty
Rule 88    declaracionTipoPuntoComa -> declaracionTipoPuntoComaR
Rule 89    declaracionTipoPuntoComaR -> declaracionTipo ;
Rule 90    declaracionTipoPuntoComaR -> declaracionTipoPuntoComaR declaracionTipo ;
Rule 91    declaracionConstanteCONST -> empty
Rule 92    declaracionConstanteCONST -> CONST declaracionConstanteRecursivo
Rule 93    declaracionConstanteRecursivo -> empty
Rule 94    declaracionConstanteRecursivo -> declaracionConstanteRecursivoR
Rule 95    declaracionConstanteRecursivoR -> declaracionConstante
Rule 96    declaracionConstanteRecursivoR -> declaracionConstanteRecursivoR declaracionConstante
Rule 97    declaracionVariableIN -> empty
Rule 98    declaracionVariableIN -> IN declaracionVariableRecursivo
Rule 99    declaracionVariableINOUT -> empty
Rule 100   declaracionVariableINOUT -> INOUT declaracionVariableRecursivo
Rule 101   declaracionVariableOUT -> empty
Rule 102   declaracionVariableOUT -> OUT declaracionVariableRecursivo
Rule 103   declaracionVariableVAR -> empty
Rule 104   declaracionVariableVAR -> VAR declaracionVariableRecursivo
Rule 105   sentenciaSecuenciaBEGIN -> empty
Rule 106   sentenciaSecuenciaBEGIN -> BEGIN sentenciaSecuencia
Rule 107   declaracionVariableRecursivo -> empty
Rule 108   declaracionVariableRecursivo -> declaracionVariableRecursivoR
Rule 109   declaracionVariableRecursivoR -> declaracionVariable
Rule 110   declaracionVariableRecursivoR -> declaracionVariableRecursivoR declaracionVariable
Rule 111   tipoFormal -> expresionCorcheteO BIT
Rule 112   expresionCorcheteO -> empty
Rule 113   expresionCorcheteO -> expresionCorcheteOR
Rule 114   expresionCorcheteOR -> [ expresionOpcional ]
Rule 115   expresionCorcheteOR -> expresionCorcheteOR [ expresionOpcional ]
Rule 116   expresionOpcional -> empty
Rule 117   expresionOpcional -> expresion
Rule 118   tipoFormalBus -> expresionCorcheteO OC
Rule 119   tipoFormalBus -> expresionCorcheteO TS
Rule 120   declaracionTipo -> TYPE ID simboloPor listaIdParentesis ; declaracionConstanteCONST tipoFormalIN tipoFormlINOUT declaracionVariableOUT declaracionVariableVAR sentenciaSecuenciaBEGIN END ID
Rule 121   simboloPor -> empty
Rule 122   simboloPor -> *
Rule 123   listaIdParentesis -> empty
Rule 124   listaIdParentesis -> ( listaId )
Rule 125   tipoFormalIN -> empty
Rule 126   tipoFormalIN -> IN tipoFormallistaId
Rule 127   tipoFormallistaId -> empty
Rule 128   tipoFormallistaId -> tipoFormallistaIdR
Rule 129   tipoFormallistaIdR -> listaId : tipoFormal ;
Rule 130   tipoFormallistaIdR -> tipoFormallistaIdR listaId : tipoFormal ;
Rule 131   tipoFormlINOUT -> empty
Rule 132   tipoFormlINOUT -> INOUT tipoFormlBuslistaId
Rule 133   tipoFormlBuslistaId -> empty
Rule 134   tipoFormlBuslistaId -> tipoFormlBuslistaIdR
Rule 135   tipoFormlBuslistaIdR -> listaId : tipoFormalBus ;
Rule 136   tipoFormlBuslistaIdR -> tipoFormlBuslistaIdR listaId : tipoFormalBus ;
Rule 137   asignacionUnidad -> ID selector ( listaExpresiones )
Rule 138   empty -> <empty>

Terminals, with rules where they appear:

#                    : 67
(                    : 6 32 33 34 35 36 37 124 137
)                    : 6 32 33 34 35 36 37 124 137
*                    : 52 122
+                    : 59
,                    : 12 23 24 32 33 35 35 35 35 36 43
-                    : 58
.                    : 3 30 31
/                    : 51
:                    : 19 35 36 129 130 135 136
;                    : 3 18 19 85 86 89 90 120 129 130 135 136
<                    : 66
=                    : 68
>                    : 64
BEGIN                : 106
BIT                  : 10 111
CONST                : 92
DIV                  : 50
DO                   : 76
DOBLEPUNTO           : 76
DOSPUNTOSIGUAL       : 18 60 61 76
ELSE                 : 75
ELSIF                : 72 73
END                  : 3 69 76 120
FOR                  : 76
ID                   : 3 3 4 18 20 23 24 31 41 60 61 76 120 120 137
IF                   : 69
IN                   : 98 126
INOUT                : 100 132
INTEGER              : 30 39
LATCH                : 33
LOGICVALUE           : 40
MAYORIGUAL           : 63
MENORIGUAL           : 65
MOD                  : 49
MODULE               : 3
MUX                  : 35 36
OC                   : 8 118
OUT                  : 102
REG                  : 34
SR                   : 32
THEN                 : 69 72 73
TS                   : 9 119
TYPE                 : 120
VAR                  : 104
[                    : 16 17 29 114 115
]                    : 16 17 29 114 115
error                : 
|                    : 60
~                    : 38

Nonterminals, with rules where they appear:

IDComa               : 20
IDComaR              : 22 24
asignacion           : 81
asignacionUnidad     : 80
condicion            : 60
conjuntoExpresiones  : 4
declaracionConstante : 95 96
declaracionConstanteCONST : 3 120
declaracionConstanteRecursivo : 92
declaracionConstanteRecursivoR : 94 96
declaracionTipo      : 89 90
declaracionTipoPuntoComa : 3
declaracionTipoPuntoComaR : 88 90
declaracionVariable  : 109 110
declaracionVariableIN : 3
declaracionVariableINOUT : 3
declaracionVariableOUT : 3 120
declaracionVariableRecursivo : 98 100 102 104
declaracionVariableRecursivoR : 108 110
declaracionVariableVAR : 3 120
empty                : 7 14 21 25 42 45 54 70 74 77 83 87 91 93 97 99 101 103 105 107 112 116 121 123 125 127 131 133
expresion            : 11 12 16 17 18 29 32 32 33 33 34 35 35 35 35 35 35 36 36 36 37 43 60 61 62 63 63 64 64 65 65 66 66 67 67 68 68 76 76 117
expresionComaO       : 34
expresionCorchete    : 13
expresionCorcheteO   : 111 118 119
expresionCorcheteOR  : 113 115
expresionCorcheteR   : 15 17
expresionOpcional    : 114 115
factor               : 38 44 47 48
listaExpresiones     : 6 12 137
listaId              : 19 124 129 130 135 136
listaIdParentesis    : 120
lola                 : 2 0
modulo               : 1 2
relacion             : 69 72 73
selector             : 41 60 61 137
selectorR            : 26 28
selectorRR           : 27 28
sentencia            : 82 85 86
sentenciaPara        : 78
sentenciaPuntoComa   : 82
sentenciaPuntoComaR  : 84 86
sentenciaSecuencia   : 69 72 73 75 76 106
sentenciaSecuenciaBEGIN : 3 120
sentenciaSi          : 79
sentenciaSiEntonces  : 69
sentenciaSiSino      : 69
sentenciaSiSinoR     : 71 73
simboloPor           : 120
simbolosMasMenos     : 56 57
simbolosProd         : 47 48
termino              : 53 56 57
terminoMasMenos      : 53
terminoMasMenosR     : 55 57
terminoOperadores    : 44
terminoOperadoresR   : 46 48
tipo                 : 19
tipoBasico           : 5
tipoFormal           : 129 130
tipoFormalBus        : 135 136
tipoFormalIN         : 120
tipoFormallistaId    : 126
tipoFormallistaIdR   : 128 130
tipoFormlBuslistaId  : 132
tipoFormlBuslistaIdR : 134 136
tipoFormlINOUT       : 120
tipoSimple           : 13


state 0

    (0) S' -> . lola
    (1) lola -> . modulo
    (2) lola -> . lola modulo
    (3) modulo -> . MODULE ID ; declaracionTipoPuntoComa declaracionConstanteCONST declaracionVariableIN declaracionVariableINOUT declaracionVariableOUT declaracionVariableVAR sentenciaSecuenciaBEGIN END ID .
    MODULE          shift and go to state 3

    lola                           shift and go to state 1
    modulo                         shift and go to state 2

state 1

    (0) S' -> lola .
    (2) lola -> lola . modulo
    (3) modulo -> . MODULE ID ; declaracionTipoPuntoComa declaracionConstanteCONST declaracionVariableIN declaracionVariableINOUT declaracionVariableOUT declaracionVariableVAR sentenciaSecuenciaBEGIN END ID .
    MODULE          shift and go to state 3

    modulo                         shift and go to state 4

state 2

    (1) lola -> modulo .
    MODULE          reduce using rule 1 (lola -> modulo .)
    $end            reduce using rule 1 (lola -> modulo .)


state 3

    (3) modulo -> MODULE . ID ; declaracionTipoPuntoComa declaracionConstanteCONST declaracionVariableIN declaracionVariableINOUT declaracionVariableOUT declaracionVariableVAR sentenciaSecuenciaBEGIN END ID .
    ID              shift and go to state 5


state 4

    (2) lola -> lola modulo .
    MODULE          reduce using rule 2 (lola -> lola modulo .)
    $end            reduce using rule 2 (lola -> lola modulo .)


state 5

    (3) modulo -> MODULE ID . ; declaracionTipoPuntoComa declaracionConstanteCONST declaracionVariableIN declaracionVariableINOUT declaracionVariableOUT declaracionVariableVAR sentenciaSecuenciaBEGIN END ID .
    ;               shift and go to state 6


state 6

    (3) modulo -> MODULE ID ; . declaracionTipoPuntoComa declaracionConstanteCONST declaracionVariableIN declaracionVariableINOUT declaracionVariableOUT declaracionVariableVAR sentenciaSecuenciaBEGIN END ID .
    (87) declaracionTipoPuntoComa -> . empty
    (88) declaracionTipoPuntoComa -> . declaracionTipoPuntoComaR
    (138) empty -> .
    (89) declaracionTipoPuntoComaR -> . declaracionTipo ;
    (90) declaracionTipoPuntoComaR -> . declaracionTipoPuntoComaR declaracionTipo ;
    (120) declaracionTipo -> . TYPE ID simboloPor listaIdParentesis ; declaracionConstanteCONST tipoFormalIN tipoFormlINOUT declaracionVariableOUT declaracionVariableVAR sentenciaSecuenciaBEGIN END ID
    CONST           reduce using rule 138 (empty -> .)
    IN              reduce using rule 138 (empty -> .)
    INOUT           reduce using rule 138 (empty -> .)
    OUT             reduce using rule 138 (empty -> .)
    VAR             reduce using rule 138 (empty -> .)
    BEGIN           reduce using rule 138 (empty -> .)
    END             reduce using rule 138 (empty -> .)
    TYPE            shift and go to state 11

    declaracionTipoPuntoComa       shift and go to state 7
    empty                          shift and go to state 8
    declaracionTipoPuntoComaR      shift and go to state 9
    declaracionTipo                shift and go to state 10

state 7

    (3) modulo -> MODULE ID ; declaracionTipoPuntoComa . declaracionConstanteCONST declaracionVariableIN declaracionVariableINOUT declaracionVariableOUT declaracionVariableVAR sentenciaSecuenciaBEGIN END ID .
    (91) declaracionConstanteCONST -> . empty
    (92) declaracionConstanteCONST -> . CONST declaracionConstanteRecursivo
    (138) empty -> .
    CONST           shift and go to state 14
    IN              reduce using rule 138 (empty -> .)
    INOUT           reduce using rule 138 (empty -> .)
    OUT             reduce using rule 138 (empty -> .)
    VAR             reduce using rule 138 (empty -> .)
    BEGIN           reduce using rule 138 (empty -> .)
    END             reduce using rule 138 (empty -> .)

    declaracionConstanteCONST      shift and go to state 12
    empty                          shift and go to state 13

state 8

    (87) declaracionTipoPuntoComa -> empty .
    CONST           reduce using rule 87 (declaracionTipoPuntoComa -> empty .)
    IN              reduce using rule 87 (declaracionTipoPuntoComa -> empty .)
    INOUT           reduce using rule 87 (declaracionTipoPuntoComa -> empty .)
    OUT             reduce using rule 87 (declaracionTipoPuntoComa -> empty .)
    VAR             reduce using rule 87 (declaracionTipoPuntoComa -> empty .)
    BEGIN           reduce using rule 87 (declaracionTipoPuntoComa -> empty .)
    END             reduce using rule 87 (declaracionTipoPuntoComa -> empty .)


state 9

    (88) declaracionTipoPuntoComa -> declaracionTipoPuntoComaR .
    (90) declaracionTipoPuntoComaR -> declaracionTipoPuntoComaR . declaracionTipo ;
    (120) declaracionTipo -> . TYPE ID simboloPor listaIdParentesis ; declaracionConstanteCONST tipoFormalIN tipoFormlINOUT declaracionVariableOUT declaracionVariableVAR sentenciaSecuenciaBEGIN END ID
    CONST           reduce using rule 88 (declaracionTipoPuntoComa -> declaracionTipoPuntoComaR .)
    IN              reduce using rule 88 (declaracionTipoPuntoComa -> declaracionTipoPuntoComaR .)
    INOUT           reduce using rule 88 (declaracionTipoPuntoComa -> declaracionTipoPuntoComaR .)
    OUT             reduce using rule 88 (declaracionTipoPuntoComa -> declaracionTipoPuntoComaR .)
    VAR             reduce using rule 88 (declaracionTipoPuntoComa -> declaracionTipoPuntoComaR .)
    BEGIN           reduce using rule 88 (declaracionTipoPuntoComa -> declaracionTipoPuntoComaR .)
    END             reduce using rule 88 (declaracionTipoPuntoComa -> declaracionTipoPuntoComaR .)
    TYPE            shift and go to state 11

    declaracionTipo                shift and go to state 15

state 10

    (89) declaracionTipoPuntoComaR -> declaracionTipo . ;
    ;               shift and go to state 16


state 11

    (120) declaracionTipo -> TYPE . ID simboloPor listaIdParentesis ; declaracionConstanteCONST tipoFormalIN tipoFormlINOUT declaracionVariableOUT declaracionVariableVAR sentenciaSecuenciaBEGIN END ID
    ID              shift and go to state 17


state 12

    (3) modulo -> MODULE ID ; declaracionTipoPuntoComa declaracionConstanteCONST . declaracionVariableIN declaracionVariableINOUT declaracionVariableOUT declaracionVariableVAR sentenciaSecuenciaBEGIN END ID .
    (97) declaracionVariableIN -> . empty
    (98) declaracionVariableIN -> . IN declaracionVariableRecursivo
    (138) empty -> .
    IN              shift and go to state 20
    INOUT           reduce using rule 138 (empty -> .)
    OUT             reduce using rule 138 (empty -> .)
    VAR             reduce using rule 138 (empty -> .)
    BEGIN           reduce using rule 138 (empty -> .)
    END             reduce using rule 138 (empty -> .)

    declaracionVariableIN          shift and go to state 18
    empty                          shift and go to state 19

state 13

    (91) declaracionConstanteCONST -> empty .
    IN              reduce using rule 91 (declaracionConstanteCONST -> empty .)
    INOUT           reduce using rule 91 (declaracionConstanteCONST -> empty .)
    OUT             reduce using rule 91 (declaracionConstanteCONST -> empty .)
    VAR             reduce using rule 91 (declaracionConstanteCONST -> empty .)
    BEGIN           reduce using rule 91 (declaracionConstanteCONST -> empty .)
    END             reduce using rule 91 (declaracionConstanteCONST -> empty .)


state 14

    (92) declaracionConstanteCONST -> CONST . declaracionConstanteRecursivo
    (93) declaracionConstanteRecursivo -> . empty
    (94) declaracionConstanteRecursivo -> . declaracionConstanteRecursivoR
    (138) empty -> .
    (95) declaracionConstanteRecursivoR -> . declaracionConstante
    (96) declaracionConstanteRecursivoR -> . declaracionConstanteRecursivoR declaracionConstante
    (18) declaracionConstante -> . ID DOSPUNTOSIGUAL expresion ;
    IN              reduce using rule 138 (empty -> .)
    INOUT           reduce using rule 138 (empty -> .)
    OUT             reduce using rule 138 (empty -> .)
    VAR             reduce using rule 138 (empty -> .)
    BEGIN           reduce using rule 138 (empty -> .)
    END             reduce using rule 138 (empty -> .)
    ID              shift and go to state 25

    declaracionConstanteRecursivo  shift and go to state 21
    empty                          shift and go to state 22
    declaracionConstanteRecursivoR shift and go to state 23
    declaracionConstante           shift and go to state 24

state 15

    (90) declaracionTipoPuntoComaR -> declaracionTipoPuntoComaR declaracionTipo . ;
    ;               shift and go to state 26


state 16

    (89) declaracionTipoPuntoComaR -> declaracionTipo ; .
    TYPE            reduce using rule 89 (declaracionTipoPuntoComaR -> declaracionTipo ; .)
    CONST           reduce using rule 89 (declaracionTipoPuntoComaR -> declaracionTipo ; .)
    IN              reduce using rule 89 (declaracionTipoPuntoComaR -> declaracionTipo ; .)
    INOUT           reduce using rule 89 (declaracionTipoPuntoComaR -> declaracionTipo ; .)
    OUT             reduce using rule 89 (declaracionTipoPuntoComaR -> declaracionTipo ; .)
    VAR             reduce using rule 89 (declaracionTipoPuntoComaR -> declaracionTipo ; .)
    BEGIN           reduce using rule 89 (declaracionTipoPuntoComaR -> declaracionTipo ; .)
    END             reduce using rule 89 (declaracionTipoPuntoComaR -> declaracionTipo ; .)


state 17

    (120) declaracionTipo -> TYPE ID . simboloPor listaIdParentesis ; declaracionConstanteCONST tipoFormalIN tipoFormlINOUT declaracionVariableOUT declaracionVariableVAR sentenciaSecuenciaBEGIN END ID
    (121) simboloPor -> . empty
    (122) simboloPor -> . *
    (138) empty -> .
    *               shift and go to state 29
    (               reduce using rule 138 (empty -> .)
    ;               reduce using rule 138 (empty -> .)

    simboloPor                     shift and go to state 27
    empty                          shift and go to state 28

state 18

    (3) modulo -> MODULE ID ; declaracionTipoPuntoComa declaracionConstanteCONST declaracionVariableIN . declaracionVariableINOUT declaracionVariableOUT declaracionVariableVAR sentenciaSecuenciaBEGIN END ID .
    (99) declaracionVariableINOUT -> . empty
    (100) declaracionVariableINOUT -> . INOUT declaracionVariableRecursivo
    (138) empty -> .
    INOUT           shift and go to state 32
    OUT             reduce using rule 138 (empty -> .)
    VAR             reduce using rule 138 (empty -> .)
    BEGIN           reduce using rule 138 (empty -> .)
    END             reduce using rule 138 (empty -> .)

    declaracionVariableINOUT       shift and go to state 30
    empty                          shift and go to state 31

state 19

    (97) declaracionVariableIN -> empty .
    INOUT           reduce using rule 97 (declaracionVariableIN -> empty .)
    OUT             reduce using rule 97 (declaracionVariableIN -> empty .)
    VAR             reduce using rule 97 (declaracionVariableIN -> empty .)
    BEGIN           reduce using rule 97 (declaracionVariableIN -> empty .)
    END             reduce using rule 97 (declaracionVariableIN -> empty .)


state 20

    (98) declaracionVariableIN -> IN . declaracionVariableRecursivo
    (107) declaracionVariableRecursivo -> . empty
    (108) declaracionVariableRecursivo -> . declaracionVariableRecursivoR
    (138) empty -> .
    (109) declaracionVariableRecursivoR -> . declaracionVariable
    (110) declaracionVariableRecursivoR -> . declaracionVariableRecursivoR declaracionVariable
    (19) declaracionVariable -> . listaId : tipo ;
    (20) listaId -> . ID IDComa
    INOUT           reduce using rule 138 (empty -> .)
    OUT             reduce using rule 138 (empty -> .)
    VAR             reduce using rule 138 (empty -> .)
    BEGIN           reduce using rule 138 (empty -> .)
    END             reduce using rule 138 (empty -> .)
    ID              shift and go to state 38

    declaracionVariableRecursivo   shift and go to state 33
    empty                          shift and go to state 34
    declaracionVariableRecursivoR  shift and go to state 35
    declaracionVariable            shift and go to state 36
    listaId                        shift and go to state 37

state 21

    (92) declaracionConstanteCONST -> CONST declaracionConstanteRecursivo .
    IN              reduce using rule 92 (declaracionConstanteCONST -> CONST declaracionConstanteRecursivo .)
    INOUT           reduce using rule 92 (declaracionConstanteCONST -> CONST declaracionConstanteRecursivo .)
    OUT             reduce using rule 92 (declaracionConstanteCONST -> CONST declaracionConstanteRecursivo .)
    VAR             reduce using rule 92 (declaracionConstanteCONST -> CONST declaracionConstanteRecursivo .)
    BEGIN           reduce using rule 92 (declaracionConstanteCONST -> CONST declaracionConstanteRecursivo .)
    END             reduce using rule 92 (declaracionConstanteCONST -> CONST declaracionConstanteRecursivo .)


state 22

    (93) declaracionConstanteRecursivo -> empty .
    IN              reduce using rule 93 (declaracionConstanteRecursivo -> empty .)
    INOUT           reduce using rule 93 (declaracionConstanteRecursivo -> empty .)
    OUT             reduce using rule 93 (declaracionConstanteRecursivo -> empty .)
    VAR             reduce using rule 93 (declaracionConstanteRecursivo -> empty .)
    BEGIN           reduce using rule 93 (declaracionConstanteRecursivo -> empty .)
    END             reduce using rule 93 (declaracionConstanteRecursivo -> empty .)


state 23

    (94) declaracionConstanteRecursivo -> declaracionConstanteRecursivoR .
    (96) declaracionConstanteRecursivoR -> declaracionConstanteRecursivoR . declaracionConstante
    (18) declaracionConstante -> . ID DOSPUNTOSIGUAL expresion ;
    IN              reduce using rule 94 (declaracionConstanteRecursivo -> declaracionConstanteRecursivoR .)
    INOUT           reduce using rule 94 (declaracionConstanteRecursivo -> declaracionConstanteRecursivoR .)
    OUT             reduce using rule 94 (declaracionConstanteRecursivo -> declaracionConstanteRecursivoR .)
    VAR             reduce using rule 94 (declaracionConstanteRecursivo -> declaracionConstanteRecursivoR .)
    BEGIN           reduce using rule 94 (declaracionConstanteRecursivo -> declaracionConstanteRecursivoR .)
    END             reduce using rule 94 (declaracionConstanteRecursivo -> declaracionConstanteRecursivoR .)
    ID              shift and go to state 25

    declaracionConstante           shift and go to state 39

state 24

    (95) declaracionConstanteRecursivoR -> declaracionConstante .
    ID              reduce using rule 95 (declaracionConstanteRecursivoR -> declaracionConstante .)
    IN              reduce using rule 95 (declaracionConstanteRecursivoR -> declaracionConstante .)
    INOUT           reduce using rule 95 (declaracionConstanteRecursivoR -> declaracionConstante .)
    OUT             reduce using rule 95 (declaracionConstanteRecursivoR -> declaracionConstante .)
    VAR             reduce using rule 95 (declaracionConstanteRecursivoR -> declaracionConstante .)
    BEGIN           reduce using rule 95 (declaracionConstanteRecursivoR -> declaracionConstante .)
    END             reduce using rule 95 (declaracionConstanteRecursivoR -> declaracionConstante .)


state 25

    (18) declaracionConstante -> ID . DOSPUNTOSIGUAL expresion ;
    DOSPUNTOSIGUAL  shift and go to state 40


state 26

    (90) declaracionTipoPuntoComaR -> declaracionTipoPuntoComaR declaracionTipo ; .
    TYPE            reduce using rule 90 (declaracionTipoPuntoComaR -> declaracionTipoPuntoComaR declaracionTipo ; .)
    CONST           reduce using rule 90 (declaracionTipoPuntoComaR -> declaracionTipoPuntoComaR declaracionTipo ; .)
    IN              reduce using rule 90 (declaracionTipoPuntoComaR -> declaracionTipoPuntoComaR declaracionTipo ; .)
    INOUT           reduce using rule 90 (declaracionTipoPuntoComaR -> declaracionTipoPuntoComaR declaracionTipo ; .)
    OUT             reduce using rule 90 (declaracionTipoPuntoComaR -> declaracionTipoPuntoComaR declaracionTipo ; .)
    VAR             reduce using rule 90 (declaracionTipoPuntoComaR -> declaracionTipoPuntoComaR declaracionTipo ; .)
    BEGIN           reduce using rule 90 (declaracionTipoPuntoComaR -> declaracionTipoPuntoComaR declaracionTipo ; .)
    END             reduce using rule 90 (declaracionTipoPuntoComaR -> declaracionTipoPuntoComaR declaracionTipo ; .)


state 27

    (120) declaracionTipo -> TYPE ID simboloPor . listaIdParentesis ; declaracionConstanteCONST tipoFormalIN tipoFormlINOUT declaracionVariableOUT declaracionVariableVAR sentenciaSecuenciaBEGIN END ID
    (123) listaIdParentesis -> . empty
    (124) listaIdParentesis -> . ( listaId )
    (138) empty -> .
    (               shift and go to state 43
    ;               reduce using rule 138 (empty -> .)

    listaIdParentesis              shift and go to state 41
    empty                          shift and go to state 42

state 28

    (121) simboloPor -> empty .
    (               reduce using rule 121 (simboloPor -> empty .)
    ;               reduce using rule 121 (simboloPor -> empty .)


state 29

    (122) simboloPor -> * .
    (               reduce using rule 122 (simboloPor -> * .)
    ;               reduce using rule 122 (simboloPor -> * .)


state 30

    (3) modulo -> MODULE ID ; declaracionTipoPuntoComa declaracionConstanteCONST declaracionVariableIN declaracionVariableINOUT . declaracionVariableOUT declaracionVariableVAR sentenciaSecuenciaBEGIN END ID .
    (101) declaracionVariableOUT -> . empty
    (102) declaracionVariableOUT -> . OUT declaracionVariableRecursivo
    (138) empty -> .
    OUT             shift and go to state 46
    VAR             reduce using rule 138 (empty -> .)
    BEGIN           reduce using rule 138 (empty -> .)
    END             reduce using rule 138 (empty -> .)

    declaracionVariableOUT         shift and go to state 44
    empty                          shift and go to state 45

state 31

    (99) declaracionVariableINOUT -> empty .
    OUT             reduce using rule 99 (declaracionVariableINOUT -> empty .)
    VAR             reduce using rule 99 (declaracionVariableINOUT -> empty .)
    BEGIN           reduce using rule 99 (declaracionVariableINOUT -> empty .)
    END             reduce using rule 99 (declaracionVariableINOUT -> empty .)


state 32

    (100) declaracionVariableINOUT -> INOUT . declaracionVariableRecursivo
    (107) declaracionVariableRecursivo -> . empty
    (108) declaracionVariableRecursivo -> . declaracionVariableRecursivoR
    (138) empty -> .
    (109) declaracionVariableRecursivoR -> . declaracionVariable
    (110) declaracionVariableRecursivoR -> . declaracionVariableRecursivoR declaracionVariable
    (19) declaracionVariable -> . listaId : tipo ;
    (20) listaId -> . ID IDComa
    OUT             reduce using rule 138 (empty -> .)
    VAR             reduce using rule 138 (empty -> .)
    BEGIN           reduce using rule 138 (empty -> .)
    END             reduce using rule 138 (empty -> .)
    ID              shift and go to state 38

    declaracionVariableRecursivo   shift and go to state 47
    empty                          shift and go to state 34
    declaracionVariableRecursivoR  shift and go to state 35
    declaracionVariable            shift and go to state 36
    listaId                        shift and go to state 37

state 33

    (98) declaracionVariableIN -> IN declaracionVariableRecursivo .
    INOUT           reduce using rule 98 (declaracionVariableIN -> IN declaracionVariableRecursivo .)
    OUT             reduce using rule 98 (declaracionVariableIN -> IN declaracionVariableRecursivo .)
    VAR             reduce using rule 98 (declaracionVariableIN -> IN declaracionVariableRecursivo .)
    BEGIN           reduce using rule 98 (declaracionVariableIN -> IN declaracionVariableRecursivo .)
    END             reduce using rule 98 (declaracionVariableIN -> IN declaracionVariableRecursivo .)


state 34

    (107) declaracionVariableRecursivo -> empty .
    INOUT           reduce using rule 107 (declaracionVariableRecursivo -> empty .)
    OUT             reduce using rule 107 (declaracionVariableRecursivo -> empty .)
    VAR             reduce using rule 107 (declaracionVariableRecursivo -> empty .)
    BEGIN           reduce using rule 107 (declaracionVariableRecursivo -> empty .)
    END             reduce using rule 107 (declaracionVariableRecursivo -> empty .)


state 35

    (108) declaracionVariableRecursivo -> declaracionVariableRecursivoR .
    (110) declaracionVariableRecursivoR -> declaracionVariableRecursivoR . declaracionVariable
    (19) declaracionVariable -> . listaId : tipo ;
    (20) listaId -> . ID IDComa
    INOUT           reduce using rule 108 (declaracionVariableRecursivo -> declaracionVariableRecursivoR .)
    OUT             reduce using rule 108 (declaracionVariableRecursivo -> declaracionVariableRecursivoR .)
    VAR             reduce using rule 108 (declaracionVariableRecursivo -> declaracionVariableRecursivoR .)
    BEGIN           reduce using rule 108 (declaracionVariableRecursivo -> declaracionVariableRecursivoR .)
    END             reduce using rule 108 (declaracionVariableRecursivo -> declaracionVariableRecursivoR .)
    ID              shift and go to state 38

    declaracionVariable            shift and go to state 48
    listaId                        shift and go to state 37

state 36

    (109) declaracionVariableRecursivoR -> declaracionVariable .
    ID              reduce using rule 109 (declaracionVariableRecursivoR -> declaracionVariable .)
    INOUT           reduce using rule 109 (declaracionVariableRecursivoR -> declaracionVariable .)
    OUT             reduce using rule 109 (declaracionVariableRecursivoR -> declaracionVariable .)
    VAR             reduce using rule 109 (declaracionVariableRecursivoR -> declaracionVariable .)
    BEGIN           reduce using rule 109 (declaracionVariableRecursivoR -> declaracionVariable .)
    END             reduce using rule 109 (declaracionVariableRecursivoR -> declaracionVariable .)


state 37

    (19) declaracionVariable -> listaId . : tipo ;
    :               shift and go to state 49


state 38

    (20) listaId -> ID . IDComa
    (21) IDComa -> . empty
    (22) IDComa -> . IDComaR
    (138) empty -> .
    (23) IDComaR -> . , ID
    (24) IDComaR -> . IDComaR , ID
    :               reduce using rule 138 (empty -> .)
    )               reduce using rule 138 (empty -> .)
    ,               shift and go to state 53

    IDComa                         shift and go to state 50
    empty                          shift and go to state 51
    IDComaR                        shift and go to state 52

state 39

    (96) declaracionConstanteRecursivoR -> declaracionConstanteRecursivoR declaracionConstante .
    ID              reduce using rule 96 (declaracionConstanteRecursivoR -> declaracionConstanteRecursivoR declaracionConstante .)
    IN              reduce using rule 96 (declaracionConstanteRecursivoR -> declaracionConstanteRecursivoR declaracionConstante .)
    INOUT           reduce using rule 96 (declaracionConstanteRecursivoR -> declaracionConstanteRecursivoR declaracionConstante .)
    OUT             reduce using rule 96 (declaracionConstanteRecursivoR -> declaracionConstanteRecursivoR declaracionConstante .)
    VAR             reduce using rule 96 (declaracionConstanteRecursivoR -> declaracionConstanteRecursivoR declaracionConstante .)
    BEGIN           reduce using rule 96 (declaracionConstanteRecursivoR -> declaracionConstanteRecursivoR declaracionConstante .)
    END             reduce using rule 96 (declaracionConstanteRecursivoR -> declaracionConstanteRecursivoR declaracionConstante .)


state 40

    (18) declaracionConstante -> ID DOSPUNTOSIGUAL . expresion ;
    (53) expresion -> . termino terminoMasMenos
    (44) termino -> . factor terminoOperadores
    (32) factor -> . SR ( expresion , expresion )
    (33) factor -> . LATCH ( expresion , expresion )
    (34) factor -> . REG ( expresionComaO expresion )
    (35) factor -> . MUX ( expresion , expresion : expresion , expresion , expresion , expresion )
    (36) factor -> . MUX ( expresion : expresion , expresion )
    (37) factor -> . ( expresion )
    (38) factor -> . ~ factor
    (39) factor -> . INTEGER
    (40) factor -> . LOGICVALUE
    (41) factor -> . ID selector
    SR              shift and go to state 58
    LATCH           shift and go to state 60
    REG             shift and go to state 61
    MUX             shift and go to state 62
    (               shift and go to state 59
    ~               shift and go to state 63
    INTEGER         shift and go to state 64
    LOGICVALUE      shift and go to state 65
    ID              shift and go to state 54

    expresion                      shift and go to state 55
    termino                        shift and go to state 56
    factor                         shift and go to state 57

state 41

    (120) declaracionTipo -> TYPE ID simboloPor listaIdParentesis . ; declaracionConstanteCONST tipoFormalIN tipoFormlINOUT declaracionVariableOUT declaracionVariableVAR sentenciaSecuenciaBEGIN END ID
    ;               shift and go to state 66


state 42

    (123) listaIdParentesis -> empty .
    ;               reduce using rule 123 (listaIdParentesis -> empty .)


state 43

    (124) listaIdParentesis -> ( . listaId )
    (20) listaId -> . ID IDComa
    ID              shift and go to state 38

    listaId                        shift and go to state 67

state 44

    (3) modulo -> MODULE ID ; declaracionTipoPuntoComa declaracionConstanteCONST declaracionVariableIN declaracionVariableINOUT declaracionVariableOUT . declaracionVariableVAR sentenciaSecuenciaBEGIN END ID .
    (103) declaracionVariableVAR -> . empty
    (104) declaracionVariableVAR -> . VAR declaracionVariableRecursivo
    (138) empty -> .
    VAR             shift and go to state 70
    BEGIN           reduce using rule 138 (empty -> .)
    END             reduce using rule 138 (empty -> .)

    declaracionVariableVAR         shift and go to state 68
    empty                          shift and go to state 69

state 45

    (101) declaracionVariableOUT -> empty .
    VAR             reduce using rule 101 (declaracionVariableOUT -> empty .)
    BEGIN           reduce using rule 101 (declaracionVariableOUT -> empty .)
    END             reduce using rule 101 (declaracionVariableOUT -> empty .)


state 46

    (102) declaracionVariableOUT -> OUT . declaracionVariableRecursivo
    (107) declaracionVariableRecursivo -> . empty
    (108) declaracionVariableRecursivo -> . declaracionVariableRecursivoR
    (138) empty -> .
    (109) declaracionVariableRecursivoR -> . declaracionVariable
    (110) declaracionVariableRecursivoR -> . declaracionVariableRecursivoR declaracionVariable
    (19) declaracionVariable -> . listaId : tipo ;
    (20) listaId -> . ID IDComa
    VAR             reduce using rule 138 (empty -> .)
    BEGIN           reduce using rule 138 (empty -> .)
    END             reduce using rule 138 (empty -> .)
    ID              shift and go to state 38

    declaracionVariableRecursivo   shift and go to state 71
    empty                          shift and go to state 34
    declaracionVariableRecursivoR  shift and go to state 35
    declaracionVariable            shift and go to state 36
    listaId                        shift and go to state 37

state 47

    (100) declaracionVariableINOUT -> INOUT declaracionVariableRecursivo .
    OUT             reduce using rule 100 (declaracionVariableINOUT -> INOUT declaracionVariableRecursivo .)
    VAR             reduce using rule 100 (declaracionVariableINOUT -> INOUT declaracionVariableRecursivo .)
    BEGIN           reduce using rule 100 (declaracionVariableINOUT -> INOUT declaracionVariableRecursivo .)
    END             reduce using rule 100 (declaracionVariableINOUT -> INOUT declaracionVariableRecursivo .)


state 48

    (110) declaracionVariableRecursivoR -> declaracionVariableRecursivoR declaracionVariable .
    ID              reduce using rule 110 (declaracionVariableRecursivoR -> declaracionVariableRecursivoR declaracionVariable .)
    INOUT           reduce using rule 110 (declaracionVariableRecursivoR -> declaracionVariableRecursivoR declaracionVariable .)
    OUT             reduce using rule 110 (declaracionVariableRecursivoR -> declaracionVariableRecursivoR declaracionVariable .)
    VAR             reduce using rule 110 (declaracionVariableRecursivoR -> declaracionVariableRecursivoR declaracionVariable .)
    BEGIN           reduce using rule 110 (declaracionVariableRecursivoR -> declaracionVariableRecursivoR declaracionVariable .)
    END             reduce using rule 110 (declaracionVariableRecursivoR -> declaracionVariableRecursivoR declaracionVariable .)


state 49

    (19) declaracionVariable -> listaId : . tipo ;
    (13) tipo -> . expresionCorchete tipoSimple
    (14) expresionCorchete -> . empty
    (15) expresionCorchete -> . expresionCorcheteR
    (138) empty -> .
    (16) expresionCorcheteR -> . [ expresion ]
    (17) expresionCorcheteR -> . expresionCorcheteR [ expresion ]
    ID              reduce using rule 138 (empty -> .)
    OC              reduce using rule 138 (empty -> .)
    TS              reduce using rule 138 (empty -> .)
    BIT             reduce using rule 138 (empty -> .)
    [               shift and go to state 76

    tipo                           shift and go to state 72
    expresionCorchete              shift and go to state 73
    empty                          shift and go to state 74
    expresionCorcheteR             shift and go to state 75

state 50

    (20) listaId -> ID IDComa .
    :               reduce using rule 20 (listaId -> ID IDComa .)
    )               reduce using rule 20 (listaId -> ID IDComa .)


state 51

    (21) IDComa -> empty .
    :               reduce using rule 21 (IDComa -> empty .)
    )               reduce using rule 21 (IDComa -> empty .)


state 52

    (22) IDComa -> IDComaR .
    (24) IDComaR -> IDComaR . , ID
    :               reduce using rule 22 (IDComa -> IDComaR .)
    )               reduce using rule 22 (IDComa -> IDComaR .)
    ,               shift and go to state 77


state 53

    (23) IDComaR -> , . ID
    ID              shift and go to state 78


state 54

    (41) factor -> ID . selector
    (25) selector -> . empty
    (26) selector -> . selectorR
    (138) empty -> .
    (27) selectorR -> . selectorRR
    (28) selectorR -> . selectorR selectorRR
    (29) selectorRR -> . [ expresion ]
    (30) selectorRR -> . . INTEGER
    (31) selectorRR -> . . ID
    MOD             reduce using rule 138 (empty -> .)
    DIV             reduce using rule 138 (empty -> .)
    /               reduce using rule 138 (empty -> .)
    *               reduce using rule 138 (empty -> .)
    -               reduce using rule 138 (empty -> .)
    +               reduce using rule 138 (empty -> .)
    ;               reduce using rule 138 (empty -> .)
    )               reduce using rule 138 (empty -> .)
    ]               reduce using rule 138 (empty -> .)
    ,               reduce using rule 138 (empty -> .)
    :               reduce using rule 138 (empty -> .)
    MAYORIGUAL      reduce using rule 138 (empty -> .)
    >               reduce using rule 138 (empty -> .)
    MENORIGUAL      reduce using rule 138 (empty -> .)
    <               reduce using rule 138 (empty -> .)
    #               reduce using rule 138 (empty -> .)
    =               reduce using rule 138 (empty -> .)
    DOBLEPUNTO      reduce using rule 138 (empty -> .)
    END             reduce using rule 138 (empty -> .)
    ELSIF           reduce using rule 138 (empty -> .)
    ELSE            reduce using rule 138 (empty -> .)
    |               reduce using rule 138 (empty -> .)
    THEN            reduce using rule 138 (empty -> .)
    DO              reduce using rule 138 (empty -> .)
    [               shift and go to state 83
    .               shift and go to state 84

    selector                       shift and go to state 79
    empty                          shift and go to state 80
    selectorR                      shift and go to state 81
    selectorRR                     shift and go to state 82

state 55

    (18) declaracionConstante -> ID DOSPUNTOSIGUAL expresion . ;
    ;               shift and go to state 85


state 56

    (53) expresion -> termino . terminoMasMenos
    (54) terminoMasMenos -> . empty
    (55) terminoMasMenos -> . terminoMasMenosR
    (138) empty -> .
    (56) terminoMasMenosR -> . simbolosMasMenos termino
    (57) terminoMasMenosR -> . terminoMasMenosR simbolosMasMenos termino
    (58) simbolosMasMenos -> . -
    (59) simbolosMasMenos -> . +
    ;               reduce using rule 138 (empty -> .)
    )               reduce using rule 138 (empty -> .)
    ]               reduce using rule 138 (empty -> .)
    ,               reduce using rule 138 (empty -> .)
    :               reduce using rule 138 (empty -> .)
    MAYORIGUAL      reduce using rule 138 (empty -> .)
    >               reduce using rule 138 (empty -> .)
    MENORIGUAL      reduce using rule 138 (empty -> .)
    <               reduce using rule 138 (empty -> .)
    #               reduce using rule 138 (empty -> .)
    =               reduce using rule 138 (empty -> .)
    DOBLEPUNTO      reduce using rule 138 (empty -> .)
    END             reduce using rule 138 (empty -> .)
    ELSIF           reduce using rule 138 (empty -> .)
    ELSE            reduce using rule 138 (empty -> .)
    |               reduce using rule 138 (empty -> .)
    THEN            reduce using rule 138 (empty -> .)
    DO              reduce using rule 138 (empty -> .)
    -               shift and go to state 90
    +               shift and go to state 91

    terminoMasMenos                shift and go to state 86
    empty                          shift and go to state 87
    terminoMasMenosR               shift and go to state 88
    simbolosMasMenos               shift and go to state 89

state 57

    (44) termino -> factor . terminoOperadores
    (45) terminoOperadores -> . empty
    (46) terminoOperadores -> . terminoOperadoresR
    (138) empty -> .
    (47) terminoOperadoresR -> . simbolosProd factor
    (48) terminoOperadoresR -> . terminoOperadoresR simbolosProd factor
    (49) simbolosProd -> . MOD
    (50) simbolosProd -> . DIV
    (51) simbolosProd -> . /
    (52) simbolosProd -> . *
    -               reduce using rule 138 (empty -> .)
    +               reduce using rule 138 (empty -> .)
    ;               reduce using rule 138 (empty -> .)
    )               reduce using rule 138 (empty -> .)
    ]               reduce using rule 138 (empty -> .)
    ,               reduce using rule 138 (empty -> .)
    :               reduce using rule 138 (empty -> .)
    MAYORIGUAL      reduce using rule 138 (empty -> .)
    >               reduce using rule 138 (empty -> .)
    MENORIGUAL      reduce using rule 138 (empty -> .)
    <               reduce using rule 138 (empty -> .)
    #               reduce using rule 138 (empty -> .)
    =               reduce using rule 138 (empty -> .)
    DOBLEPUNTO      reduce using rule 138 (empty -> .)
    END             reduce using rule 138 (empty -> .)
    ELSIF           reduce using rule 138 (empty -> .)
    ELSE            reduce using rule 138 (empty -> .)
    |               reduce using rule 138 (empty -> .)
    THEN            reduce using rule 138 (empty -> .)
    DO              reduce using rule 138 (empty -> .)
    MOD             shift and go to state 96
    DIV             shift and go to state 97
    /               shift and go to state 98
    *               shift and go to state 99

    terminoOperadores              shift and go to state 92
    empty                          shift and go to state 93
    terminoOperadoresR             shift and go to state 94
    simbolosProd                   shift and go to state 95

state 58

    (32) factor -> SR . ( expresion , expresion )
    (               shift and go to state 100


state 59

    (37) factor -> ( . expresion )
    (53) expresion -> . termino terminoMasMenos
    (44) termino -> . factor terminoOperadores
    (32) factor -> . SR ( expresion , expresion )
    (33) factor -> . LATCH ( expresion , expresion )
    (34) factor -> . REG ( expresionComaO expresion )
    (35) factor -> . MUX ( expresion , expresion : expresion , expresion , expresion , expresion )
    (36) factor -> . MUX ( expresion : expresion , expresion )
    (37) factor -> . ( expresion )
    (38) factor -> . ~ factor
    (39) factor -> . INTEGER
    (40) factor -> . LOGICVALUE
    (41) factor -> . ID selector
    SR              shift and go to state 58
    LATCH           shift and go to state 60
    REG             shift and go to state 61
    MUX             shift and go to state 62
    (               shift and go to state 59
    ~               shift and go to state 63
    INTEGER         shift and go to state 64
    LOGICVALUE      shift and go to state 65
    ID              shift and go to state 54

    expresion                      shift and go to state 101
    termino                        shift and go to state 56
    factor                         shift and go to state 57

state 60

    (33) factor -> LATCH . ( expresion , expresion )
    (               shift and go to state 102


state 61

    (34) factor -> REG . ( expresionComaO expresion )
    (               shift and go to state 103


state 62

    (35) factor -> MUX . ( expresion , expresion : expresion , expresion , expresion , expresion )
    (36) factor -> MUX . ( expresion : expresion , expresion )
    (               shift and go to state 104


state 63

    (38) factor -> ~ . factor
    (32) factor -> . SR ( expresion , expresion )
    (33) factor -> . LATCH ( expresion , expresion )
    (34) factor -> . REG ( expresionComaO expresion )
    (35) factor -> . MUX ( expresion , expresion : expresion , expresion , expresion , expresion )
    (36) factor -> . MUX ( expresion : expresion , expresion )
    (37) factor -> . ( expresion )
    (38) factor -> . ~ factor
    (39) factor -> . INTEGER
    (40) factor -> . LOGICVALUE
    (41) factor -> . ID selector
    SR              shift and go to state 58
    LATCH           shift and go to state 60
    REG             shift and go to state 61
    MUX             shift and go to state 62
    (               shift and go to state 59
    ~               shift and go to state 63
    INTEGER         shift and go to state 64
    LOGICVALUE      shift and go to state 65
    ID              shift and go to state 54

    factor                         shift and go to state 105

state 64

    (39) factor -> INTEGER .
    MOD             reduce using rule 39 (factor -> INTEGER .)
    DIV             reduce using rule 39 (factor -> INTEGER .)
    /               reduce using rule 39 (factor -> INTEGER .)
    *               reduce using rule 39 (factor -> INTEGER .)
    -               reduce using rule 39 (factor -> INTEGER .)
    +               reduce using rule 39 (factor -> INTEGER .)
    ;               reduce using rule 39 (factor -> INTEGER .)
    )               reduce using rule 39 (factor -> INTEGER .)
    ]               reduce using rule 39 (factor -> INTEGER .)
    ,               reduce using rule 39 (factor -> INTEGER .)
    :               reduce using rule 39 (factor -> INTEGER .)
    MAYORIGUAL      reduce using rule 39 (factor -> INTEGER .)
    >               reduce using rule 39 (factor -> INTEGER .)
    MENORIGUAL      reduce using rule 39 (factor -> INTEGER .)
    <               reduce using rule 39 (factor -> INTEGER .)
    #               reduce using rule 39 (factor -> INTEGER .)
    =               reduce using rule 39 (factor -> INTEGER .)
    DOBLEPUNTO      reduce using rule 39 (factor -> INTEGER .)
    END             reduce using rule 39 (factor -> INTEGER .)
    ELSIF           reduce using rule 39 (factor -> INTEGER .)
    ELSE            reduce using rule 39 (factor -> INTEGER .)
    |               reduce using rule 39 (factor -> INTEGER .)
    THEN            reduce using rule 39 (factor -> INTEGER .)
    DO              reduce using rule 39 (factor -> INTEGER .)


state 65

    (40) factor -> LOGICVALUE .
    MOD             reduce using rule 40 (factor -> LOGICVALUE .)
    DIV             reduce using rule 40 (factor -> LOGICVALUE .)
    /               reduce using rule 40 (factor -> LOGICVALUE .)
    *               reduce using rule 40 (factor -> LOGICVALUE .)
    -               reduce using rule 40 (factor -> LOGICVALUE .)
    +               reduce using rule 40 (factor -> LOGICVALUE .)
    ;               reduce using rule 40 (factor -> LOGICVALUE .)
    )               reduce using rule 40 (factor -> LOGICVALUE .)
    ]               reduce using rule 40 (factor -> LOGICVALUE .)
    ,               reduce using rule 40 (factor -> LOGICVALUE .)
    :               reduce using rule 40 (factor -> LOGICVALUE .)
    MAYORIGUAL      reduce using rule 40 (factor -> LOGICVALUE .)
    >               reduce using rule 40 (factor -> LOGICVALUE .)
    MENORIGUAL      reduce using rule 40 (factor -> LOGICVALUE .)
    <               reduce using rule 40 (factor -> LOGICVALUE .)
    #               reduce using rule 40 (factor -> LOGICVALUE .)
    =               reduce using rule 40 (factor -> LOGICVALUE .)
    DOBLEPUNTO      reduce using rule 40 (factor -> LOGICVALUE .)
    END             reduce using rule 40 (factor -> LOGICVALUE .)
    ELSIF           reduce using rule 40 (factor -> LOGICVALUE .)
    ELSE            reduce using rule 40 (factor -> LOGICVALUE .)
    |               reduce using rule 40 (factor -> LOGICVALUE .)
    THEN            reduce using rule 40 (factor -> LOGICVALUE .)
    DO              reduce using rule 40 (factor -> LOGICVALUE .)


state 66

    (120) declaracionTipo -> TYPE ID simboloPor listaIdParentesis ; . declaracionConstanteCONST tipoFormalIN tipoFormlINOUT declaracionVariableOUT declaracionVariableVAR sentenciaSecuenciaBEGIN END ID
    (91) declaracionConstanteCONST -> . empty
    (92) declaracionConstanteCONST -> . CONST declaracionConstanteRecursivo
    (138) empty -> .
    CONST           shift and go to state 14
    IN              reduce using rule 138 (empty -> .)
    INOUT           reduce using rule 138 (empty -> .)
    OUT             reduce using rule 138 (empty -> .)
    VAR             reduce using rule 138 (empty -> .)
    BEGIN           reduce using rule 138 (empty -> .)
    END             reduce using rule 138 (empty -> .)

    declaracionConstanteCONST      shift and go to state 106
    empty                          shift and go to state 13

state 67

    (124) listaIdParentesis -> ( listaId . )
    )               shift and go to state 107


state 68

    (3) modulo -> MODULE ID ; declaracionTipoPuntoComa declaracionConstanteCONST declaracionVariableIN declaracionVariableINOUT declaracionVariableOUT declaracionVariableVAR . sentenciaSecuenciaBEGIN END ID .
    (105) sentenciaSecuenciaBEGIN -> . empty
    (106) sentenciaSecuenciaBEGIN -> . BEGIN sentenciaSecuencia
    (138) empty -> .
    BEGIN           shift and go to state 110
    END             reduce using rule 138 (empty -> .)

    sentenciaSecuenciaBEGIN        shift and go to state 108
    empty                          shift and go to state 109

state 69

    (103) declaracionVariableVAR -> empty .
    BEGIN           reduce using rule 103 (declaracionVariableVAR -> empty .)
    END             reduce using rule 103 (declaracionVariableVAR -> empty .)


state 70

    (104) declaracionVariableVAR -> VAR . declaracionVariableRecursivo
    (107) declaracionVariableRecursivo -> . empty
    (108) declaracionVariableRecursivo -> . declaracionVariableRecursivoR
    (138) empty -> .
    (109) declaracionVariableRecursivoR -> . declaracionVariable
    (110) declaracionVariableRecursivoR -> . declaracionVariableRecursivoR declaracionVariable
    (19) declaracionVariable -> . listaId : tipo ;
    (20) listaId -> . ID IDComa
    BEGIN           reduce using rule 138 (empty -> .)
    END             reduce using rule 138 (empty -> .)
    ID              shift and go to state 38

    declaracionVariableRecursivo   shift and go to state 111
    empty                          shift and go to state 34
    declaracionVariableRecursivoR  shift and go to state 35
    declaracionVariable            shift and go to state 36
    listaId                        shift and go to state 37

state 71

    (102) declaracionVariableOUT -> OUT declaracionVariableRecursivo .
    VAR             reduce using rule 102 (declaracionVariableOUT -> OUT declaracionVariableRecursivo .)
    BEGIN           reduce using rule 102 (declaracionVariableOUT -> OUT declaracionVariableRecursivo .)
    END             reduce using rule 102 (declaracionVariableOUT -> OUT declaracionVariableRecursivo .)


state 72

    (19) declaracionVariable -> listaId : tipo . ;
    ;               shift and go to state 112


state 73

    (13) tipo -> expresionCorchete . tipoSimple
    (4) tipoSimple -> . ID conjuntoExpresiones
    (5) tipoSimple -> . tipoBasico
    (8) tipoBasico -> . OC
    (9) tipoBasico -> . TS
    (10) tipoBasico -> . BIT
    ID              shift and go to state 114
    OC              shift and go to state 116
    TS              shift and go to state 117
    BIT             shift and go to state 118

    tipoSimple                     shift and go to state 113
    tipoBasico                     shift and go to state 115

state 74

    (14) expresionCorchete -> empty .
    ID              reduce using rule 14 (expresionCorchete -> empty .)
    OC              reduce using rule 14 (expresionCorchete -> empty .)
    TS              reduce using rule 14 (expresionCorchete -> empty .)
    BIT             reduce using rule 14 (expresionCorchete -> empty .)


state 75

    (15) expresionCorchete -> expresionCorcheteR .
    (17) expresionCorcheteR -> expresionCorcheteR . [ expresion ]
    ID              reduce using rule 15 (expresionCorchete -> expresionCorcheteR .)
    OC              reduce using rule 15 (expresionCorchete -> expresionCorcheteR .)
    TS              reduce using rule 15 (expresionCorchete -> expresionCorcheteR .)
    BIT             reduce using rule 15 (expresionCorchete -> expresionCorcheteR .)
    [               shift and go to state 119


state 76

    (16) expresionCorcheteR -> [ . expresion ]
    (53) expresion -> . termino terminoMasMenos
    (44) termino -> . factor terminoOperadores
    (32) factor -> . SR ( expresion , expresion )
    (33) factor -> . LATCH ( expresion , expresion )
    (34) factor -> . REG ( expresionComaO expresion )
    (35) factor -> . MUX ( expresion , expresion : expresion , expresion , expresion , expresion )
    (36) factor -> . MUX ( expresion : expresion , expresion )
    (37) factor -> . ( expresion )
    (38) factor -> . ~ factor
    (39) factor -> . INTEGER
    (40) factor -> . LOGICVALUE
    (41) factor -> . ID selector
    SR              shift and go to state 58
    LATCH           shift and go to state 60
    REG             shift and go to state 61
    MUX             shift and go to state 62
    (               shift and go to state 59
    ~               shift and go to state 63
    INTEGER         shift and go to state 64
    LOGICVALUE      shift and go to state 65
    ID              shift and go to state 54

    expresion                      shift and go to state 120
    termino                        shift and go to state 56
    factor                         shift and go to state 57

state 77

    (24) IDComaR -> IDComaR , . ID
    ID              shift and go to state 121


state 78

    (23) IDComaR -> , ID .
    ,               reduce using rule 23 (IDComaR -> , ID .)
    :               reduce using rule 23 (IDComaR -> , ID .)
    )               reduce using rule 23 (IDComaR -> , ID .)


state 79

    (41) factor -> ID selector .
    MOD             reduce using rule 41 (factor -> ID selector .)
    DIV             reduce using rule 41 (factor -> ID selector .)
    /               reduce using rule 41 (factor -> ID selector .)
    *               reduce using rule 41 (factor -> ID selector .)
    -               reduce using rule 41 (factor -> ID selector .)
    +               reduce using rule 41 (factor -> ID selector .)
    ;               reduce using rule 41 (factor -> ID selector .)
    )               reduce using rule 41 (factor -> ID selector .)
    ]               reduce using rule 41 (factor -> ID selector .)
    ,               reduce using rule 41 (factor -> ID selector .)
    :               reduce using rule 41 (factor -> ID selector .)
    MAYORIGUAL      reduce using rule 41 (factor -> ID selector .)
    >               reduce using rule 41 (factor -> ID selector .)
    MENORIGUAL      reduce using rule 41 (factor -> ID selector .)
    <               reduce using rule 41 (factor -> ID selector .)
    #               reduce using rule 41 (factor -> ID selector .)
    =               reduce using rule 41 (factor -> ID selector .)
    DOBLEPUNTO      reduce using rule 41 (factor -> ID selector .)
    END             reduce using rule 41 (factor -> ID selector .)
    ELSIF           reduce using rule 41 (factor -> ID selector .)
    ELSE            reduce using rule 41 (factor -> ID selector .)
    |               reduce using rule 41 (factor -> ID selector .)
    THEN            reduce using rule 41 (factor -> ID selector .)
    DO              reduce using rule 41 (factor -> ID selector .)


state 80

    (25) selector -> empty .
    MOD             reduce using rule 25 (selector -> empty .)
    DIV             reduce using rule 25 (selector -> empty .)
    /               reduce using rule 25 (selector -> empty .)
    *               reduce using rule 25 (selector -> empty .)
    -               reduce using rule 25 (selector -> empty .)
    +               reduce using rule 25 (selector -> empty .)
    ;               reduce using rule 25 (selector -> empty .)
    )               reduce using rule 25 (selector -> empty .)
    ]               reduce using rule 25 (selector -> empty .)
    ,               reduce using rule 25 (selector -> empty .)
    :               reduce using rule 25 (selector -> empty .)
    MAYORIGUAL      reduce using rule 25 (selector -> empty .)
    >               reduce using rule 25 (selector -> empty .)
    MENORIGUAL      reduce using rule 25 (selector -> empty .)
    <               reduce using rule 25 (selector -> empty .)
    #               reduce using rule 25 (selector -> empty .)
    =               reduce using rule 25 (selector -> empty .)
    DOBLEPUNTO      reduce using rule 25 (selector -> empty .)
    END             reduce using rule 25 (selector -> empty .)
    ELSIF           reduce using rule 25 (selector -> empty .)
    ELSE            reduce using rule 25 (selector -> empty .)
    |               reduce using rule 25 (selector -> empty .)
    THEN            reduce using rule 25 (selector -> empty .)
    DO              reduce using rule 25 (selector -> empty .)
    (               reduce using rule 25 (selector -> empty .)
    DOSPUNTOSIGUAL  reduce using rule 25 (selector -> empty .)


state 81

    (26) selector -> selectorR .
    (28) selectorR -> selectorR . selectorRR
    (29) selectorRR -> . [ expresion ]
    (30) selectorRR -> . . INTEGER
    (31) selectorRR -> . . ID
    MOD             reduce using rule 26 (selector -> selectorR .)
    DIV             reduce using rule 26 (selector -> selectorR .)
    /               reduce using rule 26 (selector -> selectorR .)
    *               reduce using rule 26 (selector -> selectorR .)
    -               reduce using rule 26 (selector -> selectorR .)
    +               reduce using rule 26 (selector -> selectorR .)
    ;               reduce using rule 26 (selector -> selectorR .)
    )               reduce using rule 26 (selector -> selectorR .)
    ]               reduce using rule 26 (selector -> selectorR .)
    ,               reduce using rule 26 (selector -> selectorR .)
    :               reduce using rule 26 (selector -> selectorR .)
    MAYORIGUAL      reduce using rule 26 (selector -> selectorR .)
    >               reduce using rule 26 (selector -> selectorR .)
    MENORIGUAL      reduce using rule 26 (selector -> selectorR .)
    <               reduce using rule 26 (selector -> selectorR .)
    #               reduce using rule 26 (selector -> selectorR .)
    =               reduce using rule 26 (selector -> selectorR .)
    DOBLEPUNTO      reduce using rule 26 (selector -> selectorR .)
    END             reduce using rule 26 (selector -> selectorR .)
    ELSIF           reduce using rule 26 (selector -> selectorR .)
    ELSE            reduce using rule 26 (selector -> selectorR .)
    |               reduce using rule 26 (selector -> selectorR .)
    THEN            reduce using rule 26 (selector -> selectorR .)
    DO              reduce using rule 26 (selector -> selectorR .)
    (               reduce using rule 26 (selector -> selectorR .)
    DOSPUNTOSIGUAL  reduce using rule 26 (selector -> selectorR .)
    [               shift and go to state 83
    .               shift and go to state 84

    selectorRR                     shift and go to state 122

state 82

    (27) selectorR -> selectorRR .
    [               reduce using rule 27 (selectorR -> selectorRR .)
    .               reduce using rule 27 (selectorR -> selectorRR .)
    MOD             reduce using rule 27 (selectorR -> selectorRR .)
    DIV             reduce using rule 27 (selectorR -> selectorRR .)
    /               reduce using rule 27 (selectorR -> selectorRR .)
    *               reduce using rule 27 (selectorR -> selectorRR .)
    -               reduce using rule 27 (selectorR -> selectorRR .)
    +               reduce using rule 27 (selectorR -> selectorRR .)
    ;               reduce using rule 27 (selectorR -> selectorRR .)
    )               reduce using rule 27 (selectorR -> selectorRR .)
    ]               reduce using rule 27 (selectorR -> selectorRR .)
    ,               reduce using rule 27 (selectorR -> selectorRR .)
    :               reduce using rule 27 (selectorR -> selectorRR .)
    MAYORIGUAL      reduce using rule 27 (selectorR -> selectorRR .)
    >               reduce using rule 27 (selectorR -> selectorRR .)
    MENORIGUAL      reduce using rule 27 (selectorR -> selectorRR .)
    <               reduce using rule 27 (selectorR -> selectorRR .)
    #               reduce using rule 27 (selectorR -> selectorRR .)
    =               reduce using rule 27 (selectorR -> selectorRR .)
    DOBLEPUNTO      reduce using rule 27 (selectorR -> selectorRR .)
    END             reduce using rule 27 (selectorR -> selectorRR .)
    ELSIF           reduce using rule 27 (selectorR -> selectorRR .)
    ELSE            reduce using rule 27 (selectorR -> selectorRR .)
    |               reduce using rule 27 (selectorR -> selectorRR .)
    THEN            reduce using rule 27 (selectorR -> selectorRR .)
    DO              reduce using rule 27 (selectorR -> selectorRR .)
    (               reduce using rule 27 (selectorR -> selectorRR .)
    DOSPUNTOSIGUAL  reduce using rule 27 (selectorR -> selectorRR .)


state 83

    (29) selectorRR -> [ . expresion ]
    (53) expresion -> . termino terminoMasMenos
    (44) termino -> . factor terminoOperadores
    (32) factor -> . SR ( expresion , expresion )
    (33) factor -> . LATCH ( expresion , expresion )
    (34) factor -> . REG ( expresionComaO expresion )
    (35) factor -> . MUX ( expresion , expresion : expresion , expresion , expresion , expresion )
    (36) factor -> . MUX ( expresion : expresion , expresion )
    (37) factor -> . ( expresion )
    (38) factor -> . ~ factor
    (39) factor -> . INTEGER
    (40) factor -> . LOGICVALUE
    (41) factor -> . ID selector
    SR              shift and go to state 58
    LATCH           shift and go to state 60
    REG             shift and go to state 61
    MUX             shift and go to state 62
    (               shift and go to state 59
    ~               shift and go to state 63
    INTEGER         shift and go to state 64
    LOGICVALUE      shift and go to state 65
    ID              shift and go to state 54

    expresion                      shift and go to state 123
    termino                        shift and go to state 56
    factor                         shift and go to state 57

state 84

    (30) selectorRR -> . . INTEGER
    (31) selectorRR -> . . ID
    INTEGER         shift and go to state 124
    ID              shift and go to state 125


state 85

    (18) declaracionConstante -> ID DOSPUNTOSIGUAL expresion ; .
    ID              reduce using rule 18 (declaracionConstante -> ID DOSPUNTOSIGUAL expresion ; .)
    IN              reduce using rule 18 (declaracionConstante -> ID DOSPUNTOSIGUAL expresion ; .)
    INOUT           reduce using rule 18 (declaracionConstante -> ID DOSPUNTOSIGUAL expresion ; .)
    OUT             reduce using rule 18 (declaracionConstante -> ID DOSPUNTOSIGUAL expresion ; .)
    VAR             reduce using rule 18 (declaracionConstante -> ID DOSPUNTOSIGUAL expresion ; .)
    BEGIN           reduce using rule 18 (declaracionConstante -> ID DOSPUNTOSIGUAL expresion ; .)
    END             reduce using rule 18 (declaracionConstante -> ID DOSPUNTOSIGUAL expresion ; .)


state 86

    (53) expresion -> termino terminoMasMenos .
    ;               reduce using rule 53 (expresion -> termino terminoMasMenos .)
    )               reduce using rule 53 (expresion -> termino terminoMasMenos .)
    ]               reduce using rule 53 (expresion -> termino terminoMasMenos .)
    ,               reduce using rule 53 (expresion -> termino terminoMasMenos .)
    :               reduce using rule 53 (expresion -> termino terminoMasMenos .)
    MAYORIGUAL      reduce using rule 53 (expresion -> termino terminoMasMenos .)
    >               reduce using rule 53 (expresion -> termino terminoMasMenos .)
    MENORIGUAL      reduce using rule 53 (expresion -> termino terminoMasMenos .)
    <               reduce using rule 53 (expresion -> termino terminoMasMenos .)
    #               reduce using rule 53 (expresion -> termino terminoMasMenos .)
    =               reduce using rule 53 (expresion -> termino terminoMasMenos .)
    DOBLEPUNTO      reduce using rule 53 (expresion -> termino terminoMasMenos .)
    END             reduce using rule 53 (expresion -> termino terminoMasMenos .)
    ELSIF           reduce using rule 53 (expresion -> termino terminoMasMenos .)
    ELSE            reduce using rule 53 (expresion -> termino terminoMasMenos .)
    |               reduce using rule 53 (expresion -> termino terminoMasMenos .)
    THEN            reduce using rule 53 (expresion -> termino terminoMasMenos .)
    DO              reduce using rule 53 (expresion -> termino terminoMasMenos .)


state 87

    (54) terminoMasMenos -> empty .
    ;               reduce using rule 54 (terminoMasMenos -> empty .)
    )               reduce using rule 54 (terminoMasMenos -> empty .)
    ]               reduce using rule 54 (terminoMasMenos -> empty .)
    ,               reduce using rule 54 (terminoMasMenos -> empty .)
    :               reduce using rule 54 (terminoMasMenos -> empty .)
    MAYORIGUAL      reduce using rule 54 (terminoMasMenos -> empty .)
    >               reduce using rule 54 (terminoMasMenos -> empty .)
    MENORIGUAL      reduce using rule 54 (terminoMasMenos -> empty .)
    <               reduce using rule 54 (terminoMasMenos -> empty .)
    #               reduce using rule 54 (terminoMasMenos -> empty .)
    =               reduce using rule 54 (terminoMasMenos -> empty .)
    DOBLEPUNTO      reduce using rule 54 (terminoMasMenos -> empty .)
    END             reduce using rule 54 (terminoMasMenos -> empty .)
    ELSIF           reduce using rule 54 (terminoMasMenos -> empty .)
    ELSE            reduce using rule 54 (terminoMasMenos -> empty .)
    |               reduce using rule 54 (terminoMasMenos -> empty .)
    THEN            reduce using rule 54 (terminoMasMenos -> empty .)
    DO              reduce using rule 54 (terminoMasMenos -> empty .)


state 88

    (55) terminoMasMenos -> terminoMasMenosR .
    (57) terminoMasMenosR -> terminoMasMenosR . simbolosMasMenos termino
    (58) simbolosMasMenos -> . -
    (59) simbolosMasMenos -> . +
    ;               reduce using rule 55 (terminoMasMenos -> terminoMasMenosR .)
    )               reduce using rule 55 (terminoMasMenos -> terminoMasMenosR .)
    ]               reduce using rule 55 (terminoMasMenos -> terminoMasMenosR .)
    ,               reduce using rule 55 (terminoMasMenos -> terminoMasMenosR .)
    :               reduce using rule 55 (terminoMasMenos -> terminoMasMenosR .)
    MAYORIGUAL      reduce using rule 55 (terminoMasMenos -> terminoMasMenosR .)
    >               reduce using rule 55 (terminoMasMenos -> terminoMasMenosR .)
    MENORIGUAL      reduce using rule 55 (terminoMasMenos -> terminoMasMenosR .)
    <               reduce using rule 55 (terminoMasMenos -> terminoMasMenosR .)
    #               reduce using rule 55 (terminoMasMenos -> terminoMasMenosR .)
    =               reduce using rule 55 (terminoMasMenos -> terminoMasMenosR .)
    DOBLEPUNTO      reduce using rule 55 (terminoMasMenos -> terminoMasMenosR .)
    END             reduce using rule 55 (terminoMasMenos -> terminoMasMenosR .)
    ELSIF           reduce using rule 55 (terminoMasMenos -> terminoMasMenosR .)
    ELSE            reduce using rule 55 (terminoMasMenos -> terminoMasMenosR .)
    |               reduce using rule 55 (terminoMasMenos -> terminoMasMenosR .)
    THEN            reduce using rule 55 (terminoMasMenos -> terminoMasMenosR .)
    DO              reduce using rule 55 (terminoMasMenos -> terminoMasMenosR .)
    -               shift and go to state 90
    +               shift and go to state 91

    simbolosMasMenos               shift and go to state 126

state 89

    (56) terminoMasMenosR -> simbolosMasMenos . termino
    (44) termino -> . factor terminoOperadores
    (32) factor -> . SR ( expresion , expresion )
    (33) factor -> . LATCH ( expresion , expresion )
    (34) factor -> . REG ( expresionComaO expresion )
    (35) factor -> . MUX ( expresion , expresion : expresion , expresion , expresion , expresion )
    (36) factor -> . MUX ( expresion : expresion , expresion )
    (37) factor -> . ( expresion )
    (38) factor -> . ~ factor
    (39) factor -> . INTEGER
    (40) factor -> . LOGICVALUE
    (41) factor -> . ID selector
    SR              shift and go to state 58
    LATCH           shift and go to state 60
    REG             shift and go to state 61
    MUX             shift and go to state 62
    (               shift and go to state 59
    ~               shift and go to state 63
    INTEGER         shift and go to state 64
    LOGICVALUE      shift and go to state 65
    ID              shift and go to state 54

    termino                        shift and go to state 127
    factor                         shift and go to state 57

state 90

    (58) simbolosMasMenos -> - .
    SR              reduce using rule 58 (simbolosMasMenos -> - .)
    LATCH           reduce using rule 58 (simbolosMasMenos -> - .)
    REG             reduce using rule 58 (simbolosMasMenos -> - .)
    MUX             reduce using rule 58 (simbolosMasMenos -> - .)
    (               reduce using rule 58 (simbolosMasMenos -> - .)
    ~               reduce using rule 58 (simbolosMasMenos -> - .)
    INTEGER         reduce using rule 58 (simbolosMasMenos -> - .)
    LOGICVALUE      reduce using rule 58 (simbolosMasMenos -> - .)
    ID              reduce using rule 58 (simbolosMasMenos -> - .)


state 91

    (59) simbolosMasMenos -> + .
    SR              reduce using rule 59 (simbolosMasMenos -> + .)
    LATCH           reduce using rule 59 (simbolosMasMenos -> + .)
    REG             reduce using rule 59 (simbolosMasMenos -> + .)
    MUX             reduce using rule 59 (simbolosMasMenos -> + .)
    (               reduce using rule 59 (simbolosMasMenos -> + .)
    ~               reduce using rule 59 (simbolosMasMenos -> + .)
    INTEGER         reduce using rule 59 (simbolosMasMenos -> + .)
    LOGICVALUE      reduce using rule 59 (simbolosMasMenos -> + .)
    ID              reduce using rule 59 (simbolosMasMenos -> + .)


state 92

    (44) termino -> factor terminoOperadores .
    -               reduce using rule 44 (termino -> factor terminoOperadores .)
    +               reduce using rule 44 (termino -> factor terminoOperadores .)
    ;               reduce using rule 44 (termino -> factor terminoOperadores .)
    )               reduce using rule 44 (termino -> factor terminoOperadores .)
    ]               reduce using rule 44 (termino -> factor terminoOperadores .)
    ,               reduce using rule 44 (termino -> factor terminoOperadores .)
    :               reduce using rule 44 (termino -> factor terminoOperadores .)
    MAYORIGUAL      reduce using rule 44 (termino -> factor terminoOperadores .)
    >               reduce using rule 44 (termino -> factor terminoOperadores .)
    MENORIGUAL      reduce using rule 44 (termino -> factor terminoOperadores .)
    <               reduce using rule 44 (termino -> factor terminoOperadores .)
    #               reduce using rule 44 (termino -> factor terminoOperadores .)
    =               reduce using rule 44 (termino -> factor terminoOperadores .)
    DOBLEPUNTO      reduce using rule 44 (termino -> factor terminoOperadores .)
    END             reduce using rule 44 (termino -> factor terminoOperadores .)
    ELSIF           reduce using rule 44 (termino -> factor terminoOperadores .)
    ELSE            reduce using rule 44 (termino -> factor terminoOperadores .)
    |               reduce using rule 44 (termino -> factor terminoOperadores .)
    THEN            reduce using rule 44 (termino -> factor terminoOperadores .)
    DO              reduce using rule 44 (termino -> factor terminoOperadores .)


state 93

    (45) terminoOperadores -> empty .
    -               reduce using rule 45 (terminoOperadores -> empty .)
    +               reduce using rule 45 (terminoOperadores -> empty .)
    ;               reduce using rule 45 (terminoOperadores -> empty .)
    )               reduce using rule 45 (terminoOperadores -> empty .)
    ]               reduce using rule 45 (terminoOperadores -> empty .)
    ,               reduce using rule 45 (terminoOperadores -> empty .)
    :               reduce using rule 45 (terminoOperadores -> empty .)
    MAYORIGUAL      reduce using rule 45 (terminoOperadores -> empty .)
    >               reduce using rule 45 (terminoOperadores -> empty .)
    MENORIGUAL      reduce using rule 45 (terminoOperadores -> empty .)
    <               reduce using rule 45 (terminoOperadores -> empty .)
    #               reduce using rule 45 (terminoOperadores -> empty .)
    =               reduce using rule 45 (terminoOperadores -> empty .)
    DOBLEPUNTO      reduce using rule 45 (terminoOperadores -> empty .)
    END             reduce using rule 45 (terminoOperadores -> empty .)
    ELSIF           reduce using rule 45 (terminoOperadores -> empty .)
    ELSE            reduce using rule 45 (terminoOperadores -> empty .)
    |               reduce using rule 45 (terminoOperadores -> empty .)
    THEN            reduce using rule 45 (terminoOperadores -> empty .)
    DO              reduce using rule 45 (terminoOperadores -> empty .)


state 94

    (46) terminoOperadores -> terminoOperadoresR .
    (48) terminoOperadoresR -> terminoOperadoresR . simbolosProd factor
    (49) simbolosProd -> . MOD
    (50) simbolosProd -> . DIV
    (51) simbolosProd -> . /
    (52) simbolosProd -> . *
    -               reduce using rule 46 (terminoOperadores -> terminoOperadoresR .)
    +               reduce using rule 46 (terminoOperadores -> terminoOperadoresR .)
    ;               reduce using rule 46 (terminoOperadores -> terminoOperadoresR .)
    )               reduce using rule 46 (terminoOperadores -> terminoOperadoresR .)
    ]               reduce using rule 46 (terminoOperadores -> terminoOperadoresR .)
    ,               reduce using rule 46 (terminoOperadores -> terminoOperadoresR .)
    :               reduce using rule 46 (terminoOperadores -> terminoOperadoresR .)
    MAYORIGUAL      reduce using rule 46 (terminoOperadores -> terminoOperadoresR .)
    >               reduce using rule 46 (terminoOperadores -> terminoOperadoresR .)
    MENORIGUAL      reduce using rule 46 (terminoOperadores -> terminoOperadoresR .)
    <               reduce using rule 46 (terminoOperadores -> terminoOperadoresR .)
    #               reduce using rule 46 (terminoOperadores -> terminoOperadoresR .)
    =               reduce using rule 46 (terminoOperadores -> terminoOperadoresR .)
    DOBLEPUNTO      reduce using rule 46 (terminoOperadores -> terminoOperadoresR .)
    END             reduce using rule 46 (terminoOperadores -> terminoOperadoresR .)
    ELSIF           reduce using rule 46 (terminoOperadores -> terminoOperadoresR .)
    ELSE            reduce using rule 46 (terminoOperadores -> terminoOperadoresR .)
    |               reduce using rule 46 (terminoOperadores -> terminoOperadoresR .)
    THEN            reduce using rule 46 (terminoOperadores -> terminoOperadoresR .)
    DO              reduce using rule 46 (terminoOperadores -> terminoOperadoresR .)
    MOD             shift and go to state 96
    DIV             shift and go to state 97
    /               shift and go to state 98
    *               shift and go to state 99

    simbolosProd                   shift and go to state 128

state 95

    (47) terminoOperadoresR -> simbolosProd . factor
    (32) factor -> . SR ( expresion , expresion )
    (33) factor -> . LATCH ( expresion , expresion )
    (34) factor -> . REG ( expresionComaO expresion )
    (35) factor -> . MUX ( expresion , expresion : expresion , expresion , expresion , expresion )
    (36) factor -> . MUX ( expresion : expresion , expresion )
    (37) factor -> . ( expresion )
    (38) factor -> . ~ factor
    (39) factor -> . INTEGER
    (40) factor -> . LOGICVALUE
    (41) factor -> . ID selector
    SR              shift and go to state 58
    LATCH           shift and go to state 60
    REG             shift and go to state 61
    MUX             shift and go to state 62
    (               shift and go to state 59
    ~               shift and go to state 63
    INTEGER         shift and go to state 64
    LOGICVALUE      shift and go to state 65
    ID              shift and go to state 54

    factor                         shift and go to state 129

state 96

    (49) simbolosProd -> MOD .
    SR              reduce using rule 49 (simbolosProd -> MOD .)
    LATCH           reduce using rule 49 (simbolosProd -> MOD .)
    REG             reduce using rule 49 (simbolosProd -> MOD .)
    MUX             reduce using rule 49 (simbolosProd -> MOD .)
    (               reduce using rule 49 (simbolosProd -> MOD .)
    ~               reduce using rule 49 (simbolosProd -> MOD .)
    INTEGER         reduce using rule 49 (simbolosProd -> MOD .)
    LOGICVALUE      reduce using rule 49 (simbolosProd -> MOD .)
    ID              reduce using rule 49 (simbolosProd -> MOD .)


state 97

    (50) simbolosProd -> DIV .
    SR              reduce using rule 50 (simbolosProd -> DIV .)
    LATCH           reduce using rule 50 (simbolosProd -> DIV .)
    REG             reduce using rule 50 (simbolosProd -> DIV .)
    MUX             reduce using rule 50 (simbolosProd -> DIV .)
    (               reduce using rule 50 (simbolosProd -> DIV .)
    ~               reduce using rule 50 (simbolosProd -> DIV .)
    INTEGER         reduce using rule 50 (simbolosProd -> DIV .)
    LOGICVALUE      reduce using rule 50 (simbolosProd -> DIV .)
    ID              reduce using rule 50 (simbolosProd -> DIV .)


state 98

    (51) simbolosProd -> / .
    SR              reduce using rule 51 (simbolosProd -> / .)
    LATCH           reduce using rule 51 (simbolosProd -> / .)
    REG             reduce using rule 51 (simbolosProd -> / .)
    MUX             reduce using rule 51 (simbolosProd -> / .)
    (               reduce using rule 51 (simbolosProd -> / .)
    ~               reduce using rule 51 (simbolosProd -> / .)
    INTEGER         reduce using rule 51 (simbolosProd -> / .)
    LOGICVALUE      reduce using rule 51 (simbolosProd -> / .)
    ID              reduce using rule 51 (simbolosProd -> / .)


state 99

    (52) simbolosProd -> * .
    SR              reduce using rule 52 (simbolosProd -> * .)
    LATCH           reduce using rule 52 (simbolosProd -> * .)
    REG             reduce using rule 52 (simbolosProd -> * .)
    MUX             reduce using rule 52 (simbolosProd -> * .)
    (               reduce using rule 52 (simbolosProd -> * .)
    ~               reduce using rule 52 (simbolosProd -> * .)
    INTEGER         reduce using rule 52 (simbolosProd -> * .)
    LOGICVALUE      reduce using rule 52 (simbolosProd -> * .)
    ID              reduce using rule 52 (simbolosProd -> * .)


state 100

    (32) factor -> SR ( . expresion , expresion )
    (53) expresion -> . termino terminoMasMenos
    (44) termino -> . factor terminoOperadores
    (32) factor -> . SR ( expresion , expresion )
    (33) factor -> . LATCH ( expresion , expresion )
    (34) factor -> . REG ( expresionComaO expresion )
    (35) factor -> . MUX ( expresion , expresion : expresion , expresion , expresion , expresion )
    (36) factor -> . MUX ( expresion : expresion , expresion )
    (37) factor -> . ( expresion )
    (38) factor -> . ~ factor
    (39) factor -> . INTEGER
    (40) factor -> . LOGICVALUE
    (41) factor -> . ID selector
    SR              shift and go to state 58
    LATCH           shift and go to state 60
    REG             shift and go to state 61
    MUX             shift and go to state 62
    (               shift and go to state 59
    ~               shift and go to state 63
    INTEGER         shift and go to state 64
    LOGICVALUE      shift and go to state 65
    ID              shift and go to state 54

    expresion                      shift and go to state 130
    termino                        shift and go to state 56
    factor                         shift and go to state 57

state 101

    (37) factor -> ( expresion . )
    )               shift and go to state 131


state 102

    (33) factor -> LATCH ( . expresion , expresion )
    (53) expresion -> . termino terminoMasMenos
    (44) termino -> . factor terminoOperadores
    (32) factor -> . SR ( expresion , expresion )
    (33) factor -> . LATCH ( expresion , expresion )
    (34) factor -> . REG ( expresionComaO expresion )
    (35) factor -> . MUX ( expresion , expresion : expresion , expresion , expresion , expresion )
    (36) factor -> . MUX ( expresion : expresion , expresion )
    (37) factor -> . ( expresion )
    (38) factor -> . ~ factor
    (39) factor -> . INTEGER
    (40) factor -> . LOGICVALUE
    (41) factor -> . ID selector
    SR              shift and go to state 58
    LATCH           shift and go to state 60
    REG             shift and go to state 61
    MUX             shift and go to state 62
    (               shift and go to state 59
    ~               shift and go to state 63
    INTEGER         shift and go to state 64
    LOGICVALUE      shift and go to state 65
    ID              shift and go to state 54

    expresion                      shift and go to state 132
    termino                        shift and go to state 56
    factor                         shift and go to state 57

state 103

    (34) factor -> REG ( . expresionComaO expresion )
    (42) expresionComaO -> . empty
    (43) expresionComaO -> . expresion ,
    (138) empty -> .
    (53) expresion -> . termino terminoMasMenos
    (44) termino -> . factor terminoOperadores
    (32) factor -> . SR ( expresion , expresion )
    (33) factor -> . LATCH ( expresion , expresion )
    (34) factor -> . REG ( expresionComaO expresion )
    (35) factor -> . MUX ( expresion , expresion : expresion , expresion , expresion , expresion )
    (36) factor -> . MUX ( expresion : expresion , expresion )
    (37) factor -> . ( expresion )
    (38) factor -> . ~ factor
    (39) factor -> . INTEGER
    (40) factor -> . LOGICVALUE
    (41) factor -> . ID selector
  ! shift/reduce conflict for SR resolved as shift
  ! shift/reduce conflict for LATCH resolved as shift
  ! shift/reduce conflict for REG resolved as shift
  ! shift/reduce conflict for MUX resolved as shift
  ! shift/reduce conflict for ( resolved as shift
  ! shift/reduce conflict for ~ resolved as shift
  ! shift/reduce conflict for INTEGER resolved as shift
  ! shift/reduce conflict for LOGICVALUE resolved as shift
  ! shift/reduce conflict for ID resolved as shift
    SR              shift and go to state 58
    LATCH           shift and go to state 60
    REG             shift and go to state 61
    MUX             shift and go to state 62
    (               shift and go to state 59
    ~               shift and go to state 63
    INTEGER         shift and go to state 64
    LOGICVALUE      shift and go to state 65
    ID              shift and go to state 54

    expresionComaO                 shift and go to state 133
    expresion                      shift and go to state 134
    empty                          shift and go to state 135
    termino                        shift and go to state 56
    factor                         shift and go to state 57

state 104

    (35) factor -> MUX ( . expresion , expresion : expresion , expresion , expresion , expresion )
    (36) factor -> MUX ( . expresion : expresion , expresion )
    (53) expresion -> . termino terminoMasMenos
    (44) termino -> . factor terminoOperadores
    (32) factor -> . SR ( expresion , expresion )
    (33) factor -> . LATCH ( expresion , expresion )
    (34) factor -> . REG ( expresionComaO expresion )
    (35) factor -> . MUX ( expresion , expresion : expresion , expresion , expresion , expresion )
    (36) factor -> . MUX ( expresion : expresion , expresion )
    (37) factor -> . ( expresion )
    (38) factor -> . ~ factor
    (39) factor -> . INTEGER
    (40) factor -> . LOGICVALUE
    (41) factor -> . ID selector
    SR              shift and go to state 58
    LATCH           shift and go to state 60
    REG             shift and go to state 61
    MUX             shift and go to state 62
    (               shift and go to state 59
    ~               shift and go to state 63
    INTEGER         shift and go to state 64
    LOGICVALUE      shift and go to state 65
    ID              shift and go to state 54

    expresion                      shift and go to state 136
    termino                        shift and go to state 56
    factor                         shift and go to state 57

state 105

    (38) factor -> ~ factor .
    MOD             reduce using rule 38 (factor -> ~ factor .)
    DIV             reduce using rule 38 (factor -> ~ factor .)
    /               reduce using rule 38 (factor -> ~ factor .)
    *               reduce using rule 38 (factor -> ~ factor .)
    -               reduce using rule 38 (factor -> ~ factor .)
    +               reduce using rule 38 (factor -> ~ factor .)
    ;               reduce using rule 38 (factor -> ~ factor .)
    )               reduce using rule 38 (factor -> ~ factor .)
    ]               reduce using rule 38 (factor -> ~ factor .)
    ,               reduce using rule 38 (factor -> ~ factor .)
    :               reduce using rule 38 (factor -> ~ factor .)
    MAYORIGUAL      reduce using rule 38 (factor -> ~ factor .)
    >               reduce using rule 38 (factor -> ~ factor .)
    MENORIGUAL      reduce using rule 38 (factor -> ~ factor .)
    <               reduce using rule 38 (factor -> ~ factor .)
    #               reduce using rule 38 (factor -> ~ factor .)
    =               reduce using rule 38 (factor -> ~ factor .)
    DOBLEPUNTO      reduce using rule 38 (factor -> ~ factor .)
    END             reduce using rule 38 (factor -> ~ factor .)
    ELSIF           reduce using rule 38 (factor -> ~ factor .)
    ELSE            reduce using rule 38 (factor -> ~ factor .)
    |               reduce using rule 38 (factor -> ~ factor .)
    THEN            reduce using rule 38 (factor -> ~ factor .)
    DO              reduce using rule 38 (factor -> ~ factor .)


state 106

    (120) declaracionTipo -> TYPE ID simboloPor listaIdParentesis ; declaracionConstanteCONST . tipoFormalIN tipoFormlINOUT declaracionVariableOUT declaracionVariableVAR sentenciaSecuenciaBEGIN END ID
    (125) tipoFormalIN -> . empty
    (126) tipoFormalIN -> . IN tipoFormallistaId
    (138) empty -> .
    IN              shift and go to state 139
    INOUT           reduce using rule 138 (empty -> .)
    OUT             reduce using rule 138 (empty -> .)
    VAR             reduce using rule 138 (empty -> .)
    BEGIN           reduce using rule 138 (empty -> .)
    END             reduce using rule 138 (empty -> .)

    tipoFormalIN                   shift and go to state 137
    empty                          shift and go to state 138

state 107

    (124) listaIdParentesis -> ( listaId ) .
    ;               reduce using rule 124 (listaIdParentesis -> ( listaId ) .)


state 108

    (3) modulo -> MODULE ID ; declaracionTipoPuntoComa declaracionConstanteCONST declaracionVariableIN declaracionVariableINOUT declaracionVariableOUT declaracionVariableVAR sentenciaSecuenciaBEGIN . END ID .
    END             shift and go to state 140


state 109

    (105) sentenciaSecuenciaBEGIN -> empty .
    END             reduce using rule 105 (sentenciaSecuenciaBEGIN -> empty .)


state 110

    (106) sentenciaSecuenciaBEGIN -> BEGIN . sentenciaSecuencia
    (82) sentenciaSecuencia -> . sentencia sentenciaPuntoComa
    (77) sentencia -> . empty
    (78) sentencia -> . sentenciaPara
    (79) sentencia -> . sentenciaSi
    (80) sentencia -> . asignacionUnidad
    (81) sentencia -> . asignacion
    (138) empty -> .
    (76) sentenciaPara -> . FOR ID DOSPUNTOSIGUAL expresion DOBLEPUNTO expresion DO sentenciaSecuencia END
    (69) sentenciaSi -> . IF relacion THEN sentenciaSecuencia sentenciaSiSino sentenciaSiEntonces END
    (137) asignacionUnidad -> . ID selector ( listaExpresiones )
    (60) asignacion -> . ID selector DOSPUNTOSIGUAL condicion | expresion
    (61) asignacion -> . ID selector DOSPUNTOSIGUAL expresion
    ;               reduce using rule 138 (empty -> .)
    END             reduce using rule 138 (empty -> .)
    FOR             shift and go to state 148
    IF              shift and go to state 150
    ID              shift and go to state 149

    sentenciaSecuencia             shift and go to state 141
    sentencia                      shift and go to state 142
    empty                          shift and go to state 143
    sentenciaPara                  shift and go to state 144
    sentenciaSi                    shift and go to state 145
    asignacionUnidad               shift and go to state 146
    asignacion                     shift and go to state 147

state 111

    (104) declaracionVariableVAR -> VAR declaracionVariableRecursivo .
    BEGIN           reduce using rule 104 (declaracionVariableVAR -> VAR declaracionVariableRecursivo .)
    END             reduce using rule 104 (declaracionVariableVAR -> VAR declaracionVariableRecursivo .)


state 112

    (19) declaracionVariable -> listaId : tipo ; .
    ID              reduce using rule 19 (declaracionVariable -> listaId : tipo ; .)
    INOUT           reduce using rule 19 (declaracionVariable -> listaId : tipo ; .)
    OUT             reduce using rule 19 (declaracionVariable -> listaId : tipo ; .)
    VAR             reduce using rule 19 (declaracionVariable -> listaId : tipo ; .)
    BEGIN           reduce using rule 19 (declaracionVariable -> listaId : tipo ; .)
    END             reduce using rule 19 (declaracionVariable -> listaId : tipo ; .)


state 113

    (13) tipo -> expresionCorchete tipoSimple .
    ;               reduce using rule 13 (tipo -> expresionCorchete tipoSimple .)


state 114

    (4) tipoSimple -> ID . conjuntoExpresiones
    (6) conjuntoExpresiones -> . ( listaExpresiones )
    (7) conjuntoExpresiones -> . empty
    (138) empty -> .
    (               shift and go to state 152
    ;               reduce using rule 138 (empty -> .)

    conjuntoExpresiones            shift and go to state 151
    empty                          shift and go to state 153

state 115

    (5) tipoSimple -> tipoBasico .
    ;               reduce using rule 5 (tipoSimple -> tipoBasico .)


state 116

    (8) tipoBasico -> OC .
    ;               reduce using rule 8 (tipoBasico -> OC .)


state 117

    (9) tipoBasico -> TS .
    ;               reduce using rule 9 (tipoBasico -> TS .)


state 118

    (10) tipoBasico -> BIT .
    ;               reduce using rule 10 (tipoBasico -> BIT .)


state 119

    (17) expresionCorcheteR -> expresionCorcheteR [ . expresion ]
    (53) expresion -> . termino terminoMasMenos
    (44) termino -> . factor terminoOperadores
    (32) factor -> . SR ( expresion , expresion )
    (33) factor -> . LATCH ( expresion , expresion )
    (34) factor -> . REG ( expresionComaO expresion )
    (35) factor -> . MUX ( expresion , expresion : expresion , expresion , expresion , expresion )
    (36) factor -> . MUX ( expresion : expresion , expresion )
    (37) factor -> . ( expresion )
    (38) factor -> . ~ factor
    (39) factor -> . INTEGER
    (40) factor -> . LOGICVALUE
    (41) factor -> . ID selector
    SR              shift and go to state 58
    LATCH           shift and go to state 60
    REG             shift and go to state 61
    MUX             shift and go to state 62
    (               shift and go to state 59
    ~               shift and go to state 63
    INTEGER         shift and go to state 64
    LOGICVALUE      shift and go to state 65
    ID              shift and go to state 54

    expresion                      shift and go to state 154
    termino                        shift and go to state 56
    factor                         shift and go to state 57

state 120

    (16) expresionCorcheteR -> [ expresion . ]
    ]               shift and go to state 155


state 121

    (24) IDComaR -> IDComaR , ID .
    ,               reduce using rule 24 (IDComaR -> IDComaR , ID .)
    :               reduce using rule 24 (IDComaR -> IDComaR , ID .)
    )               reduce using rule 24 (IDComaR -> IDComaR , ID .)


state 122

    (28) selectorR -> selectorR selectorRR .
    [               reduce using rule 28 (selectorR -> selectorR selectorRR .)
    .               reduce using rule 28 (selectorR -> selectorR selectorRR .)
    MOD             reduce using rule 28 (selectorR -> selectorR selectorRR .)
    DIV             reduce using rule 28 (selectorR -> selectorR selectorRR .)
    /               reduce using rule 28 (selectorR -> selectorR selectorRR .)
    *               reduce using rule 28 (selectorR -> selectorR selectorRR .)
    -               reduce using rule 28 (selectorR -> selectorR selectorRR .)
    +               reduce using rule 28 (selectorR -> selectorR selectorRR .)
    ;               reduce using rule 28 (selectorR -> selectorR selectorRR .)
    )               reduce using rule 28 (selectorR -> selectorR selectorRR .)
    ]               reduce using rule 28 (selectorR -> selectorR selectorRR .)
    ,               reduce using rule 28 (selectorR -> selectorR selectorRR .)
    :               reduce using rule 28 (selectorR -> selectorR selectorRR .)
    MAYORIGUAL      reduce using rule 28 (selectorR -> selectorR selectorRR .)
    >               reduce using rule 28 (selectorR -> selectorR selectorRR .)
    MENORIGUAL      reduce using rule 28 (selectorR -> selectorR selectorRR .)
    <               reduce using rule 28 (selectorR -> selectorR selectorRR .)
    #               reduce using rule 28 (selectorR -> selectorR selectorRR .)
    =               reduce using rule 28 (selectorR -> selectorR selectorRR .)
    DOBLEPUNTO      reduce using rule 28 (selectorR -> selectorR selectorRR .)
    END             reduce using rule 28 (selectorR -> selectorR selectorRR .)
    ELSIF           reduce using rule 28 (selectorR -> selectorR selectorRR .)
    ELSE            reduce using rule 28 (selectorR -> selectorR selectorRR .)
    |               reduce using rule 28 (selectorR -> selectorR selectorRR .)
    THEN            reduce using rule 28 (selectorR -> selectorR selectorRR .)
    DO              reduce using rule 28 (selectorR -> selectorR selectorRR .)
    (               reduce using rule 28 (selectorR -> selectorR selectorRR .)
    DOSPUNTOSIGUAL  reduce using rule 28 (selectorR -> selectorR selectorRR .)


state 123

    (29) selectorRR -> [ expresion . ]
    ]               shift and go to state 156


state 124

    (30) selectorRR -> . INTEGER .
    [               reduce using rule 30 (selectorRR -> . INTEGER .)
    .               reduce using rule 30 (selectorRR -> . INTEGER .)
    MOD             reduce using rule 30 (selectorRR -> . INTEGER .)
    DIV             reduce using rule 30 (selectorRR -> . INTEGER .)
    /               reduce using rule 30 (selectorRR -> . INTEGER .)
    *               reduce using rule 30 (selectorRR -> . INTEGER .)
    -               reduce using rule 30 (selectorRR -> . INTEGER .)
    +               reduce using rule 30 (selectorRR -> . INTEGER .)
    ;               reduce using rule 30 (selectorRR -> . INTEGER .)
    )               reduce using rule 30 (selectorRR -> . INTEGER .)
    ]               reduce using rule 30 (selectorRR -> . INTEGER .)
    ,               reduce using rule 30 (selectorRR -> . INTEGER .)
    :               reduce using rule 30 (selectorRR -> . INTEGER .)
    MAYORIGUAL      reduce using rule 30 (selectorRR -> . INTEGER .)
    >               reduce using rule 30 (selectorRR -> . INTEGER .)
    MENORIGUAL      reduce using rule 30 (selectorRR -> . INTEGER .)
    <               reduce using rule 30 (selectorRR -> . INTEGER .)
    #               reduce using rule 30 (selectorRR -> . INTEGER .)
    =               reduce using rule 30 (selectorRR -> . INTEGER .)
    DOBLEPUNTO      reduce using rule 30 (selectorRR -> . INTEGER .)
    END             reduce using rule 30 (selectorRR -> . INTEGER .)
    ELSIF           reduce using rule 30 (selectorRR -> . INTEGER .)
    ELSE            reduce using rule 30 (selectorRR -> . INTEGER .)
    |               reduce using rule 30 (selectorRR -> . INTEGER .)
    THEN            reduce using rule 30 (selectorRR -> . INTEGER .)
    DO              reduce using rule 30 (selectorRR -> . INTEGER .)
    (               reduce using rule 30 (selectorRR -> . INTEGER .)
    DOSPUNTOSIGUAL  reduce using rule 30 (selectorRR -> . INTEGER .)


state 125

    (31) selectorRR -> . ID .
    [               reduce using rule 31 (selectorRR -> . ID .)
    .               reduce using rule 31 (selectorRR -> . ID .)
    MOD             reduce using rule 31 (selectorRR -> . ID .)
    DIV             reduce using rule 31 (selectorRR -> . ID .)
    /               reduce using rule 31 (selectorRR -> . ID .)
    *               reduce using rule 31 (selectorRR -> . ID .)
    -               reduce using rule 31 (selectorRR -> . ID .)
    +               reduce using rule 31 (selectorRR -> . ID .)
    ;               reduce using rule 31 (selectorRR -> . ID .)
    )               reduce using rule 31 (selectorRR -> . ID .)
    ]               reduce using rule 31 (selectorRR -> . ID .)
    ,               reduce using rule 31 (selectorRR -> . ID .)
    :               reduce using rule 31 (selectorRR -> . ID .)
    MAYORIGUAL      reduce using rule 31 (selectorRR -> . ID .)
    >               reduce using rule 31 (selectorRR -> . ID .)
    MENORIGUAL      reduce using rule 31 (selectorRR -> . ID .)
    <               reduce using rule 31 (selectorRR -> . ID .)
    #               reduce using rule 31 (selectorRR -> . ID .)
    =               reduce using rule 31 (selectorRR -> . ID .)
    DOBLEPUNTO      reduce using rule 31 (selectorRR -> . ID .)
    END             reduce using rule 31 (selectorRR -> . ID .)
    ELSIF           reduce using rule 31 (selectorRR -> . ID .)
    ELSE            reduce using rule 31 (selectorRR -> . ID .)
    |               reduce using rule 31 (selectorRR -> . ID .)
    THEN            reduce using rule 31 (selectorRR -> . ID .)
    DO              reduce using rule 31 (selectorRR -> . ID .)
    (               reduce using rule 31 (selectorRR -> . ID .)
    DOSPUNTOSIGUAL  reduce using rule 31 (selectorRR -> . ID .)


state 126

    (57) terminoMasMenosR -> terminoMasMenosR simbolosMasMenos . termino
    (44) termino -> . factor terminoOperadores
    (32) factor -> . SR ( expresion , expresion )
    (33) factor -> . LATCH ( expresion , expresion )
    (34) factor -> . REG ( expresionComaO expresion )
    (35) factor -> . MUX ( expresion , expresion : expresion , expresion , expresion , expresion )
    (36) factor -> . MUX ( expresion : expresion , expresion )
    (37) factor -> . ( expresion )
    (38) factor -> . ~ factor
    (39) factor -> . INTEGER
    (40) factor -> . LOGICVALUE
    (41) factor -> . ID selector
    SR              shift and go to state 58
    LATCH           shift and go to state 60
    REG             shift and go to state 61
    MUX             shift and go to state 62
    (               shift and go to state 59
    ~               shift and go to state 63
    INTEGER         shift and go to state 64
    LOGICVALUE      shift and go to state 65
    ID              shift and go to state 54

    termino                        shift and go to state 157
    factor                         shift and go to state 57

state 127

    (56) terminoMasMenosR -> simbolosMasMenos termino .
    -               reduce using rule 56 (terminoMasMenosR -> simbolosMasMenos termino .)
    +               reduce using rule 56 (terminoMasMenosR -> simbolosMasMenos termino .)
    ;               reduce using rule 56 (terminoMasMenosR -> simbolosMasMenos termino .)
    )               reduce using rule 56 (terminoMasMenosR -> simbolosMasMenos termino .)
    ]               reduce using rule 56 (terminoMasMenosR -> simbolosMasMenos termino .)
    ,               reduce using rule 56 (terminoMasMenosR -> simbolosMasMenos termino .)
    :               reduce using rule 56 (terminoMasMenosR -> simbolosMasMenos termino .)
    MAYORIGUAL      reduce using rule 56 (terminoMasMenosR -> simbolosMasMenos termino .)
    >               reduce using rule 56 (terminoMasMenosR -> simbolosMasMenos termino .)
    MENORIGUAL      reduce using rule 56 (terminoMasMenosR -> simbolosMasMenos termino .)
    <               reduce using rule 56 (terminoMasMenosR -> simbolosMasMenos termino .)
    #               reduce using rule 56 (terminoMasMenosR -> simbolosMasMenos termino .)
    =               reduce using rule 56 (terminoMasMenosR -> simbolosMasMenos termino .)
    DOBLEPUNTO      reduce using rule 56 (terminoMasMenosR -> simbolosMasMenos termino .)
    END             reduce using rule 56 (terminoMasMenosR -> simbolosMasMenos termino .)
    ELSIF           reduce using rule 56 (terminoMasMenosR -> simbolosMasMenos termino .)
    ELSE            reduce using rule 56 (terminoMasMenosR -> simbolosMasMenos termino .)
    |               reduce using rule 56 (terminoMasMenosR -> simbolosMasMenos termino .)
    THEN            reduce using rule 56 (terminoMasMenosR -> simbolosMasMenos termino .)
    DO              reduce using rule 56 (terminoMasMenosR -> simbolosMasMenos termino .)


state 128

    (48) terminoOperadoresR -> terminoOperadoresR simbolosProd . factor
    (32) factor -> . SR ( expresion , expresion )
    (33) factor -> . LATCH ( expresion , expresion )
    (34) factor -> . REG ( expresionComaO expresion )
    (35) factor -> . MUX ( expresion , expresion : expresion , expresion , expresion , expresion )
    (36) factor -> . MUX ( expresion : expresion , expresion )
    (37) factor -> . ( expresion )
    (38) factor -> . ~ factor
    (39) factor -> . INTEGER
    (40) factor -> . LOGICVALUE
    (41) factor -> . ID selector
    SR              shift and go to state 58
    LATCH           shift and go to state 60
    REG             shift and go to state 61
    MUX             shift and go to state 62
    (               shift and go to state 59
    ~               shift and go to state 63
    INTEGER         shift and go to state 64
    LOGICVALUE      shift and go to state 65
    ID              shift and go to state 54

    factor                         shift and go to state 158

state 129

    (47) terminoOperadoresR -> simbolosProd factor .
    MOD             reduce using rule 47 (terminoOperadoresR -> simbolosProd factor .)
    DIV             reduce using rule 47 (terminoOperadoresR -> simbolosProd factor .)
    /               reduce using rule 47 (terminoOperadoresR -> simbolosProd factor .)
    *               reduce using rule 47 (terminoOperadoresR -> simbolosProd factor .)
    -               reduce using rule 47 (terminoOperadoresR -> simbolosProd factor .)
    +               reduce using rule 47 (terminoOperadoresR -> simbolosProd factor .)
    ;               reduce using rule 47 (terminoOperadoresR -> simbolosProd factor .)
    )               reduce using rule 47 (terminoOperadoresR -> simbolosProd factor .)
    ]               reduce using rule 47 (terminoOperadoresR -> simbolosProd factor .)
    ,               reduce using rule 47 (terminoOperadoresR -> simbolosProd factor .)
    :               reduce using rule 47 (terminoOperadoresR -> simbolosProd factor .)
    MAYORIGUAL      reduce using rule 47 (terminoOperadoresR -> simbolosProd factor .)
    >               reduce using rule 47 (terminoOperadoresR -> simbolosProd factor .)
    MENORIGUAL      reduce using rule 47 (terminoOperadoresR -> simbolosProd factor .)
    <               reduce using rule 47 (terminoOperadoresR -> simbolosProd factor .)
    #               reduce using rule 47 (terminoOperadoresR -> simbolosProd factor .)
    =               reduce using rule 47 (terminoOperadoresR -> simbolosProd factor .)
    DOBLEPUNTO      reduce using rule 47 (terminoOperadoresR -> simbolosProd factor .)
    END             reduce using rule 47 (terminoOperadoresR -> simbolosProd factor .)
    ELSIF           reduce using rule 47 (terminoOperadoresR -> simbolosProd factor .)
    ELSE            reduce using rule 47 (terminoOperadoresR -> simbolosProd factor .)
    |               reduce using rule 47 (terminoOperadoresR -> simbolosProd factor .)
    THEN            reduce using rule 47 (terminoOperadoresR -> simbolosProd factor .)
    DO              reduce using rule 47 (terminoOperadoresR -> simbolosProd factor .)


state 130

    (32) factor -> SR ( expresion . , expresion )
    ,               shift and go to state 159


state 131

    (37) factor -> ( expresion ) .
    MOD             reduce using rule 37 (factor -> ( expresion ) .)
    DIV             reduce using rule 37 (factor -> ( expresion ) .)
    /               reduce using rule 37 (factor -> ( expresion ) .)
    *               reduce using rule 37 (factor -> ( expresion ) .)
    -               reduce using rule 37 (factor -> ( expresion ) .)
    +               reduce using rule 37 (factor -> ( expresion ) .)
    ;               reduce using rule 37 (factor -> ( expresion ) .)
    )               reduce using rule 37 (factor -> ( expresion ) .)
    ]               reduce using rule 37 (factor -> ( expresion ) .)
    ,               reduce using rule 37 (factor -> ( expresion ) .)
    :               reduce using rule 37 (factor -> ( expresion ) .)
    MAYORIGUAL      reduce using rule 37 (factor -> ( expresion ) .)
    >               reduce using rule 37 (factor -> ( expresion ) .)
    MENORIGUAL      reduce using rule 37 (factor -> ( expresion ) .)
    <               reduce using rule 37 (factor -> ( expresion ) .)
    #               reduce using rule 37 (factor -> ( expresion ) .)
    =               reduce using rule 37 (factor -> ( expresion ) .)
    DOBLEPUNTO      reduce using rule 37 (factor -> ( expresion ) .)
    END             reduce using rule 37 (factor -> ( expresion ) .)
    ELSIF           reduce using rule 37 (factor -> ( expresion ) .)
    ELSE            reduce using rule 37 (factor -> ( expresion ) .)
    |               reduce using rule 37 (factor -> ( expresion ) .)
    THEN            reduce using rule 37 (factor -> ( expresion ) .)
    DO              reduce using rule 37 (factor -> ( expresion ) .)


state 132

    (33) factor -> LATCH ( expresion . , expresion )
    ,               shift and go to state 160


state 133

    (34) factor -> REG ( expresionComaO . expresion )
    (53) expresion -> . termino terminoMasMenos
    (44) termino -> . factor terminoOperadores
    (32) factor -> . SR ( expresion , expresion )
    (33) factor -> . LATCH ( expresion , expresion )
    (34) factor -> . REG ( expresionComaO expresion )
    (35) factor -> . MUX ( expresion , expresion : expresion , expresion , expresion , expresion )
    (36) factor -> . MUX ( expresion : expresion , expresion )
    (37) factor -> . ( expresion )
    (38) factor -> . ~ factor
    (39) factor -> . INTEGER
    (40) factor -> . LOGICVALUE
    (41) factor -> . ID selector
    SR              shift and go to state 58
    LATCH           shift and go to state 60
    REG             shift and go to state 61
    MUX             shift and go to state 62
    (               shift and go to state 59
    ~               shift and go to state 63
    INTEGER         shift and go to state 64
    LOGICVALUE      shift and go to state 65
    ID              shift and go to state 54

    expresion                      shift and go to state 161
    termino                        shift and go to state 56
    factor                         shift and go to state 57

state 134

    (43) expresionComaO -> expresion . ,
    ,               shift and go to state 162


state 135

    (42) expresionComaO -> empty .
    SR              reduce using rule 42 (expresionComaO -> empty .)
    LATCH           reduce using rule 42 (expresionComaO -> empty .)
    REG             reduce using rule 42 (expresionComaO -> empty .)
    MUX             reduce using rule 42 (expresionComaO -> empty .)
    (               reduce using rule 42 (expresionComaO -> empty .)
    ~               reduce using rule 42 (expresionComaO -> empty .)
    INTEGER         reduce using rule 42 (expresionComaO -> empty .)
    LOGICVALUE      reduce using rule 42 (expresionComaO -> empty .)
    ID              reduce using rule 42 (expresionComaO -> empty .)


state 136

    (35) factor -> MUX ( expresion . , expresion : expresion , expresion , expresion , expresion )
    (36) factor -> MUX ( expresion . : expresion , expresion )
    ,               shift and go to state 163
    :               shift and go to state 164


state 137

    (120) declaracionTipo -> TYPE ID simboloPor listaIdParentesis ; declaracionConstanteCONST tipoFormalIN . tipoFormlINOUT declaracionVariableOUT declaracionVariableVAR sentenciaSecuenciaBEGIN END ID
    (131) tipoFormlINOUT -> . empty
    (132) tipoFormlINOUT -> . INOUT tipoFormlBuslistaId
    (138) empty -> .
    INOUT           shift and go to state 167
    OUT             reduce using rule 138 (empty -> .)
    VAR             reduce using rule 138 (empty -> .)
    BEGIN           reduce using rule 138 (empty -> .)
    END             reduce using rule 138 (empty -> .)

    tipoFormlINOUT                 shift and go to state 165
    empty                          shift and go to state 166

state 138

    (125) tipoFormalIN -> empty .
    INOUT           reduce using rule 125 (tipoFormalIN -> empty .)
    OUT             reduce using rule 125 (tipoFormalIN -> empty .)
    VAR             reduce using rule 125 (tipoFormalIN -> empty .)
    BEGIN           reduce using rule 125 (tipoFormalIN -> empty .)
    END             reduce using rule 125 (tipoFormalIN -> empty .)


state 139

    (126) tipoFormalIN -> IN . tipoFormallistaId
    (127) tipoFormallistaId -> . empty
    (128) tipoFormallistaId -> . tipoFormallistaIdR
    (138) empty -> .
    (129) tipoFormallistaIdR -> . listaId : tipoFormal ;
    (130) tipoFormallistaIdR -> . tipoFormallistaIdR listaId : tipoFormal ;
    (20) listaId -> . ID IDComa
    INOUT           reduce using rule 138 (empty -> .)
    OUT             reduce using rule 138 (empty -> .)
    VAR             reduce using rule 138 (empty -> .)
    BEGIN           reduce using rule 138 (empty -> .)
    END             reduce using rule 138 (empty -> .)
    ID              shift and go to state 38

    tipoFormallistaId              shift and go to state 168
    empty                          shift and go to state 169
    tipoFormallistaIdR             shift and go to state 170
    listaId                        shift and go to state 171

state 140

    (3) modulo -> MODULE ID ; declaracionTipoPuntoComa declaracionConstanteCONST declaracionVariableIN declaracionVariableINOUT declaracionVariableOUT declaracionVariableVAR sentenciaSecuenciaBEGIN END . ID .
    ID              shift and go to state 172


state 141

    (106) sentenciaSecuenciaBEGIN -> BEGIN sentenciaSecuencia .
    END             reduce using rule 106 (sentenciaSecuenciaBEGIN -> BEGIN sentenciaSecuencia .)


state 142

    (82) sentenciaSecuencia -> sentencia . sentenciaPuntoComa
    (83) sentenciaPuntoComa -> . empty
    (84) sentenciaPuntoComa -> . sentenciaPuntoComaR
    (138) empty -> .
    (85) sentenciaPuntoComaR -> . ; sentencia
    (86) sentenciaPuntoComaR -> . sentenciaPuntoComaR ; sentencia
    END             reduce using rule 138 (empty -> .)
    ELSIF           reduce using rule 138 (empty -> .)
    ELSE            reduce using rule 138 (empty -> .)
    ;               shift and go to state 176

    sentenciaPuntoComa             shift and go to state 173
    empty                          shift and go to state 174
    sentenciaPuntoComaR            shift and go to state 175

state 143

    (77) sentencia -> empty .
    ;               reduce using rule 77 (sentencia -> empty .)
    END             reduce using rule 77 (sentencia -> empty .)
    ELSIF           reduce using rule 77 (sentencia -> empty .)
    ELSE            reduce using rule 77 (sentencia -> empty .)


state 144

    (78) sentencia -> sentenciaPara .
    ;               reduce using rule 78 (sentencia -> sentenciaPara .)
    END             reduce using rule 78 (sentencia -> sentenciaPara .)
    ELSIF           reduce using rule 78 (sentencia -> sentenciaPara .)
    ELSE            reduce using rule 78 (sentencia -> sentenciaPara .)


state 145

    (79) sentencia -> sentenciaSi .
    ;               reduce using rule 79 (sentencia -> sentenciaSi .)
    END             reduce using rule 79 (sentencia -> sentenciaSi .)
    ELSIF           reduce using rule 79 (sentencia -> sentenciaSi .)
    ELSE            reduce using rule 79 (sentencia -> sentenciaSi .)


state 146

    (80) sentencia -> asignacionUnidad .
    ;               reduce using rule 80 (sentencia -> asignacionUnidad .)
    END             reduce using rule 80 (sentencia -> asignacionUnidad .)
    ELSIF           reduce using rule 80 (sentencia -> asignacionUnidad .)
    ELSE            reduce using rule 80 (sentencia -> asignacionUnidad .)


state 147

    (81) sentencia -> asignacion .
    ;               reduce using rule 81 (sentencia -> asignacion .)
    END             reduce using rule 81 (sentencia -> asignacion .)
    ELSIF           reduce using rule 81 (sentencia -> asignacion .)
    ELSE            reduce using rule 81 (sentencia -> asignacion .)


state 148

    (76) sentenciaPara -> FOR . ID DOSPUNTOSIGUAL expresion DOBLEPUNTO expresion DO sentenciaSecuencia END
    ID              shift and go to state 177


state 149

    (137) asignacionUnidad -> ID . selector ( listaExpresiones )
    (60) asignacion -> ID . selector DOSPUNTOSIGUAL condicion | expresion
    (61) asignacion -> ID . selector DOSPUNTOSIGUAL expresion
    (25) selector -> . empty
    (26) selector -> . selectorR
    (138) empty -> .
    (27) selectorR -> . selectorRR
    (28) selectorR -> . selectorR selectorRR
    (29) selectorRR -> . [ expresion ]
    (30) selectorRR -> . . INTEGER
    (31) selectorRR -> . . ID
    (               reduce using rule 138 (empty -> .)
    DOSPUNTOSIGUAL  reduce using rule 138 (empty -> .)
    [               shift and go to state 83
    .               shift and go to state 84

    selector                       shift and go to state 178
    empty                          shift and go to state 80
    selectorR                      shift and go to state 81
    selectorRR                     shift and go to state 82

state 150

    (69) sentenciaSi -> IF . relacion THEN sentenciaSecuencia sentenciaSiSino sentenciaSiEntonces END
    (63) relacion -> . expresion MAYORIGUAL expresion
    (64) relacion -> . expresion > expresion
    (65) relacion -> . expresion MENORIGUAL expresion
    (66) relacion -> . expresion < expresion
    (67) relacion -> . expresion # expresion
    (68) relacion -> . expresion = expresion
    (53) expresion -> . termino terminoMasMenos
    (44) termino -> . factor terminoOperadores
    (32) factor -> . SR ( expresion , expresion )
    (33) factor -> . LATCH ( expresion , expresion )
    (34) factor -> . REG ( expresionComaO expresion )
    (35) factor -> . MUX ( expresion , expresion : expresion , expresion , expresion , expresion )
    (36) factor -> . MUX ( expresion : expresion , expresion )
    (37) factor -> . ( expresion )
    (38) factor -> . ~ factor
    (39) factor -> . INTEGER
    (40) factor -> . LOGICVALUE
    (41) factor -> . ID selector
    SR              shift and go to state 58
    LATCH           shift and go to state 60
    REG             shift and go to state 61
    MUX             shift and go to state 62
    (               shift and go to state 59
    ~               shift and go to state 63
    INTEGER         shift and go to state 64
    LOGICVALUE      shift and go to state 65
    ID              shift and go to state 54

    relacion                       shift and go to state 179
    expresion                      shift and go to state 180
    termino                        shift and go to state 56
    factor                         shift and go to state 57

state 151

    (4) tipoSimple -> ID conjuntoExpresiones .
    ;               reduce using rule 4 (tipoSimple -> ID conjuntoExpresiones .)


state 152

    (6) conjuntoExpresiones -> ( . listaExpresiones )
    (11) listaExpresiones -> . expresion
    (12) listaExpresiones -> . listaExpresiones , expresion
    (53) expresion -> . termino terminoMasMenos
    (44) termino -> . factor terminoOperadores
    (32) factor -> . SR ( expresion , expresion )
    (33) factor -> . LATCH ( expresion , expresion )
    (34) factor -> . REG ( expresionComaO expresion )
    (35) factor -> . MUX ( expresion , expresion : expresion , expresion , expresion , expresion )
    (36) factor -> . MUX ( expresion : expresion , expresion )
    (37) factor -> . ( expresion )
    (38) factor -> . ~ factor
    (39) factor -> . INTEGER
    (40) factor -> . LOGICVALUE
    (41) factor -> . ID selector
    SR              shift and go to state 58
    LATCH           shift and go to state 60
    REG             shift and go to state 61
    MUX             shift and go to state 62
    (               shift and go to state 59
    ~               shift and go to state 63
    INTEGER         shift and go to state 64
    LOGICVALUE      shift and go to state 65
    ID              shift and go to state 54

    listaExpresiones               shift and go to state 181
    expresion                      shift and go to state 182
    termino                        shift and go to state 56
    factor                         shift and go to state 57

state 153

    (7) conjuntoExpresiones -> empty .
    ;               reduce using rule 7 (conjuntoExpresiones -> empty .)


state 154

    (17) expresionCorcheteR -> expresionCorcheteR [ expresion . ]
    ]               shift and go to state 183


state 155

    (16) expresionCorcheteR -> [ expresion ] .
    [               reduce using rule 16 (expresionCorcheteR -> [ expresion ] .)
    ID              reduce using rule 16 (expresionCorcheteR -> [ expresion ] .)
    OC              reduce using rule 16 (expresionCorcheteR -> [ expresion ] .)
    TS              reduce using rule 16 (expresionCorcheteR -> [ expresion ] .)
    BIT             reduce using rule 16 (expresionCorcheteR -> [ expresion ] .)


state 156

    (29) selectorRR -> [ expresion ] .
    [               reduce using rule 29 (selectorRR -> [ expresion ] .)
    .               reduce using rule 29 (selectorRR -> [ expresion ] .)
    MOD             reduce using rule 29 (selectorRR -> [ expresion ] .)
    DIV             reduce using rule 29 (selectorRR -> [ expresion ] .)
    /               reduce using rule 29 (selectorRR -> [ expresion ] .)
    *               reduce using rule 29 (selectorRR -> [ expresion ] .)
    -               reduce using rule 29 (selectorRR -> [ expresion ] .)
    +               reduce using rule 29 (selectorRR -> [ expresion ] .)
    ;               reduce using rule 29 (selectorRR -> [ expresion ] .)
    )               reduce using rule 29 (selectorRR -> [ expresion ] .)
    ]               reduce using rule 29 (selectorRR -> [ expresion ] .)
    ,               reduce using rule 29 (selectorRR -> [ expresion ] .)
    :               reduce using rule 29 (selectorRR -> [ expresion ] .)
    MAYORIGUAL      reduce using rule 29 (selectorRR -> [ expresion ] .)
    >               reduce using rule 29 (selectorRR -> [ expresion ] .)
    MENORIGUAL      reduce using rule 29 (selectorRR -> [ expresion ] .)
    <               reduce using rule 29 (selectorRR -> [ expresion ] .)
    #               reduce using rule 29 (selectorRR -> [ expresion ] .)
    =               reduce using rule 29 (selectorRR -> [ expresion ] .)
    DOBLEPUNTO      reduce using rule 29 (selectorRR -> [ expresion ] .)
    END             reduce using rule 29 (selectorRR -> [ expresion ] .)
    ELSIF           reduce using rule 29 (selectorRR -> [ expresion ] .)
    ELSE            reduce using rule 29 (selectorRR -> [ expresion ] .)
    |               reduce using rule 29 (selectorRR -> [ expresion ] .)
    THEN            reduce using rule 29 (selectorRR -> [ expresion ] .)
    DO              reduce using rule 29 (selectorRR -> [ expresion ] .)
    (               reduce using rule 29 (selectorRR -> [ expresion ] .)
    DOSPUNTOSIGUAL  reduce using rule 29 (selectorRR -> [ expresion ] .)


state 157

    (57) terminoMasMenosR -> terminoMasMenosR simbolosMasMenos termino .
    -               reduce using rule 57 (terminoMasMenosR -> terminoMasMenosR simbolosMasMenos termino .)
    +               reduce using rule 57 (terminoMasMenosR -> terminoMasMenosR simbolosMasMenos termino .)
    ;               reduce using rule 57 (terminoMasMenosR -> terminoMasMenosR simbolosMasMenos termino .)
    )               reduce using rule 57 (terminoMasMenosR -> terminoMasMenosR simbolosMasMenos termino .)
    ]               reduce using rule 57 (terminoMasMenosR -> terminoMasMenosR simbolosMasMenos termino .)
    ,               reduce using rule 57 (terminoMasMenosR -> terminoMasMenosR simbolosMasMenos termino .)
    :               reduce using rule 57 (terminoMasMenosR -> terminoMasMenosR simbolosMasMenos termino .)
    MAYORIGUAL      reduce using rule 57 (terminoMasMenosR -> terminoMasMenosR simbolosMasMenos termino .)
    >               reduce using rule 57 (terminoMasMenosR -> terminoMasMenosR simbolosMasMenos termino .)
    MENORIGUAL      reduce using rule 57 (terminoMasMenosR -> terminoMasMenosR simbolosMasMenos termino .)
    <               reduce using rule 57 (terminoMasMenosR -> terminoMasMenosR simbolosMasMenos termino .)
    #               reduce using rule 57 (terminoMasMenosR -> terminoMasMenosR simbolosMasMenos termino .)
    =               reduce using rule 57 (terminoMasMenosR -> terminoMasMenosR simbolosMasMenos termino .)
    DOBLEPUNTO      reduce using rule 57 (terminoMasMenosR -> terminoMasMenosR simbolosMasMenos termino .)
    END             reduce using rule 57 (terminoMasMenosR -> terminoMasMenosR simbolosMasMenos termino .)
    ELSIF           reduce using rule 57 (terminoMasMenosR -> terminoMasMenosR simbolosMasMenos termino .)
    ELSE            reduce using rule 57 (terminoMasMenosR -> terminoMasMenosR simbolosMasMenos termino .)
    |               reduce using rule 57 (terminoMasMenosR -> terminoMasMenosR simbolosMasMenos termino .)
    THEN            reduce using rule 57 (terminoMasMenosR -> terminoMasMenosR simbolosMasMenos termino .)
    DO              reduce using rule 57 (terminoMasMenosR -> terminoMasMenosR simbolosMasMenos termino .)


state 158

    (48) terminoOperadoresR -> terminoOperadoresR simbolosProd factor .
    MOD             reduce using rule 48 (terminoOperadoresR -> terminoOperadoresR simbolosProd factor .)
    DIV             reduce using rule 48 (terminoOperadoresR -> terminoOperadoresR simbolosProd factor .)
    /               reduce using rule 48 (terminoOperadoresR -> terminoOperadoresR simbolosProd factor .)
    *               reduce using rule 48 (terminoOperadoresR -> terminoOperadoresR simbolosProd factor .)
    -               reduce using rule 48 (terminoOperadoresR -> terminoOperadoresR simbolosProd factor .)
    +               reduce using rule 48 (terminoOperadoresR -> terminoOperadoresR simbolosProd factor .)
    ;               reduce using rule 48 (terminoOperadoresR -> terminoOperadoresR simbolosProd factor .)
    )               reduce using rule 48 (terminoOperadoresR -> terminoOperadoresR simbolosProd factor .)
    ]               reduce using rule 48 (terminoOperadoresR -> terminoOperadoresR simbolosProd factor .)
    ,               reduce using rule 48 (terminoOperadoresR -> terminoOperadoresR simbolosProd factor .)
    :               reduce using rule 48 (terminoOperadoresR -> terminoOperadoresR simbolosProd factor .)
    MAYORIGUAL      reduce using rule 48 (terminoOperadoresR -> terminoOperadoresR simbolosProd factor .)
    >               reduce using rule 48 (terminoOperadoresR -> terminoOperadoresR simbolosProd factor .)
    MENORIGUAL      reduce using rule 48 (terminoOperadoresR -> terminoOperadoresR simbolosProd factor .)
    <               reduce using rule 48 (terminoOperadoresR -> terminoOperadoresR simbolosProd factor .)
    #               reduce using rule 48 (terminoOperadoresR -> terminoOperadoresR simbolosProd factor .)
    =               reduce using rule 48 (terminoOperadoresR -> terminoOperadoresR simbolosProd factor .)
    DOBLEPUNTO      reduce using rule 48 (terminoOperadoresR -> terminoOperadoresR simbolosProd factor .)
    END             reduce using rule 48 (terminoOperadoresR -> terminoOperadoresR simbolosProd factor .)
    ELSIF           reduce using rule 48 (terminoOperadoresR -> terminoOperadoresR simbolosProd factor .)
    ELSE            reduce using rule 48 (terminoOperadoresR -> terminoOperadoresR simbolosProd factor .)
    |               reduce using rule 48 (terminoOperadoresR -> terminoOperadoresR simbolosProd factor .)
    THEN            reduce using rule 48 (terminoOperadoresR -> terminoOperadoresR simbolosProd factor .)
    DO              reduce using rule 48 (terminoOperadoresR -> terminoOperadoresR simbolosProd factor .)


state 159

    (32) factor -> SR ( expresion , . expresion )
    (53) expresion -> . termino terminoMasMenos
    (44) termino -> . factor terminoOperadores
    (32) factor -> . SR ( expresion , expresion )
    (33) factor -> . LATCH ( expresion , expresion )
    (34) factor -> . REG ( expresionComaO expresion )
    (35) factor -> . MUX ( expresion , expresion : expresion , expresion , expresion , expresion )
    (36) factor -> . MUX ( expresion : expresion , expresion )
    (37) factor -> . ( expresion )
    (38) factor -> . ~ factor
    (39) factor -> . INTEGER
    (40) factor -> . LOGICVALUE
    (41) factor -> . ID selector
    SR              shift and go to state 58
    LATCH           shift and go to state 60
    REG             shift and go to state 61
    MUX             shift and go to state 62
    (               shift and go to state 59
    ~               shift and go to state 63
    INTEGER         shift and go to state 64
    LOGICVALUE      shift and go to state 65
    ID              shift and go to state 54

    expresion                      shift and go to state 184
    termino                        shift and go to state 56
    factor                         shift and go to state 57

state 160

    (33) factor -> LATCH ( expresion , . expresion )
    (53) expresion -> . termino terminoMasMenos
    (44) termino -> . factor terminoOperadores
    (32) factor -> . SR ( expresion , expresion )
    (33) factor -> . LATCH ( expresion , expresion )
    (34) factor -> . REG ( expresionComaO expresion )
    (35) factor -> . MUX ( expresion , expresion : expresion , expresion , expresion , expresion )
    (36) factor -> . MUX ( expresion : expresion , expresion )
    (37) factor -> . ( expresion )
    (38) factor -> . ~ factor
    (39) factor -> . INTEGER
    (40) factor -> . LOGICVALUE
    (41) factor -> . ID selector
    SR              shift and go to state 58
    LATCH           shift and go to state 60
    REG             shift and go to state 61
    MUX             shift and go to state 62
    (               shift and go to state 59
    ~               shift and go to state 63
    INTEGER         shift and go to state 64
    LOGICVALUE      shift and go to state 65
    ID              shift and go to state 54

    expresion                      shift and go to state 185
    termino                        shift and go to state 56
    factor                         shift and go to state 57

state 161

    (34) factor -> REG ( expresionComaO expresion . )
    )               shift and go to state 186


state 162

    (43) expresionComaO -> expresion , .
    SR              reduce using rule 43 (expresionComaO -> expresion , .)
    LATCH           reduce using rule 43 (expresionComaO -> expresion , .)
    REG             reduce using rule 43 (expresionComaO -> expresion , .)
    MUX             reduce using rule 43 (expresionComaO -> expresion , .)
    (               reduce using rule 43 (expresionComaO -> expresion , .)
    ~               reduce using rule 43 (expresionComaO -> expresion , .)
    INTEGER         reduce using rule 43 (expresionComaO -> expresion , .)
    LOGICVALUE      reduce using rule 43 (expresionComaO -> expresion , .)
    ID              reduce using rule 43 (expresionComaO -> expresion , .)


state 163

    (35) factor -> MUX ( expresion , . expresion : expresion , expresion , expresion , expresion )
    (53) expresion -> . termino terminoMasMenos
    (44) termino -> . factor terminoOperadores
    (32) factor -> . SR ( expresion , expresion )
    (33) factor -> . LATCH ( expresion , expresion )
    (34) factor -> . REG ( expresionComaO expresion )
    (35) factor -> . MUX ( expresion , expresion : expresion , expresion , expresion , expresion )
    (36) factor -> . MUX ( expresion : expresion , expresion )
    (37) factor -> . ( expresion )
    (38) factor -> . ~ factor
    (39) factor -> . INTEGER
    (40) factor -> . LOGICVALUE
    (41) factor -> . ID selector
    SR              shift and go to state 58
    LATCH           shift and go to state 60
    REG             shift and go to state 61
    MUX             shift and go to state 62
    (               shift and go to state 59
    ~               shift and go to state 63
    INTEGER         shift and go to state 64
    LOGICVALUE      shift and go to state 65
    ID              shift and go to state 54

    expresion                      shift and go to state 187
    termino                        shift and go to state 56
    factor                         shift and go to state 57

state 164

    (36) factor -> MUX ( expresion : . expresion , expresion )
    (53) expresion -> . termino terminoMasMenos
    (44) termino -> . factor terminoOperadores
    (32) factor -> . SR ( expresion , expresion )
    (33) factor -> . LATCH ( expresion , expresion )
    (34) factor -> . REG ( expresionComaO expresion )
    (35) factor -> . MUX ( expresion , expresion : expresion , expresion , expresion , expresion )
    (36) factor -> . MUX ( expresion : expresion , expresion )
    (37) factor -> . ( expresion )
    (38) factor -> . ~ factor
    (39) factor -> . INTEGER
    (40) factor -> . LOGICVALUE
    (41) factor -> . ID selector
    SR              shift and go to state 58
    LATCH           shift and go to state 60
    REG             shift and go to state 61
    MUX             shift and go to state 62
    (               shift and go to state 59
    ~               shift and go to state 63
    INTEGER         shift and go to state 64
    LOGICVALUE      shift and go to state 65
    ID              shift and go to state 54

    expresion                      shift and go to state 188
    termino                        shift and go to state 56
    factor                         shift and go to state 57

state 165

    (120) declaracionTipo -> TYPE ID simboloPor listaIdParentesis ; declaracionConstanteCONST tipoFormalIN tipoFormlINOUT . declaracionVariableOUT declaracionVariableVAR sentenciaSecuenciaBEGIN END ID
    (101) declaracionVariableOUT -> . empty
    (102) declaracionVariableOUT -> . OUT declaracionVariableRecursivo
    (138) empty -> .
    OUT             shift and go to state 46
    VAR             reduce using rule 138 (empty -> .)
    BEGIN           reduce using rule 138 (empty -> .)
    END             reduce using rule 138 (empty -> .)

    declaracionVariableOUT         shift and go to state 189
    empty                          shift and go to state 45

state 166

    (131) tipoFormlINOUT -> empty .
    OUT             reduce using rule 131 (tipoFormlINOUT -> empty .)
    VAR             reduce using rule 131 (tipoFormlINOUT -> empty .)
    BEGIN           reduce using rule 131 (tipoFormlINOUT -> empty .)
    END             reduce using rule 131 (tipoFormlINOUT -> empty .)


state 167

    (132) tipoFormlINOUT -> INOUT . tipoFormlBuslistaId
    (133) tipoFormlBuslistaId -> . empty
    (134) tipoFormlBuslistaId -> . tipoFormlBuslistaIdR
    (138) empty -> .
    (135) tipoFormlBuslistaIdR -> . listaId : tipoFormalBus ;
    (136) tipoFormlBuslistaIdR -> . tipoFormlBuslistaIdR listaId : tipoFormalBus ;
    (20) listaId -> . ID IDComa
    OUT             reduce using rule 138 (empty -> .)
    VAR             reduce using rule 138 (empty -> .)
    BEGIN           reduce using rule 138 (empty -> .)
    END             reduce using rule 138 (empty -> .)
    ID              shift and go to state 38

    tipoFormlBuslistaId            shift and go to state 190
    empty                          shift and go to state 191
    tipoFormlBuslistaIdR           shift and go to state 192
    listaId                        shift and go to state 193

state 168

    (126) tipoFormalIN -> IN tipoFormallistaId .
    INOUT           reduce using rule 126 (tipoFormalIN -> IN tipoFormallistaId .)
    OUT             reduce using rule 126 (tipoFormalIN -> IN tipoFormallistaId .)
    VAR             reduce using rule 126 (tipoFormalIN -> IN tipoFormallistaId .)
    BEGIN           reduce using rule 126 (tipoFormalIN -> IN tipoFormallistaId .)
    END             reduce using rule 126 (tipoFormalIN -> IN tipoFormallistaId .)


state 169

    (127) tipoFormallistaId -> empty .
    INOUT           reduce using rule 127 (tipoFormallistaId -> empty .)
    OUT             reduce using rule 127 (tipoFormallistaId -> empty .)
    VAR             reduce using rule 127 (tipoFormallistaId -> empty .)
    BEGIN           reduce using rule 127 (tipoFormallistaId -> empty .)
    END             reduce using rule 127 (tipoFormallistaId -> empty .)


state 170

    (128) tipoFormallistaId -> tipoFormallistaIdR .
    (130) tipoFormallistaIdR -> tipoFormallistaIdR . listaId : tipoFormal ;
    (20) listaId -> . ID IDComa
    INOUT           reduce using rule 128 (tipoFormallistaId -> tipoFormallistaIdR .)
    OUT             reduce using rule 128 (tipoFormallistaId -> tipoFormallistaIdR .)
    VAR             reduce using rule 128 (tipoFormallistaId -> tipoFormallistaIdR .)
    BEGIN           reduce using rule 128 (tipoFormallistaId -> tipoFormallistaIdR .)
    END             reduce using rule 128 (tipoFormallistaId -> tipoFormallistaIdR .)
    ID              shift and go to state 38

    listaId                        shift and go to state 194

state 171

    (129) tipoFormallistaIdR -> listaId . : tipoFormal ;
    :               shift and go to state 195


state 172

    (3) modulo -> MODULE ID ; declaracionTipoPuntoComa declaracionConstanteCONST declaracionVariableIN declaracionVariableINOUT declaracionVariableOUT declaracionVariableVAR sentenciaSecuenciaBEGIN END ID . .
    .               shift and go to state 196


state 173

    (82) sentenciaSecuencia -> sentencia sentenciaPuntoComa .
    END             reduce using rule 82 (sentenciaSecuencia -> sentencia sentenciaPuntoComa .)
    ELSIF           reduce using rule 82 (sentenciaSecuencia -> sentencia sentenciaPuntoComa .)
    ELSE            reduce using rule 82 (sentenciaSecuencia -> sentencia sentenciaPuntoComa .)


state 174

    (83) sentenciaPuntoComa -> empty .
    END             reduce using rule 83 (sentenciaPuntoComa -> empty .)
    ELSIF           reduce using rule 83 (sentenciaPuntoComa -> empty .)
    ELSE            reduce using rule 83 (sentenciaPuntoComa -> empty .)


state 175

    (84) sentenciaPuntoComa -> sentenciaPuntoComaR .
    (86) sentenciaPuntoComaR -> sentenciaPuntoComaR . ; sentencia
    END             reduce using rule 84 (sentenciaPuntoComa -> sentenciaPuntoComaR .)
    ELSIF           reduce using rule 84 (sentenciaPuntoComa -> sentenciaPuntoComaR .)
    ELSE            reduce using rule 84 (sentenciaPuntoComa -> sentenciaPuntoComaR .)
    ;               shift and go to state 197


state 176

    (85) sentenciaPuntoComaR -> ; . sentencia
    (77) sentencia -> . empty
    (78) sentencia -> . sentenciaPara
    (79) sentencia -> . sentenciaSi
    (80) sentencia -> . asignacionUnidad
    (81) sentencia -> . asignacion
    (138) empty -> .
    (76) sentenciaPara -> . FOR ID DOSPUNTOSIGUAL expresion DOBLEPUNTO expresion DO sentenciaSecuencia END
    (69) sentenciaSi -> . IF relacion THEN sentenciaSecuencia sentenciaSiSino sentenciaSiEntonces END
    (137) asignacionUnidad -> . ID selector ( listaExpresiones )
    (60) asignacion -> . ID selector DOSPUNTOSIGUAL condicion | expresion
    (61) asignacion -> . ID selector DOSPUNTOSIGUAL expresion
    ;               reduce using rule 138 (empty -> .)
    END             reduce using rule 138 (empty -> .)
    ELSIF           reduce using rule 138 (empty -> .)
    ELSE            reduce using rule 138 (empty -> .)
    FOR             shift and go to state 148
    IF              shift and go to state 150
    ID              shift and go to state 149

    sentencia                      shift and go to state 198
    empty                          shift and go to state 143
    sentenciaPara                  shift and go to state 144
    sentenciaSi                    shift and go to state 145
    asignacionUnidad               shift and go to state 146
    asignacion                     shift and go to state 147

state 177

    (76) sentenciaPara -> FOR ID . DOSPUNTOSIGUAL expresion DOBLEPUNTO expresion DO sentenciaSecuencia END
    DOSPUNTOSIGUAL  shift and go to state 199


state 178

    (137) asignacionUnidad -> ID selector . ( listaExpresiones )
    (60) asignacion -> ID selector . DOSPUNTOSIGUAL condicion | expresion
    (61) asignacion -> ID selector . DOSPUNTOSIGUAL expresion
    (               shift and go to state 200
    DOSPUNTOSIGUAL  shift and go to state 201


state 179

    (69) sentenciaSi -> IF relacion . THEN sentenciaSecuencia sentenciaSiSino sentenciaSiEntonces END
    THEN            shift and go to state 202


state 180

    (63) relacion -> expresion . MAYORIGUAL expresion
    (64) relacion -> expresion . > expresion
    (65) relacion -> expresion . MENORIGUAL expresion
    (66) relacion -> expresion . < expresion
    (67) relacion -> expresion . # expresion
    (68) relacion -> expresion . = expresion
    MAYORIGUAL      shift and go to state 203
    >               shift and go to state 204
    MENORIGUAL      shift and go to state 205
    <               shift and go to state 206
    #               shift and go to state 207
    =               shift and go to state 208


state 181

    (6) conjuntoExpresiones -> ( listaExpresiones . )
    (12) listaExpresiones -> listaExpresiones . , expresion
    )               shift and go to state 209
    ,               shift and go to state 210


state 182

    (11) listaExpresiones -> expresion .
    )               reduce using rule 11 (listaExpresiones -> expresion .)
    ,               reduce using rule 11 (listaExpresiones -> expresion .)


state 183

    (17) expresionCorcheteR -> expresionCorcheteR [ expresion ] .
    [               reduce using rule 17 (expresionCorcheteR -> expresionCorcheteR [ expresion ] .)
    ID              reduce using rule 17 (expresionCorcheteR -> expresionCorcheteR [ expresion ] .)
    OC              reduce using rule 17 (expresionCorcheteR -> expresionCorcheteR [ expresion ] .)
    TS              reduce using rule 17 (expresionCorcheteR -> expresionCorcheteR [ expresion ] .)
    BIT             reduce using rule 17 (expresionCorcheteR -> expresionCorcheteR [ expresion ] .)


state 184

    (32) factor -> SR ( expresion , expresion . )
    )               shift and go to state 211


state 185

    (33) factor -> LATCH ( expresion , expresion . )
    )               shift and go to state 212


state 186

    (34) factor -> REG ( expresionComaO expresion ) .
    MOD             reduce using rule 34 (factor -> REG ( expresionComaO expresion ) .)
    DIV             reduce using rule 34 (factor -> REG ( expresionComaO expresion ) .)
    /               reduce using rule 34 (factor -> REG ( expresionComaO expresion ) .)
    *               reduce using rule 34 (factor -> REG ( expresionComaO expresion ) .)
    -               reduce using rule 34 (factor -> REG ( expresionComaO expresion ) .)
    +               reduce using rule 34 (factor -> REG ( expresionComaO expresion ) .)
    ;               reduce using rule 34 (factor -> REG ( expresionComaO expresion ) .)
    )               reduce using rule 34 (factor -> REG ( expresionComaO expresion ) .)
    ]               reduce using rule 34 (factor -> REG ( expresionComaO expresion ) .)
    ,               reduce using rule 34 (factor -> REG ( expresionComaO expresion ) .)
    :               reduce using rule 34 (factor -> REG ( expresionComaO expresion ) .)
    MAYORIGUAL      reduce using rule 34 (factor -> REG ( expresionComaO expresion ) .)
    >               reduce using rule 34 (factor -> REG ( expresionComaO expresion ) .)
    MENORIGUAL      reduce using rule 34 (factor -> REG ( expresionComaO expresion ) .)
    <               reduce using rule 34 (factor -> REG ( expresionComaO expresion ) .)
    #               reduce using rule 34 (factor -> REG ( expresionComaO expresion ) .)
    =               reduce using rule 34 (factor -> REG ( expresionComaO expresion ) .)
    DOBLEPUNTO      reduce using rule 34 (factor -> REG ( expresionComaO expresion ) .)
    END             reduce using rule 34 (factor -> REG ( expresionComaO expresion ) .)
    ELSIF           reduce using rule 34 (factor -> REG ( expresionComaO expresion ) .)
    ELSE            reduce using rule 34 (factor -> REG ( expresionComaO expresion ) .)
    |               reduce using rule 34 (factor -> REG ( expresionComaO expresion ) .)
    THEN            reduce using rule 34 (factor -> REG ( expresionComaO expresion ) .)
    DO              reduce using rule 34 (factor -> REG ( expresionComaO expresion ) .)


state 187

    (35) factor -> MUX ( expresion , expresion . : expresion , expresion , expresion , expresion )
    :               shift and go to state 213


state 188

    (36) factor -> MUX ( expresion : expresion . , expresion )
    ,               shift and go to state 214


state 189

    (120) declaracionTipo -> TYPE ID simboloPor listaIdParentesis ; declaracionConstanteCONST tipoFormalIN tipoFormlINOUT declaracionVariableOUT . declaracionVariableVAR sentenciaSecuenciaBEGIN END ID
    (103) declaracionVariableVAR -> . empty
    (104) declaracionVariableVAR -> . VAR declaracionVariableRecursivo
    (138) empty -> .
    VAR             shift and go to state 70
    BEGIN           reduce using rule 138 (empty -> .)
    END             reduce using rule 138 (empty -> .)

    declaracionVariableVAR         shift and go to state 215
    empty                          shift and go to state 69

state 190

    (132) tipoFormlINOUT -> INOUT tipoFormlBuslistaId .
    OUT             reduce using rule 132 (tipoFormlINOUT -> INOUT tipoFormlBuslistaId .)
    VAR             reduce using rule 132 (tipoFormlINOUT -> INOUT tipoFormlBuslistaId .)
    BEGIN           reduce using rule 132 (tipoFormlINOUT -> INOUT tipoFormlBuslistaId .)
    END             reduce using rule 132 (tipoFormlINOUT -> INOUT tipoFormlBuslistaId .)


state 191

    (133) tipoFormlBuslistaId -> empty .
    OUT             reduce using rule 133 (tipoFormlBuslistaId -> empty .)
    VAR             reduce using rule 133 (tipoFormlBuslistaId -> empty .)
    BEGIN           reduce using rule 133 (tipoFormlBuslistaId -> empty .)
    END             reduce using rule 133 (tipoFormlBuslistaId -> empty .)


state 192

    (134) tipoFormlBuslistaId -> tipoFormlBuslistaIdR .
    (136) tipoFormlBuslistaIdR -> tipoFormlBuslistaIdR . listaId : tipoFormalBus ;
    (20) listaId -> . ID IDComa
    OUT             reduce using rule 134 (tipoFormlBuslistaId -> tipoFormlBuslistaIdR .)
    VAR             reduce using rule 134 (tipoFormlBuslistaId -> tipoFormlBuslistaIdR .)
    BEGIN           reduce using rule 134 (tipoFormlBuslistaId -> tipoFormlBuslistaIdR .)
    END             reduce using rule 134 (tipoFormlBuslistaId -> tipoFormlBuslistaIdR .)
    ID              shift and go to state 38

    listaId                        shift and go to state 216

state 193

    (135) tipoFormlBuslistaIdR -> listaId . : tipoFormalBus ;
    :               shift and go to state 217


state 194

    (130) tipoFormallistaIdR -> tipoFormallistaIdR listaId . : tipoFormal ;
    :               shift and go to state 218


state 195

    (129) tipoFormallistaIdR -> listaId : . tipoFormal ;
    (111) tipoFormal -> . expresionCorcheteO BIT
    (112) expresionCorcheteO -> . empty
    (113) expresionCorcheteO -> . expresionCorcheteOR
    (138) empty -> .
    (114) expresionCorcheteOR -> . [ expresionOpcional ]
    (115) expresionCorcheteOR -> . expresionCorcheteOR [ expresionOpcional ]
    BIT             reduce using rule 138 (empty -> .)
    [               shift and go to state 223

    tipoFormal                     shift and go to state 219
    expresionCorcheteO             shift and go to state 220
    empty                          shift and go to state 221
    expresionCorcheteOR            shift and go to state 222

state 196

    (3) modulo -> MODULE ID ; declaracionTipoPuntoComa declaracionConstanteCONST declaracionVariableIN declaracionVariableINOUT declaracionVariableOUT declaracionVariableVAR sentenciaSecuenciaBEGIN END ID . .
    MODULE          reduce using rule 3 (modulo -> MODULE ID ; declaracionTipoPuntoComa declaracionConstanteCONST declaracionVariableIN declaracionVariableINOUT declaracionVariableOUT declaracionVariableVAR sentenciaSecuenciaBEGIN END ID . .)
    $end            reduce using rule 3 (modulo -> MODULE ID ; declaracionTipoPuntoComa declaracionConstanteCONST declaracionVariableIN declaracionVariableINOUT declaracionVariableOUT declaracionVariableVAR sentenciaSecuenciaBEGIN END ID . .)


state 197

    (86) sentenciaPuntoComaR -> sentenciaPuntoComaR ; . sentencia
    (77) sentencia -> . empty
    (78) sentencia -> . sentenciaPara
    (79) sentencia -> . sentenciaSi
    (80) sentencia -> . asignacionUnidad
    (81) sentencia -> . asignacion
    (138) empty -> .
    (76) sentenciaPara -> . FOR ID DOSPUNTOSIGUAL expresion DOBLEPUNTO expresion DO sentenciaSecuencia END
    (69) sentenciaSi -> . IF relacion THEN sentenciaSecuencia sentenciaSiSino sentenciaSiEntonces END
    (137) asignacionUnidad -> . ID selector ( listaExpresiones )
    (60) asignacion -> . ID selector DOSPUNTOSIGUAL condicion | expresion
    (61) asignacion -> . ID selector DOSPUNTOSIGUAL expresion
    ;               reduce using rule 138 (empty -> .)
    END             reduce using rule 138 (empty -> .)
    ELSIF           reduce using rule 138 (empty -> .)
    ELSE            reduce using rule 138 (empty -> .)
    FOR             shift and go to state 148
    IF              shift and go to state 150
    ID              shift and go to state 149

    sentencia                      shift and go to state 224
    empty                          shift and go to state 143
    sentenciaPara                  shift and go to state 144
    sentenciaSi                    shift and go to state 145
    asignacionUnidad               shift and go to state 146
    asignacion                     shift and go to state 147

state 198

    (85) sentenciaPuntoComaR -> ; sentencia .
    ;               reduce using rule 85 (sentenciaPuntoComaR -> ; sentencia .)
    END             reduce using rule 85 (sentenciaPuntoComaR -> ; sentencia .)
    ELSIF           reduce using rule 85 (sentenciaPuntoComaR -> ; sentencia .)
    ELSE            reduce using rule 85 (sentenciaPuntoComaR -> ; sentencia .)


state 199

    (76) sentenciaPara -> FOR ID DOSPUNTOSIGUAL . expresion DOBLEPUNTO expresion DO sentenciaSecuencia END
    (53) expresion -> . termino terminoMasMenos
    (44) termino -> . factor terminoOperadores
    (32) factor -> . SR ( expresion , expresion )
    (33) factor -> . LATCH ( expresion , expresion )
    (34) factor -> . REG ( expresionComaO expresion )
    (35) factor -> . MUX ( expresion , expresion : expresion , expresion , expresion , expresion )
    (36) factor -> . MUX ( expresion : expresion , expresion )
    (37) factor -> . ( expresion )
    (38) factor -> . ~ factor
    (39) factor -> . INTEGER
    (40) factor -> . LOGICVALUE
    (41) factor -> . ID selector
    SR              shift and go to state 58
    LATCH           shift and go to state 60
    REG             shift and go to state 61
    MUX             shift and go to state 62
    (               shift and go to state 59
    ~               shift and go to state 63
    INTEGER         shift and go to state 64
    LOGICVALUE      shift and go to state 65
    ID              shift and go to state 54

    expresion                      shift and go to state 225
    termino                        shift and go to state 56
    factor                         shift and go to state 57

state 200

    (137) asignacionUnidad -> ID selector ( . listaExpresiones )
    (11) listaExpresiones -> . expresion
    (12) listaExpresiones -> . listaExpresiones , expresion
    (53) expresion -> . termino terminoMasMenos
    (44) termino -> . factor terminoOperadores
    (32) factor -> . SR ( expresion , expresion )
    (33) factor -> . LATCH ( expresion , expresion )
    (34) factor -> . REG ( expresionComaO expresion )
    (35) factor -> . MUX ( expresion , expresion : expresion , expresion , expresion , expresion )
    (36) factor -> . MUX ( expresion : expresion , expresion )
    (37) factor -> . ( expresion )
    (38) factor -> . ~ factor
    (39) factor -> . INTEGER
    (40) factor -> . LOGICVALUE
    (41) factor -> . ID selector
    SR              shift and go to state 58
    LATCH           shift and go to state 60
    REG             shift and go to state 61
    MUX             shift and go to state 62
    (               shift and go to state 59
    ~               shift and go to state 63
    INTEGER         shift and go to state 64
    LOGICVALUE      shift and go to state 65
    ID              shift and go to state 54

    listaExpresiones               shift and go to state 226
    expresion                      shift and go to state 182
    termino                        shift and go to state 56
    factor                         shift and go to state 57

state 201

    (60) asignacion -> ID selector DOSPUNTOSIGUAL . condicion | expresion
    (61) asignacion -> ID selector DOSPUNTOSIGUAL . expresion
    (62) condicion -> . expresion
    (53) expresion -> . termino terminoMasMenos
    (44) termino -> . factor terminoOperadores
    (32) factor -> . SR ( expresion , expresion )
    (33) factor -> . LATCH ( expresion , expresion )
    (34) factor -> . REG ( expresionComaO expresion )
    (35) factor -> . MUX ( expresion , expresion : expresion , expresion , expresion , expresion )
    (36) factor -> . MUX ( expresion : expresion , expresion )
    (37) factor -> . ( expresion )
    (38) factor -> . ~ factor
    (39) factor -> . INTEGER
    (40) factor -> . LOGICVALUE
    (41) factor -> . ID selector
    SR              shift and go to state 58
    LATCH           shift and go to state 60
    REG             shift and go to state 61
    MUX             shift and go to state 62
    (               shift and go to state 59
    ~               shift and go to state 63
    INTEGER         shift and go to state 64
    LOGICVALUE      shift and go to state 65
    ID              shift and go to state 54

    condicion                      shift and go to state 227
    expresion                      shift and go to state 228
    termino                        shift and go to state 56
    factor                         shift and go to state 57

state 202

    (69) sentenciaSi -> IF relacion THEN . sentenciaSecuencia sentenciaSiSino sentenciaSiEntonces END
    (82) sentenciaSecuencia -> . sentencia sentenciaPuntoComa
    (77) sentencia -> . empty
    (78) sentencia -> . sentenciaPara
    (79) sentencia -> . sentenciaSi
    (80) sentencia -> . asignacionUnidad
    (81) sentencia -> . asignacion
    (138) empty -> .
    (76) sentenciaPara -> . FOR ID DOSPUNTOSIGUAL expresion DOBLEPUNTO expresion DO sentenciaSecuencia END
    (69) sentenciaSi -> . IF relacion THEN sentenciaSecuencia sentenciaSiSino sentenciaSiEntonces END
    (137) asignacionUnidad -> . ID selector ( listaExpresiones )
    (60) asignacion -> . ID selector DOSPUNTOSIGUAL condicion | expresion
    (61) asignacion -> . ID selector DOSPUNTOSIGUAL expresion
    ;               reduce using rule 138 (empty -> .)
    ELSIF           reduce using rule 138 (empty -> .)
    ELSE            reduce using rule 138 (empty -> .)
    END             reduce using rule 138 (empty -> .)
    FOR             shift and go to state 148
    IF              shift and go to state 150
    ID              shift and go to state 149

    sentenciaSecuencia             shift and go to state 229
    sentencia                      shift and go to state 142
    empty                          shift and go to state 143
    sentenciaPara                  shift and go to state 144
    sentenciaSi                    shift and go to state 145
    asignacionUnidad               shift and go to state 146
    asignacion                     shift and go to state 147

state 203

    (63) relacion -> expresion MAYORIGUAL . expresion
    (53) expresion -> . termino terminoMasMenos
    (44) termino -> . factor terminoOperadores
    (32) factor -> . SR ( expresion , expresion )
    (33) factor -> . LATCH ( expresion , expresion )
    (34) factor -> . REG ( expresionComaO expresion )
    (35) factor -> . MUX ( expresion , expresion : expresion , expresion , expresion , expresion )
    (36) factor -> . MUX ( expresion : expresion , expresion )
    (37) factor -> . ( expresion )
    (38) factor -> . ~ factor
    (39) factor -> . INTEGER
    (40) factor -> . LOGICVALUE
    (41) factor -> . ID selector
    SR              shift and go to state 58
    LATCH           shift and go to state 60
    REG             shift and go to state 61
    MUX             shift and go to state 62
    (               shift and go to state 59
    ~               shift and go to state 63
    INTEGER         shift and go to state 64
    LOGICVALUE      shift and go to state 65
    ID              shift and go to state 54

    expresion                      shift and go to state 230
    termino                        shift and go to state 56
    factor                         shift and go to state 57

state 204

    (64) relacion -> expresion > . expresion
    (53) expresion -> . termino terminoMasMenos
    (44) termino -> . factor terminoOperadores
    (32) factor -> . SR ( expresion , expresion )
    (33) factor -> . LATCH ( expresion , expresion )
    (34) factor -> . REG ( expresionComaO expresion )
    (35) factor -> . MUX ( expresion , expresion : expresion , expresion , expresion , expresion )
    (36) factor -> . MUX ( expresion : expresion , expresion )
    (37) factor -> . ( expresion )
    (38) factor -> . ~ factor
    (39) factor -> . INTEGER
    (40) factor -> . LOGICVALUE
    (41) factor -> . ID selector
    SR              shift and go to state 58
    LATCH           shift and go to state 60
    REG             shift and go to state 61
    MUX             shift and go to state 62
    (               shift and go to state 59
    ~               shift and go to state 63
    INTEGER         shift and go to state 64
    LOGICVALUE      shift and go to state 65
    ID              shift and go to state 54

    expresion                      shift and go to state 231
    termino                        shift and go to state 56
    factor                         shift and go to state 57

state 205

    (65) relacion -> expresion MENORIGUAL . expresion
    (53) expresion -> . termino terminoMasMenos
    (44) termino -> . factor terminoOperadores
    (32) factor -> . SR ( expresion , expresion )
    (33) factor -> . LATCH ( expresion , expresion )
    (34) factor -> . REG ( expresionComaO expresion )
    (35) factor -> . MUX ( expresion , expresion : expresion , expresion , expresion , expresion )
    (36) factor -> . MUX ( expresion : expresion , expresion )
    (37) factor -> . ( expresion )
    (38) factor -> . ~ factor
    (39) factor -> . INTEGER
    (40) factor -> . LOGICVALUE
    (41) factor -> . ID selector
    SR              shift and go to state 58
    LATCH           shift and go to state 60
    REG             shift and go to state 61
    MUX             shift and go to state 62
    (               shift and go to state 59
    ~               shift and go to state 63
    INTEGER         shift and go to state 64
    LOGICVALUE      shift and go to state 65
    ID              shift and go to state 54

    expresion                      shift and go to state 232
    termino                        shift and go to state 56
    factor                         shift and go to state 57

state 206

    (66) relacion -> expresion < . expresion
    (53) expresion -> . termino terminoMasMenos
    (44) termino -> . factor terminoOperadores
    (32) factor -> . SR ( expresion , expresion )
    (33) factor -> . LATCH ( expresion , expresion )
    (34) factor -> . REG ( expresionComaO expresion )
    (35) factor -> . MUX ( expresion , expresion : expresion , expresion , expresion , expresion )
    (36) factor -> . MUX ( expresion : expresion , expresion )
    (37) factor -> . ( expresion )
    (38) factor -> . ~ factor
    (39) factor -> . INTEGER
    (40) factor -> . LOGICVALUE
    (41) factor -> . ID selector
    SR              shift and go to state 58
    LATCH           shift and go to state 60
    REG             shift and go to state 61
    MUX             shift and go to state 62
    (               shift and go to state 59
    ~               shift and go to state 63
    INTEGER         shift and go to state 64
    LOGICVALUE      shift and go to state 65
    ID              shift and go to state 54

    expresion                      shift and go to state 233
    termino                        shift and go to state 56
    factor                         shift and go to state 57

state 207

    (67) relacion -> expresion # . expresion
    (53) expresion -> . termino terminoMasMenos
    (44) termino -> . factor terminoOperadores
    (32) factor -> . SR ( expresion , expresion )
    (33) factor -> . LATCH ( expresion , expresion )
    (34) factor -> . REG ( expresionComaO expresion )
    (35) factor -> . MUX ( expresion , expresion : expresion , expresion , expresion , expresion )
    (36) factor -> . MUX ( expresion : expresion , expresion )
    (37) factor -> . ( expresion )
    (38) factor -> . ~ factor
    (39) factor -> . INTEGER
    (40) factor -> . LOGICVALUE
    (41) factor -> . ID selector
    SR              shift and go to state 58
    LATCH           shift and go to state 60
    REG             shift and go to state 61
    MUX             shift and go to state 62
    (               shift and go to state 59
    ~               shift and go to state 63
    INTEGER         shift and go to state 64
    LOGICVALUE      shift and go to state 65
    ID              shift and go to state 54

    expresion                      shift and go to state 234
    termino                        shift and go to state 56
    factor                         shift and go to state 57

state 208

    (68) relacion -> expresion = . expresion
    (53) expresion -> . termino terminoMasMenos
    (44) termino -> . factor terminoOperadores
    (32) factor -> . SR ( expresion , expresion )
    (33) factor -> . LATCH ( expresion , expresion )
    (34) factor -> . REG ( expresionComaO expresion )
    (35) factor -> . MUX ( expresion , expresion : expresion , expresion , expresion , expresion )
    (36) factor -> . MUX ( expresion : expresion , expresion )
    (37) factor -> . ( expresion )
    (38) factor -> . ~ factor
    (39) factor -> . INTEGER
    (40) factor -> . LOGICVALUE
    (41) factor -> . ID selector
    SR              shift and go to state 58
    LATCH           shift and go to state 60
    REG             shift and go to state 61
    MUX             shift and go to state 62
    (               shift and go to state 59
    ~               shift and go to state 63
    INTEGER         shift and go to state 64
    LOGICVALUE      shift and go to state 65
    ID              shift and go to state 54

    expresion                      shift and go to state 235
    termino                        shift and go to state 56
    factor                         shift and go to state 57

state 209

    (6) conjuntoExpresiones -> ( listaExpresiones ) .
    ;               reduce using rule 6 (conjuntoExpresiones -> ( listaExpresiones ) .)


state 210

    (12) listaExpresiones -> listaExpresiones , . expresion
    (53) expresion -> . termino terminoMasMenos
    (44) termino -> . factor terminoOperadores
    (32) factor -> . SR ( expresion , expresion )
    (33) factor -> . LATCH ( expresion , expresion )
    (34) factor -> . REG ( expresionComaO expresion )
    (35) factor -> . MUX ( expresion , expresion : expresion , expresion , expresion , expresion )
    (36) factor -> . MUX ( expresion : expresion , expresion )
    (37) factor -> . ( expresion )
    (38) factor -> . ~ factor
    (39) factor -> . INTEGER
    (40) factor -> . LOGICVALUE
    (41) factor -> . ID selector
    SR              shift and go to state 58
    LATCH           shift and go to state 60
    REG             shift and go to state 61
    MUX             shift and go to state 62
    (               shift and go to state 59
    ~               shift and go to state 63
    INTEGER         shift and go to state 64
    LOGICVALUE      shift and go to state 65
    ID              shift and go to state 54

    expresion                      shift and go to state 236
    termino                        shift and go to state 56
    factor                         shift and go to state 57

state 211

    (32) factor -> SR ( expresion , expresion ) .
    MOD             reduce using rule 32 (factor -> SR ( expresion , expresion ) .)
    DIV             reduce using rule 32 (factor -> SR ( expresion , expresion ) .)
    /               reduce using rule 32 (factor -> SR ( expresion , expresion ) .)
    *               reduce using rule 32 (factor -> SR ( expresion , expresion ) .)
    -               reduce using rule 32 (factor -> SR ( expresion , expresion ) .)
    +               reduce using rule 32 (factor -> SR ( expresion , expresion ) .)
    ;               reduce using rule 32 (factor -> SR ( expresion , expresion ) .)
    )               reduce using rule 32 (factor -> SR ( expresion , expresion ) .)
    ]               reduce using rule 32 (factor -> SR ( expresion , expresion ) .)
    ,               reduce using rule 32 (factor -> SR ( expresion , expresion ) .)
    :               reduce using rule 32 (factor -> SR ( expresion , expresion ) .)
    MAYORIGUAL      reduce using rule 32 (factor -> SR ( expresion , expresion ) .)
    >               reduce using rule 32 (factor -> SR ( expresion , expresion ) .)
    MENORIGUAL      reduce using rule 32 (factor -> SR ( expresion , expresion ) .)
    <               reduce using rule 32 (factor -> SR ( expresion , expresion ) .)
    #               reduce using rule 32 (factor -> SR ( expresion , expresion ) .)
    =               reduce using rule 32 (factor -> SR ( expresion , expresion ) .)
    DOBLEPUNTO      reduce using rule 32 (factor -> SR ( expresion , expresion ) .)
    END             reduce using rule 32 (factor -> SR ( expresion , expresion ) .)
    ELSIF           reduce using rule 32 (factor -> SR ( expresion , expresion ) .)
    ELSE            reduce using rule 32 (factor -> SR ( expresion , expresion ) .)
    |               reduce using rule 32 (factor -> SR ( expresion , expresion ) .)
    THEN            reduce using rule 32 (factor -> SR ( expresion , expresion ) .)
    DO              reduce using rule 32 (factor -> SR ( expresion , expresion ) .)


state 212

    (33) factor -> LATCH ( expresion , expresion ) .
    MOD             reduce using rule 33 (factor -> LATCH ( expresion , expresion ) .)
    DIV             reduce using rule 33 (factor -> LATCH ( expresion , expresion ) .)
    /               reduce using rule 33 (factor -> LATCH ( expresion , expresion ) .)
    *               reduce using rule 33 (factor -> LATCH ( expresion , expresion ) .)
    -               reduce using rule 33 (factor -> LATCH ( expresion , expresion ) .)
    +               reduce using rule 33 (factor -> LATCH ( expresion , expresion ) .)
    ;               reduce using rule 33 (factor -> LATCH ( expresion , expresion ) .)
    )               reduce using rule 33 (factor -> LATCH ( expresion , expresion ) .)
    ]               reduce using rule 33 (factor -> LATCH ( expresion , expresion ) .)
    ,               reduce using rule 33 (factor -> LATCH ( expresion , expresion ) .)
    :               reduce using rule 33 (factor -> LATCH ( expresion , expresion ) .)
    MAYORIGUAL      reduce using rule 33 (factor -> LATCH ( expresion , expresion ) .)
    >               reduce using rule 33 (factor -> LATCH ( expresion , expresion ) .)
    MENORIGUAL      reduce using rule 33 (factor -> LATCH ( expresion , expresion ) .)
    <               reduce using rule 33 (factor -> LATCH ( expresion , expresion ) .)
    #               reduce using rule 33 (factor -> LATCH ( expresion , expresion ) .)
    =               reduce using rule 33 (factor -> LATCH ( expresion , expresion ) .)
    DOBLEPUNTO      reduce using rule 33 (factor -> LATCH ( expresion , expresion ) .)
    END             reduce using rule 33 (factor -> LATCH ( expresion , expresion ) .)
    ELSIF           reduce using rule 33 (factor -> LATCH ( expresion , expresion ) .)
    ELSE            reduce using rule 33 (factor -> LATCH ( expresion , expresion ) .)
    |               reduce using rule 33 (factor -> LATCH ( expresion , expresion ) .)
    THEN            reduce using rule 33 (factor -> LATCH ( expresion , expresion ) .)
    DO              reduce using rule 33 (factor -> LATCH ( expresion , expresion ) .)


state 213

    (35) factor -> MUX ( expresion , expresion : . expresion , expresion , expresion , expresion )
    (53) expresion -> . termino terminoMasMenos
    (44) termino -> . factor terminoOperadores
    (32) factor -> . SR ( expresion , expresion )
    (33) factor -> . LATCH ( expresion , expresion )
    (34) factor -> . REG ( expresionComaO expresion )
    (35) factor -> . MUX ( expresion , expresion : expresion , expresion , expresion , expresion )
    (36) factor -> . MUX ( expresion : expresion , expresion )
    (37) factor -> . ( expresion )
    (38) factor -> . ~ factor
    (39) factor -> . INTEGER
    (40) factor -> . LOGICVALUE
    (41) factor -> . ID selector
    SR              shift and go to state 58
    LATCH           shift and go to state 60
    REG             shift and go to state 61
    MUX             shift and go to state 62
    (               shift and go to state 59
    ~               shift and go to state 63
    INTEGER         shift and go to state 64
    LOGICVALUE      shift and go to state 65
    ID              shift and go to state 54

    expresion                      shift and go to state 237
    termino                        shift and go to state 56
    factor                         shift and go to state 57

state 214

    (36) factor -> MUX ( expresion : expresion , . expresion )
    (53) expresion -> . termino terminoMasMenos
    (44) termino -> . factor terminoOperadores
    (32) factor -> . SR ( expresion , expresion )
    (33) factor -> . LATCH ( expresion , expresion )
    (34) factor -> . REG ( expresionComaO expresion )
    (35) factor -> . MUX ( expresion , expresion : expresion , expresion , expresion , expresion )
    (36) factor -> . MUX ( expresion : expresion , expresion )
    (37) factor -> . ( expresion )
    (38) factor -> . ~ factor
    (39) factor -> . INTEGER
    (40) factor -> . LOGICVALUE
    (41) factor -> . ID selector
    SR              shift and go to state 58
    LATCH           shift and go to state 60
    REG             shift and go to state 61
    MUX             shift and go to state 62
    (               shift and go to state 59
    ~               shift and go to state 63
    INTEGER         shift and go to state 64
    LOGICVALUE      shift and go to state 65
    ID              shift and go to state 54

    expresion                      shift and go to state 238
    termino                        shift and go to state 56
    factor                         shift and go to state 57

state 215

    (120) declaracionTipo -> TYPE ID simboloPor listaIdParentesis ; declaracionConstanteCONST tipoFormalIN tipoFormlINOUT declaracionVariableOUT declaracionVariableVAR . sentenciaSecuenciaBEGIN END ID
    (105) sentenciaSecuenciaBEGIN -> . empty
    (106) sentenciaSecuenciaBEGIN -> . BEGIN sentenciaSecuencia
    (138) empty -> .
    BEGIN           shift and go to state 110
    END             reduce using rule 138 (empty -> .)

    sentenciaSecuenciaBEGIN        shift and go to state 239
    empty                          shift and go to state 109

state 216

    (136) tipoFormlBuslistaIdR -> tipoFormlBuslistaIdR listaId . : tipoFormalBus ;
    :               shift and go to state 240


state 217

    (135) tipoFormlBuslistaIdR -> listaId : . tipoFormalBus ;
    (118) tipoFormalBus -> . expresionCorcheteO OC
    (119) tipoFormalBus -> . expresionCorcheteO TS
    (112) expresionCorcheteO -> . empty
    (113) expresionCorcheteO -> . expresionCorcheteOR
    (138) empty -> .
    (114) expresionCorcheteOR -> . [ expresionOpcional ]
    (115) expresionCorcheteOR -> . expresionCorcheteOR [ expresionOpcional ]
    OC              reduce using rule 138 (empty -> .)
    TS              reduce using rule 138 (empty -> .)
    [               shift and go to state 223

    tipoFormalBus                  shift and go to state 241
    expresionCorcheteO             shift and go to state 242
    empty                          shift and go to state 221
    expresionCorcheteOR            shift and go to state 222

state 218

    (130) tipoFormallistaIdR -> tipoFormallistaIdR listaId : . tipoFormal ;
    (111) tipoFormal -> . expresionCorcheteO BIT
    (112) expresionCorcheteO -> . empty
    (113) expresionCorcheteO -> . expresionCorcheteOR
    (138) empty -> .
    (114) expresionCorcheteOR -> . [ expresionOpcional ]
    (115) expresionCorcheteOR -> . expresionCorcheteOR [ expresionOpcional ]
    BIT             reduce using rule 138 (empty -> .)
    [               shift and go to state 223

    tipoFormal                     shift and go to state 243
    expresionCorcheteO             shift and go to state 220
    empty                          shift and go to state 221
    expresionCorcheteOR            shift and go to state 222

state 219

    (129) tipoFormallistaIdR -> listaId : tipoFormal . ;
    ;               shift and go to state 244


state 220

    (111) tipoFormal -> expresionCorcheteO . BIT
    BIT             shift and go to state 245


state 221

    (112) expresionCorcheteO -> empty .
    BIT             reduce using rule 112 (expresionCorcheteO -> empty .)
    OC              reduce using rule 112 (expresionCorcheteO -> empty .)
    TS              reduce using rule 112 (expresionCorcheteO -> empty .)


state 222

    (113) expresionCorcheteO -> expresionCorcheteOR .
    (115) expresionCorcheteOR -> expresionCorcheteOR . [ expresionOpcional ]
    BIT             reduce using rule 113 (expresionCorcheteO -> expresionCorcheteOR .)
    OC              reduce using rule 113 (expresionCorcheteO -> expresionCorcheteOR .)
    TS              reduce using rule 113 (expresionCorcheteO -> expresionCorcheteOR .)
    [               shift and go to state 246


state 223

    (114) expresionCorcheteOR -> [ . expresionOpcional ]
    (116) expresionOpcional -> . empty
    (117) expresionOpcional -> . expresion
    (138) empty -> .
    (53) expresion -> . termino terminoMasMenos
    (44) termino -> . factor terminoOperadores
    (32) factor -> . SR ( expresion , expresion )
    (33) factor -> . LATCH ( expresion , expresion )
    (34) factor -> . REG ( expresionComaO expresion )
    (35) factor -> . MUX ( expresion , expresion : expresion , expresion , expresion , expresion )
    (36) factor -> . MUX ( expresion : expresion , expresion )
    (37) factor -> . ( expresion )
    (38) factor -> . ~ factor
    (39) factor -> . INTEGER
    (40) factor -> . LOGICVALUE
    (41) factor -> . ID selector
    ]               reduce using rule 138 (empty -> .)
    SR              shift and go to state 58
    LATCH           shift and go to state 60
    REG             shift and go to state 61
    MUX             shift and go to state 62
    (               shift and go to state 59
    ~               shift and go to state 63
    INTEGER         shift and go to state 64
    LOGICVALUE      shift and go to state 65
    ID              shift and go to state 54

    expresionOpcional              shift and go to state 247
    empty                          shift and go to state 248
    expresion                      shift and go to state 249
    termino                        shift and go to state 56
    factor                         shift and go to state 57

state 224

    (86) sentenciaPuntoComaR -> sentenciaPuntoComaR ; sentencia .
    ;               reduce using rule 86 (sentenciaPuntoComaR -> sentenciaPuntoComaR ; sentencia .)
    END             reduce using rule 86 (sentenciaPuntoComaR -> sentenciaPuntoComaR ; sentencia .)
    ELSIF           reduce using rule 86 (sentenciaPuntoComaR -> sentenciaPuntoComaR ; sentencia .)
    ELSE            reduce using rule 86 (sentenciaPuntoComaR -> sentenciaPuntoComaR ; sentencia .)


state 225

    (76) sentenciaPara -> FOR ID DOSPUNTOSIGUAL expresion . DOBLEPUNTO expresion DO sentenciaSecuencia END
    DOBLEPUNTO      shift and go to state 250


state 226

    (137) asignacionUnidad -> ID selector ( listaExpresiones . )
    (12) listaExpresiones -> listaExpresiones . , expresion
    )               shift and go to state 251
    ,               shift and go to state 210


state 227

    (60) asignacion -> ID selector DOSPUNTOSIGUAL condicion . | expresion
    |               shift and go to state 252


state 228

    (61) asignacion -> ID selector DOSPUNTOSIGUAL expresion .
    (62) condicion -> expresion .
    ;               reduce using rule 61 (asignacion -> ID selector DOSPUNTOSIGUAL expresion .)
    END             reduce using rule 61 (asignacion -> ID selector DOSPUNTOSIGUAL expresion .)
    ELSIF           reduce using rule 61 (asignacion -> ID selector DOSPUNTOSIGUAL expresion .)
    ELSE            reduce using rule 61 (asignacion -> ID selector DOSPUNTOSIGUAL expresion .)
    |               reduce using rule 62 (condicion -> expresion .)


state 229

    (69) sentenciaSi -> IF relacion THEN sentenciaSecuencia . sentenciaSiSino sentenciaSiEntonces END
    (70) sentenciaSiSino -> . empty
    (71) sentenciaSiSino -> . sentenciaSiSinoR
    (138) empty -> .
    (72) sentenciaSiSinoR -> . ELSIF relacion THEN sentenciaSecuencia
    (73) sentenciaSiSinoR -> . sentenciaSiSinoR ELSIF relacion THEN sentenciaSecuencia
    ELSE            reduce using rule 138 (empty -> .)
    END             reduce using rule 138 (empty -> .)
    ELSIF           shift and go to state 256

    sentenciaSiSino                shift and go to state 253
    empty                          shift and go to state 254
    sentenciaSiSinoR               shift and go to state 255

state 230

    (63) relacion -> expresion MAYORIGUAL expresion .
    THEN            reduce using rule 63 (relacion -> expresion MAYORIGUAL expresion .)


state 231

    (64) relacion -> expresion > expresion .
    THEN            reduce using rule 64 (relacion -> expresion > expresion .)


state 232

    (65) relacion -> expresion MENORIGUAL expresion .
    THEN            reduce using rule 65 (relacion -> expresion MENORIGUAL expresion .)


state 233

    (66) relacion -> expresion < expresion .
    THEN            reduce using rule 66 (relacion -> expresion < expresion .)


state 234

    (67) relacion -> expresion # expresion .
    THEN            reduce using rule 67 (relacion -> expresion # expresion .)


state 235

    (68) relacion -> expresion = expresion .
    THEN            reduce using rule 68 (relacion -> expresion = expresion .)


state 236

    (12) listaExpresiones -> listaExpresiones , expresion .
    )               reduce using rule 12 (listaExpresiones -> listaExpresiones , expresion .)
    ,               reduce using rule 12 (listaExpresiones -> listaExpresiones , expresion .)


state 237

    (35) factor -> MUX ( expresion , expresion : expresion . , expresion , expresion , expresion )
    ,               shift and go to state 257


state 238

    (36) factor -> MUX ( expresion : expresion , expresion . )
    )               shift and go to state 258


state 239

    (120) declaracionTipo -> TYPE ID simboloPor listaIdParentesis ; declaracionConstanteCONST tipoFormalIN tipoFormlINOUT declaracionVariableOUT declaracionVariableVAR sentenciaSecuenciaBEGIN . END ID
    END             shift and go to state 259


state 240

    (136) tipoFormlBuslistaIdR -> tipoFormlBuslistaIdR listaId : . tipoFormalBus ;
    (118) tipoFormalBus -> . expresionCorcheteO OC
    (119) tipoFormalBus -> . expresionCorcheteO TS
    (112) expresionCorcheteO -> . empty
    (113) expresionCorcheteO -> . expresionCorcheteOR
    (138) empty -> .
    (114) expresionCorcheteOR -> . [ expresionOpcional ]
    (115) expresionCorcheteOR -> . expresionCorcheteOR [ expresionOpcional ]
    OC              reduce using rule 138 (empty -> .)
    TS              reduce using rule 138 (empty -> .)
    [               shift and go to state 223

    tipoFormalBus                  shift and go to state 260
    expresionCorcheteO             shift and go to state 242
    empty                          shift and go to state 221
    expresionCorcheteOR            shift and go to state 222

state 241

    (135) tipoFormlBuslistaIdR -> listaId : tipoFormalBus . ;
    ;               shift and go to state 261


state 242

    (118) tipoFormalBus -> expresionCorcheteO . OC
    (119) tipoFormalBus -> expresionCorcheteO . TS
    OC              shift and go to state 262
    TS              shift and go to state 263


state 243

    (130) tipoFormallistaIdR -> tipoFormallistaIdR listaId : tipoFormal . ;
    ;               shift and go to state 264


state 244

    (129) tipoFormallistaIdR -> listaId : tipoFormal ; .
    ID              reduce using rule 129 (tipoFormallistaIdR -> listaId : tipoFormal ; .)
    INOUT           reduce using rule 129 (tipoFormallistaIdR -> listaId : tipoFormal ; .)
    OUT             reduce using rule 129 (tipoFormallistaIdR -> listaId : tipoFormal ; .)
    VAR             reduce using rule 129 (tipoFormallistaIdR -> listaId : tipoFormal ; .)
    BEGIN           reduce using rule 129 (tipoFormallistaIdR -> listaId : tipoFormal ; .)
    END             reduce using rule 129 (tipoFormallistaIdR -> listaId : tipoFormal ; .)


state 245

    (111) tipoFormal -> expresionCorcheteO BIT .
    ;               reduce using rule 111 (tipoFormal -> expresionCorcheteO BIT .)


state 246

    (115) expresionCorcheteOR -> expresionCorcheteOR [ . expresionOpcional ]
    (116) expresionOpcional -> . empty
    (117) expresionOpcional -> . expresion
    (138) empty -> .
    (53) expresion -> . termino terminoMasMenos
    (44) termino -> . factor terminoOperadores
    (32) factor -> . SR ( expresion , expresion )
    (33) factor -> . LATCH ( expresion , expresion )
    (34) factor -> . REG ( expresionComaO expresion )
    (35) factor -> . MUX ( expresion , expresion : expresion , expresion , expresion , expresion )
    (36) factor -> . MUX ( expresion : expresion , expresion )
    (37) factor -> . ( expresion )
    (38) factor -> . ~ factor
    (39) factor -> . INTEGER
    (40) factor -> . LOGICVALUE
    (41) factor -> . ID selector
    ]               reduce using rule 138 (empty -> .)
    SR              shift and go to state 58
    LATCH           shift and go to state 60
    REG             shift and go to state 61
    MUX             shift and go to state 62
    (               shift and go to state 59
    ~               shift and go to state 63
    INTEGER         shift and go to state 64
    LOGICVALUE      shift and go to state 65
    ID              shift and go to state 54

    expresionOpcional              shift and go to state 265
    empty                          shift and go to state 248
    expresion                      shift and go to state 249
    termino                        shift and go to state 56
    factor                         shift and go to state 57

state 247

    (114) expresionCorcheteOR -> [ expresionOpcional . ]
    ]               shift and go to state 266


state 248

    (116) expresionOpcional -> empty .
    ]               reduce using rule 116 (expresionOpcional -> empty .)


state 249

    (117) expresionOpcional -> expresion .
    ]               reduce using rule 117 (expresionOpcional -> expresion .)


state 250

    (76) sentenciaPara -> FOR ID DOSPUNTOSIGUAL expresion DOBLEPUNTO . expresion DO sentenciaSecuencia END
    (53) expresion -> . termino terminoMasMenos
    (44) termino -> . factor terminoOperadores
    (32) factor -> . SR ( expresion , expresion )
    (33) factor -> . LATCH ( expresion , expresion )
    (34) factor -> . REG ( expresionComaO expresion )
    (35) factor -> . MUX ( expresion , expresion : expresion , expresion , expresion , expresion )
    (36) factor -> . MUX ( expresion : expresion , expresion )
    (37) factor -> . ( expresion )
    (38) factor -> . ~ factor
    (39) factor -> . INTEGER
    (40) factor -> . LOGICVALUE
    (41) factor -> . ID selector
    SR              shift and go to state 58
    LATCH           shift and go to state 60
    REG             shift and go to state 61
    MUX             shift and go to state 62
    (               shift and go to state 59
    ~               shift and go to state 63
    INTEGER         shift and go to state 64
    LOGICVALUE      shift and go to state 65
    ID              shift and go to state 54

    expresion                      shift and go to state 267
    termino                        shift and go to state 56
    factor                         shift and go to state 57

state 251

    (137) asignacionUnidad -> ID selector ( listaExpresiones ) .
    ;               reduce using rule 137 (asignacionUnidad -> ID selector ( listaExpresiones ) .)
    END             reduce using rule 137 (asignacionUnidad -> ID selector ( listaExpresiones ) .)
    ELSIF           reduce using rule 137 (asignacionUnidad -> ID selector ( listaExpresiones ) .)
    ELSE            reduce using rule 137 (asignacionUnidad -> ID selector ( listaExpresiones ) .)


state 252

    (60) asignacion -> ID selector DOSPUNTOSIGUAL condicion | . expresion
    (53) expresion -> . termino terminoMasMenos
    (44) termino -> . factor terminoOperadores
    (32) factor -> . SR ( expresion , expresion )
    (33) factor -> . LATCH ( expresion , expresion )
    (34) factor -> . REG ( expresionComaO expresion )
    (35) factor -> . MUX ( expresion , expresion : expresion , expresion , expresion , expresion )
    (36) factor -> . MUX ( expresion : expresion , expresion )
    (37) factor -> . ( expresion )
    (38) factor -> . ~ factor
    (39) factor -> . INTEGER
    (40) factor -> . LOGICVALUE
    (41) factor -> . ID selector
    SR              shift and go to state 58
    LATCH           shift and go to state 60
    REG             shift and go to state 61
    MUX             shift and go to state 62
    (               shift and go to state 59
    ~               shift and go to state 63
    INTEGER         shift and go to state 64
    LOGICVALUE      shift and go to state 65
    ID              shift and go to state 54

    expresion                      shift and go to state 268
    termino                        shift and go to state 56
    factor                         shift and go to state 57

state 253

    (69) sentenciaSi -> IF relacion THEN sentenciaSecuencia sentenciaSiSino . sentenciaSiEntonces END
    (74) sentenciaSiEntonces -> . empty
    (75) sentenciaSiEntonces -> . ELSE sentenciaSecuencia
    (138) empty -> .
    ELSE            shift and go to state 271
    END             reduce using rule 138 (empty -> .)

    sentenciaSiEntonces            shift and go to state 269
    empty                          shift and go to state 270

state 254

    (70) sentenciaSiSino -> empty .
    ELSE            reduce using rule 70 (sentenciaSiSino -> empty .)
    END             reduce using rule 70 (sentenciaSiSino -> empty .)


state 255

    (71) sentenciaSiSino -> sentenciaSiSinoR .
    (73) sentenciaSiSinoR -> sentenciaSiSinoR . ELSIF relacion THEN sentenciaSecuencia
    ELSE            reduce using rule 71 (sentenciaSiSino -> sentenciaSiSinoR .)
    END             reduce using rule 71 (sentenciaSiSino -> sentenciaSiSinoR .)
    ELSIF           shift and go to state 272


state 256

    (72) sentenciaSiSinoR -> ELSIF . relacion THEN sentenciaSecuencia
    (63) relacion -> . expresion MAYORIGUAL expresion
    (64) relacion -> . expresion > expresion
    (65) relacion -> . expresion MENORIGUAL expresion
    (66) relacion -> . expresion < expresion
    (67) relacion -> . expresion # expresion
    (68) relacion -> . expresion = expresion
    (53) expresion -> . termino terminoMasMenos
    (44) termino -> . factor terminoOperadores
    (32) factor -> . SR ( expresion , expresion )
    (33) factor -> . LATCH ( expresion , expresion )
    (34) factor -> . REG ( expresionComaO expresion )
    (35) factor -> . MUX ( expresion , expresion : expresion , expresion , expresion , expresion )
    (36) factor -> . MUX ( expresion : expresion , expresion )
    (37) factor -> . ( expresion )
    (38) factor -> . ~ factor
    (39) factor -> . INTEGER
    (40) factor -> . LOGICVALUE
    (41) factor -> . ID selector
    SR              shift and go to state 58
    LATCH           shift and go to state 60
    REG             shift and go to state 61
    MUX             shift and go to state 62
    (               shift and go to state 59
    ~               shift and go to state 63
    INTEGER         shift and go to state 64
    LOGICVALUE      shift and go to state 65
    ID              shift and go to state 54

    relacion                       shift and go to state 273
    expresion                      shift and go to state 180
    termino                        shift and go to state 56
    factor                         shift and go to state 57

state 257

    (35) factor -> MUX ( expresion , expresion : expresion , . expresion , expresion , expresion )
    (53) expresion -> . termino terminoMasMenos
    (44) termino -> . factor terminoOperadores
    (32) factor -> . SR ( expresion , expresion )
    (33) factor -> . LATCH ( expresion , expresion )
    (34) factor -> . REG ( expresionComaO expresion )
    (35) factor -> . MUX ( expresion , expresion : expresion , expresion , expresion , expresion )
    (36) factor -> . MUX ( expresion : expresion , expresion )
    (37) factor -> . ( expresion )
    (38) factor -> . ~ factor
    (39) factor -> . INTEGER
    (40) factor -> . LOGICVALUE
    (41) factor -> . ID selector
    SR              shift and go to state 58
    LATCH           shift and go to state 60
    REG             shift and go to state 61
    MUX             shift and go to state 62
    (               shift and go to state 59
    ~               shift and go to state 63
    INTEGER         shift and go to state 64
    LOGICVALUE      shift and go to state 65
    ID              shift and go to state 54

    expresion                      shift and go to state 274
    termino                        shift and go to state 56
    factor                         shift and go to state 57

state 258

    (36) factor -> MUX ( expresion : expresion , expresion ) .
    MOD             reduce using rule 36 (factor -> MUX ( expresion : expresion , expresion ) .)
    DIV             reduce using rule 36 (factor -> MUX ( expresion : expresion , expresion ) .)
    /               reduce using rule 36 (factor -> MUX ( expresion : expresion , expresion ) .)
    *               reduce using rule 36 (factor -> MUX ( expresion : expresion , expresion ) .)
    -               reduce using rule 36 (factor -> MUX ( expresion : expresion , expresion ) .)
    +               reduce using rule 36 (factor -> MUX ( expresion : expresion , expresion ) .)
    ;               reduce using rule 36 (factor -> MUX ( expresion : expresion , expresion ) .)
    )               reduce using rule 36 (factor -> MUX ( expresion : expresion , expresion ) .)
    ]               reduce using rule 36 (factor -> MUX ( expresion : expresion , expresion ) .)
    ,               reduce using rule 36 (factor -> MUX ( expresion : expresion , expresion ) .)
    :               reduce using rule 36 (factor -> MUX ( expresion : expresion , expresion ) .)
    MAYORIGUAL      reduce using rule 36 (factor -> MUX ( expresion : expresion , expresion ) .)
    >               reduce using rule 36 (factor -> MUX ( expresion : expresion , expresion ) .)
    MENORIGUAL      reduce using rule 36 (factor -> MUX ( expresion : expresion , expresion ) .)
    <               reduce using rule 36 (factor -> MUX ( expresion : expresion , expresion ) .)
    #               reduce using rule 36 (factor -> MUX ( expresion : expresion , expresion ) .)
    =               reduce using rule 36 (factor -> MUX ( expresion : expresion , expresion ) .)
    DOBLEPUNTO      reduce using rule 36 (factor -> MUX ( expresion : expresion , expresion ) .)
    END             reduce using rule 36 (factor -> MUX ( expresion : expresion , expresion ) .)
    ELSIF           reduce using rule 36 (factor -> MUX ( expresion : expresion , expresion ) .)
    ELSE            reduce using rule 36 (factor -> MUX ( expresion : expresion , expresion ) .)
    |               reduce using rule 36 (factor -> MUX ( expresion : expresion , expresion ) .)
    THEN            reduce using rule 36 (factor -> MUX ( expresion : expresion , expresion ) .)
    DO              reduce using rule 36 (factor -> MUX ( expresion : expresion , expresion ) .)


state 259

    (120) declaracionTipo -> TYPE ID simboloPor listaIdParentesis ; declaracionConstanteCONST tipoFormalIN tipoFormlINOUT declaracionVariableOUT declaracionVariableVAR sentenciaSecuenciaBEGIN END . ID
    ID              shift and go to state 275


state 260

    (136) tipoFormlBuslistaIdR -> tipoFormlBuslistaIdR listaId : tipoFormalBus . ;
    ;               shift and go to state 276


state 261

    (135) tipoFormlBuslistaIdR -> listaId : tipoFormalBus ; .
    ID              reduce using rule 135 (tipoFormlBuslistaIdR -> listaId : tipoFormalBus ; .)
    OUT             reduce using rule 135 (tipoFormlBuslistaIdR -> listaId : tipoFormalBus ; .)
    VAR             reduce using rule 135 (tipoFormlBuslistaIdR -> listaId : tipoFormalBus ; .)
    BEGIN           reduce using rule 135 (tipoFormlBuslistaIdR -> listaId : tipoFormalBus ; .)
    END             reduce using rule 135 (tipoFormlBuslistaIdR -> listaId : tipoFormalBus ; .)


state 262

    (118) tipoFormalBus -> expresionCorcheteO OC .
    ;               reduce using rule 118 (tipoFormalBus -> expresionCorcheteO OC .)


state 263

    (119) tipoFormalBus -> expresionCorcheteO TS .
    ;               reduce using rule 119 (tipoFormalBus -> expresionCorcheteO TS .)


state 264

    (130) tipoFormallistaIdR -> tipoFormallistaIdR listaId : tipoFormal ; .
    ID              reduce using rule 130 (tipoFormallistaIdR -> tipoFormallistaIdR listaId : tipoFormal ; .)
    INOUT           reduce using rule 130 (tipoFormallistaIdR -> tipoFormallistaIdR listaId : tipoFormal ; .)
    OUT             reduce using rule 130 (tipoFormallistaIdR -> tipoFormallistaIdR listaId : tipoFormal ; .)
    VAR             reduce using rule 130 (tipoFormallistaIdR -> tipoFormallistaIdR listaId : tipoFormal ; .)
    BEGIN           reduce using rule 130 (tipoFormallistaIdR -> tipoFormallistaIdR listaId : tipoFormal ; .)
    END             reduce using rule 130 (tipoFormallistaIdR -> tipoFormallistaIdR listaId : tipoFormal ; .)


state 265

    (115) expresionCorcheteOR -> expresionCorcheteOR [ expresionOpcional . ]
    ]               shift and go to state 277


state 266

    (114) expresionCorcheteOR -> [ expresionOpcional ] .
    [               reduce using rule 114 (expresionCorcheteOR -> [ expresionOpcional ] .)
    BIT             reduce using rule 114 (expresionCorcheteOR -> [ expresionOpcional ] .)
    OC              reduce using rule 114 (expresionCorcheteOR -> [ expresionOpcional ] .)
    TS              reduce using rule 114 (expresionCorcheteOR -> [ expresionOpcional ] .)


state 267

    (76) sentenciaPara -> FOR ID DOSPUNTOSIGUAL expresion DOBLEPUNTO expresion . DO sentenciaSecuencia END
    DO              shift and go to state 278


state 268

    (60) asignacion -> ID selector DOSPUNTOSIGUAL condicion | expresion .
    ;               reduce using rule 60 (asignacion -> ID selector DOSPUNTOSIGUAL condicion | expresion .)
    END             reduce using rule 60 (asignacion -> ID selector DOSPUNTOSIGUAL condicion | expresion .)
    ELSIF           reduce using rule 60 (asignacion -> ID selector DOSPUNTOSIGUAL condicion | expresion .)
    ELSE            reduce using rule 60 (asignacion -> ID selector DOSPUNTOSIGUAL condicion | expresion .)


state 269

    (69) sentenciaSi -> IF relacion THEN sentenciaSecuencia sentenciaSiSino sentenciaSiEntonces . END
    END             shift and go to state 279


state 270

    (74) sentenciaSiEntonces -> empty .
    END             reduce using rule 74 (sentenciaSiEntonces -> empty .)


state 271

    (75) sentenciaSiEntonces -> ELSE . sentenciaSecuencia
    (82) sentenciaSecuencia -> . sentencia sentenciaPuntoComa
    (77) sentencia -> . empty
    (78) sentencia -> . sentenciaPara
    (79) sentencia -> . sentenciaSi
    (80) sentencia -> . asignacionUnidad
    (81) sentencia -> . asignacion
    (138) empty -> .
    (76) sentenciaPara -> . FOR ID DOSPUNTOSIGUAL expresion DOBLEPUNTO expresion DO sentenciaSecuencia END
    (69) sentenciaSi -> . IF relacion THEN sentenciaSecuencia sentenciaSiSino sentenciaSiEntonces END
    (137) asignacionUnidad -> . ID selector ( listaExpresiones )
    (60) asignacion -> . ID selector DOSPUNTOSIGUAL condicion | expresion
    (61) asignacion -> . ID selector DOSPUNTOSIGUAL expresion
    ;               reduce using rule 138 (empty -> .)
    END             reduce using rule 138 (empty -> .)
    FOR             shift and go to state 148
    IF              shift and go to state 150
    ID              shift and go to state 149

    sentenciaSecuencia             shift and go to state 280
    sentencia                      shift and go to state 142
    empty                          shift and go to state 143
    sentenciaPara                  shift and go to state 144
    sentenciaSi                    shift and go to state 145
    asignacionUnidad               shift and go to state 146
    asignacion                     shift and go to state 147

state 272

    (73) sentenciaSiSinoR -> sentenciaSiSinoR ELSIF . relacion THEN sentenciaSecuencia
    (63) relacion -> . expresion MAYORIGUAL expresion
    (64) relacion -> . expresion > expresion
    (65) relacion -> . expresion MENORIGUAL expresion
    (66) relacion -> . expresion < expresion
    (67) relacion -> . expresion # expresion
    (68) relacion -> . expresion = expresion
    (53) expresion -> . termino terminoMasMenos
    (44) termino -> . factor terminoOperadores
    (32) factor -> . SR ( expresion , expresion )
    (33) factor -> . LATCH ( expresion , expresion )
    (34) factor -> . REG ( expresionComaO expresion )
    (35) factor -> . MUX ( expresion , expresion : expresion , expresion , expresion , expresion )
    (36) factor -> . MUX ( expresion : expresion , expresion )
    (37) factor -> . ( expresion )
    (38) factor -> . ~ factor
    (39) factor -> . INTEGER
    (40) factor -> . LOGICVALUE
    (41) factor -> . ID selector
    SR              shift and go to state 58
    LATCH           shift and go to state 60
    REG             shift and go to state 61
    MUX             shift and go to state 62
    (               shift and go to state 59
    ~               shift and go to state 63
    INTEGER         shift and go to state 64
    LOGICVALUE      shift and go to state 65
    ID              shift and go to state 54

    relacion                       shift and go to state 281
    expresion                      shift and go to state 180
    termino                        shift and go to state 56
    factor                         shift and go to state 57

state 273

    (72) sentenciaSiSinoR -> ELSIF relacion . THEN sentenciaSecuencia
    THEN            shift and go to state 282


state 274

    (35) factor -> MUX ( expresion , expresion : expresion , expresion . , expresion , expresion )
    ,               shift and go to state 283


state 275

    (120) declaracionTipo -> TYPE ID simboloPor listaIdParentesis ; declaracionConstanteCONST tipoFormalIN tipoFormlINOUT declaracionVariableOUT declaracionVariableVAR sentenciaSecuenciaBEGIN END ID .
    ;               reduce using rule 120 (declaracionTipo -> TYPE ID simboloPor listaIdParentesis ; declaracionConstanteCONST tipoFormalIN tipoFormlINOUT declaracionVariableOUT declaracionVariableVAR sentenciaSecuenciaBEGIN END ID .)


state 276

    (136) tipoFormlBuslistaIdR -> tipoFormlBuslistaIdR listaId : tipoFormalBus ; .
    ID              reduce using rule 136 (tipoFormlBuslistaIdR -> tipoFormlBuslistaIdR listaId : tipoFormalBus ; .)
    OUT             reduce using rule 136 (tipoFormlBuslistaIdR -> tipoFormlBuslistaIdR listaId : tipoFormalBus ; .)
    VAR             reduce using rule 136 (tipoFormlBuslistaIdR -> tipoFormlBuslistaIdR listaId : tipoFormalBus ; .)
    BEGIN           reduce using rule 136 (tipoFormlBuslistaIdR -> tipoFormlBuslistaIdR listaId : tipoFormalBus ; .)
    END             reduce using rule 136 (tipoFormlBuslistaIdR -> tipoFormlBuslistaIdR listaId : tipoFormalBus ; .)


state 277

    (115) expresionCorcheteOR -> expresionCorcheteOR [ expresionOpcional ] .
    [               reduce using rule 115 (expresionCorcheteOR -> expresionCorcheteOR [ expresionOpcional ] .)
    BIT             reduce using rule 115 (expresionCorcheteOR -> expresionCorcheteOR [ expresionOpcional ] .)
    OC              reduce using rule 115 (expresionCorcheteOR -> expresionCorcheteOR [ expresionOpcional ] .)
    TS              reduce using rule 115 (expresionCorcheteOR -> expresionCorcheteOR [ expresionOpcional ] .)


state 278

    (76) sentenciaPara -> FOR ID DOSPUNTOSIGUAL expresion DOBLEPUNTO expresion DO . sentenciaSecuencia END
    (82) sentenciaSecuencia -> . sentencia sentenciaPuntoComa
    (77) sentencia -> . empty
    (78) sentencia -> . sentenciaPara
    (79) sentencia -> . sentenciaSi
    (80) sentencia -> . asignacionUnidad
    (81) sentencia -> . asignacion
    (138) empty -> .
    (76) sentenciaPara -> . FOR ID DOSPUNTOSIGUAL expresion DOBLEPUNTO expresion DO sentenciaSecuencia END
    (69) sentenciaSi -> . IF relacion THEN sentenciaSecuencia sentenciaSiSino sentenciaSiEntonces END
    (137) asignacionUnidad -> . ID selector ( listaExpresiones )
    (60) asignacion -> . ID selector DOSPUNTOSIGUAL condicion | expresion
    (61) asignacion -> . ID selector DOSPUNTOSIGUAL expresion
    ;               reduce using rule 138 (empty -> .)
    END             reduce using rule 138 (empty -> .)
    FOR             shift and go to state 148
    IF              shift and go to state 150
    ID              shift and go to state 149

    sentenciaSecuencia             shift and go to state 284
    sentencia                      shift and go to state 142
    empty                          shift and go to state 143
    sentenciaPara                  shift and go to state 144
    sentenciaSi                    shift and go to state 145
    asignacionUnidad               shift and go to state 146
    asignacion                     shift and go to state 147

state 279

    (69) sentenciaSi -> IF relacion THEN sentenciaSecuencia sentenciaSiSino sentenciaSiEntonces END .
    ;               reduce using rule 69 (sentenciaSi -> IF relacion THEN sentenciaSecuencia sentenciaSiSino sentenciaSiEntonces END .)
    END             reduce using rule 69 (sentenciaSi -> IF relacion THEN sentenciaSecuencia sentenciaSiSino sentenciaSiEntonces END .)
    ELSIF           reduce using rule 69 (sentenciaSi -> IF relacion THEN sentenciaSecuencia sentenciaSiSino sentenciaSiEntonces END .)
    ELSE            reduce using rule 69 (sentenciaSi -> IF relacion THEN sentenciaSecuencia sentenciaSiSino sentenciaSiEntonces END .)


state 280

    (75) sentenciaSiEntonces -> ELSE sentenciaSecuencia .
    END             reduce using rule 75 (sentenciaSiEntonces -> ELSE sentenciaSecuencia .)


state 281

    (73) sentenciaSiSinoR -> sentenciaSiSinoR ELSIF relacion . THEN sentenciaSecuencia
    THEN            shift and go to state 285


state 282

    (72) sentenciaSiSinoR -> ELSIF relacion THEN . sentenciaSecuencia
    (82) sentenciaSecuencia -> . sentencia sentenciaPuntoComa
    (77) sentencia -> . empty
    (78) sentencia -> . sentenciaPara
    (79) sentencia -> . sentenciaSi
    (80) sentencia -> . asignacionUnidad
    (81) sentencia -> . asignacion
    (138) empty -> .
    (76) sentenciaPara -> . FOR ID DOSPUNTOSIGUAL expresion DOBLEPUNTO expresion DO sentenciaSecuencia END
    (69) sentenciaSi -> . IF relacion THEN sentenciaSecuencia sentenciaSiSino sentenciaSiEntonces END
    (137) asignacionUnidad -> . ID selector ( listaExpresiones )
    (60) asignacion -> . ID selector DOSPUNTOSIGUAL condicion | expresion
    (61) asignacion -> . ID selector DOSPUNTOSIGUAL expresion
    ;               reduce using rule 138 (empty -> .)
    ELSIF           reduce using rule 138 (empty -> .)
    ELSE            reduce using rule 138 (empty -> .)
    END             reduce using rule 138 (empty -> .)
    FOR             shift and go to state 148
    IF              shift and go to state 150
    ID              shift and go to state 149

    sentenciaSecuencia             shift and go to state 286
    sentencia                      shift and go to state 142
    empty                          shift and go to state 143
    sentenciaPara                  shift and go to state 144
    sentenciaSi                    shift and go to state 145
    asignacionUnidad               shift and go to state 146
    asignacion                     shift and go to state 147

state 283

    (35) factor -> MUX ( expresion , expresion : expresion , expresion , . expresion , expresion )
    (53) expresion -> . termino terminoMasMenos
    (44) termino -> . factor terminoOperadores
    (32) factor -> . SR ( expresion , expresion )
    (33) factor -> . LATCH ( expresion , expresion )
    (34) factor -> . REG ( expresionComaO expresion )
    (35) factor -> . MUX ( expresion , expresion : expresion , expresion , expresion , expresion )
    (36) factor -> . MUX ( expresion : expresion , expresion )
    (37) factor -> . ( expresion )
    (38) factor -> . ~ factor
    (39) factor -> . INTEGER
    (40) factor -> . LOGICVALUE
    (41) factor -> . ID selector
    SR              shift and go to state 58
    LATCH           shift and go to state 60
    REG             shift and go to state 61
    MUX             shift and go to state 62
    (               shift and go to state 59
    ~               shift and go to state 63
    INTEGER         shift and go to state 64
    LOGICVALUE      shift and go to state 65
    ID              shift and go to state 54

    expresion                      shift and go to state 287
    termino                        shift and go to state 56
    factor                         shift and go to state 57

state 284

    (76) sentenciaPara -> FOR ID DOSPUNTOSIGUAL expresion DOBLEPUNTO expresion DO sentenciaSecuencia . END
    END             shift and go to state 288


state 285

    (73) sentenciaSiSinoR -> sentenciaSiSinoR ELSIF relacion THEN . sentenciaSecuencia
    (82) sentenciaSecuencia -> . sentencia sentenciaPuntoComa
    (77) sentencia -> . empty
    (78) sentencia -> . sentenciaPara
    (79) sentencia -> . sentenciaSi
    (80) sentencia -> . asignacionUnidad
    (81) sentencia -> . asignacion
    (138) empty -> .
    (76) sentenciaPara -> . FOR ID DOSPUNTOSIGUAL expresion DOBLEPUNTO expresion DO sentenciaSecuencia END
    (69) sentenciaSi -> . IF relacion THEN sentenciaSecuencia sentenciaSiSino sentenciaSiEntonces END
    (137) asignacionUnidad -> . ID selector ( listaExpresiones )
    (60) asignacion -> . ID selector DOSPUNTOSIGUAL condicion | expresion
    (61) asignacion -> . ID selector DOSPUNTOSIGUAL expresion
    ;               reduce using rule 138 (empty -> .)
    ELSIF           reduce using rule 138 (empty -> .)
    ELSE            reduce using rule 138 (empty -> .)
    END             reduce using rule 138 (empty -> .)
    FOR             shift and go to state 148
    IF              shift and go to state 150
    ID              shift and go to state 149

    sentenciaSecuencia             shift and go to state 289
    sentencia                      shift and go to state 142
    empty                          shift and go to state 143
    sentenciaPara                  shift and go to state 144
    sentenciaSi                    shift and go to state 145
    asignacionUnidad               shift and go to state 146
    asignacion                     shift and go to state 147

state 286

    (72) sentenciaSiSinoR -> ELSIF relacion THEN sentenciaSecuencia .
    ELSIF           reduce using rule 72 (sentenciaSiSinoR -> ELSIF relacion THEN sentenciaSecuencia .)
    ELSE            reduce using rule 72 (sentenciaSiSinoR -> ELSIF relacion THEN sentenciaSecuencia .)
    END             reduce using rule 72 (sentenciaSiSinoR -> ELSIF relacion THEN sentenciaSecuencia .)


state 287

    (35) factor -> MUX ( expresion , expresion : expresion , expresion , expresion . , expresion )
    ,               shift and go to state 290


state 288

    (76) sentenciaPara -> FOR ID DOSPUNTOSIGUAL expresion DOBLEPUNTO expresion DO sentenciaSecuencia END .
    ;               reduce using rule 76 (sentenciaPara -> FOR ID DOSPUNTOSIGUAL expresion DOBLEPUNTO expresion DO sentenciaSecuencia END .)
    END             reduce using rule 76 (sentenciaPara -> FOR ID DOSPUNTOSIGUAL expresion DOBLEPUNTO expresion DO sentenciaSecuencia END .)
    ELSIF           reduce using rule 76 (sentenciaPara -> FOR ID DOSPUNTOSIGUAL expresion DOBLEPUNTO expresion DO sentenciaSecuencia END .)
    ELSE            reduce using rule 76 (sentenciaPara -> FOR ID DOSPUNTOSIGUAL expresion DOBLEPUNTO expresion DO sentenciaSecuencia END .)


state 289

    (73) sentenciaSiSinoR -> sentenciaSiSinoR ELSIF relacion THEN sentenciaSecuencia .
    ELSIF           reduce using rule 73 (sentenciaSiSinoR -> sentenciaSiSinoR ELSIF relacion THEN sentenciaSecuencia .)
    ELSE            reduce using rule 73 (sentenciaSiSinoR -> sentenciaSiSinoR ELSIF relacion THEN sentenciaSecuencia .)
    END             reduce using rule 73 (sentenciaSiSinoR -> sentenciaSiSinoR ELSIF relacion THEN sentenciaSecuencia .)


state 290

    (35) factor -> MUX ( expresion , expresion : expresion , expresion , expresion , . expresion )
    (53) expresion -> . termino terminoMasMenos
    (44) termino -> . factor terminoOperadores
    (32) factor -> . SR ( expresion , expresion )
    (33) factor -> . LATCH ( expresion , expresion )
    (34) factor -> . REG ( expresionComaO expresion )
    (35) factor -> . MUX ( expresion , expresion : expresion , expresion , expresion , expresion )
    (36) factor -> . MUX ( expresion : expresion , expresion )
    (37) factor -> . ( expresion )
    (38) factor -> . ~ factor
    (39) factor -> . INTEGER
    (40) factor -> . LOGICVALUE
    (41) factor -> . ID selector
    SR              shift and go to state 58
    LATCH           shift and go to state 60
    REG             shift and go to state 61
    MUX             shift and go to state 62
    (               shift and go to state 59
    ~               shift and go to state 63
    INTEGER         shift and go to state 64
    LOGICVALUE      shift and go to state 65
    ID              shift and go to state 54

    expresion                      shift and go to state 291
    termino                        shift and go to state 56
    factor                         shift and go to state 57

state 291

    (35) factor -> MUX ( expresion , expresion : expresion , expresion , expresion , expresion . )
    )               shift and go to state 292


state 292

    (35) factor -> MUX ( expresion , expresion : expresion , expresion , expresion , expresion ) .
    MOD             reduce using rule 35 (factor -> MUX ( expresion , expresion : expresion , expresion , expresion , expresion ) .)
    DIV             reduce using rule 35 (factor -> MUX ( expresion , expresion : expresion , expresion , expresion , expresion ) .)
    /               reduce using rule 35 (factor -> MUX ( expresion , expresion : expresion , expresion , expresion , expresion ) .)
    *               reduce using rule 35 (factor -> MUX ( expresion , expresion : expresion , expresion , expresion , expresion ) .)
    -               reduce using rule 35 (factor -> MUX ( expresion , expresion : expresion , expresion , expresion , expresion ) .)
    +               reduce using rule 35 (factor -> MUX ( expresion , expresion : expresion , expresion , expresion , expresion ) .)
    ;               reduce using rule 35 (factor -> MUX ( expresion , expresion : expresion , expresion , expresion , expresion ) .)
    )               reduce using rule 35 (factor -> MUX ( expresion , expresion : expresion , expresion , expresion , expresion ) .)
    ]               reduce using rule 35 (factor -> MUX ( expresion , expresion : expresion , expresion , expresion , expresion ) .)
    ,               reduce using rule 35 (factor -> MUX ( expresion , expresion : expresion , expresion , expresion , expresion ) .)
    :               reduce using rule 35 (factor -> MUX ( expresion , expresion : expresion , expresion , expresion , expresion ) .)
    MAYORIGUAL      reduce using rule 35 (factor -> MUX ( expresion , expresion : expresion , expresion , expresion , expresion ) .)
    >               reduce using rule 35 (factor -> MUX ( expresion , expresion : expresion , expresion , expresion , expresion ) .)
    MENORIGUAL      reduce using rule 35 (factor -> MUX ( expresion , expresion : expresion , expresion , expresion , expresion ) .)
    <               reduce using rule 35 (factor -> MUX ( expresion , expresion : expresion , expresion , expresion , expresion ) .)
    #               reduce using rule 35 (factor -> MUX ( expresion , expresion : expresion , expresion , expresion , expresion ) .)
    =               reduce using rule 35 (factor -> MUX ( expresion , expresion : expresion , expresion , expresion , expresion ) .)
    DOBLEPUNTO      reduce using rule 35 (factor -> MUX ( expresion , expresion : expresion , expresion , expresion , expresion ) .)
    END             reduce using rule 35 (factor -> MUX ( expresion , expresion : expresion , expresion , expresion , expresion ) .)
    ELSIF           reduce using rule 35 (factor -> MUX ( expresion , expresion : expresion , expresion , expresion , expresion ) .)
    ELSE            reduce using rule 35 (factor -> MUX ( expresion , expresion : expresion , expresion , expresion , expresion ) .)
    |               reduce using rule 35 (factor -> MUX ( expresion , expresion : expresion , expresion , expresion , expresion ) .)
    THEN            reduce using rule 35 (factor -> MUX ( expresion , expresion : expresion , expresion , expresion , expresion ) .)
    DO              reduce using rule 35 (factor -> MUX ( expresion , expresion : expresion , expresion , expresion , expresion ) .)


Conflicts:

shift/reduce conflict for SR in state 103 resolved as shift
shift/reduce conflict for LATCH in state 103 resolved as shift
shift/reduce conflict for REG in state 103 resolved as shift
shift/reduce conflict for MUX in state 103 resolved as shift
shift/reduce conflict for ( in state 103 resolved as shift
shift/reduce conflict for ~ in state 103 resolved as shift
shift/reduce conflict for INTEGER in state 103 resolved as shift
shift/reduce conflict for LOGICVALUE in state 103 resolved as shift
shift/reduce conflict for ID in state 103 resolved as shift