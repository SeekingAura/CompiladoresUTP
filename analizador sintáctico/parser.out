Grammar:

Rule 0     S' -> lola
Rule 1     lola -> modulo
Rule 2     lola -> lola modulo
Rule 3     tipoSimple -> ID
Rule 4     tipoSimple -> ID ( listaExpresiones )
Rule 5     tipoSimple -> tipoBasico
Rule 6     tipoBasico -> OC
Rule 7     tipoBasico -> TS
Rule 8     tipoBasico -> BIT
Rule 9     listaExpresiones -> expresion
Rule 10    listaExpresiones -> listaExpresiones , expresion
Rule 11    tipo -> tipoSimple
Rule 12    tipo -> [ expresion ] tipo
Rule 13    declaracionConstante -> ID DOSPUNTOSIGUAL expresion ;
Rule 14    declaracionVariable -> listaId : tipo ;
Rule 15    listaId -> listaId , ID
Rule 16    listaId -> ID
Rule 17    selector -> empty
Rule 18    selector -> selectorR
Rule 19    selectorR -> selectorRR
Rule 20    selectorR -> selectorR selectorRR
Rule 21    selectorRR -> [ expresion ]
Rule 22    selectorRR -> . INTEGER
Rule 23    selectorRR -> . ID
Rule 24    factor -> SR ( expresion , expresion )
Rule 25    factor -> LATCH ( expresion , expresion )
Rule 26    factor -> REG ( expresion , expresion )
Rule 27    factor -> REG ( expresion )
Rule 28    factor -> MUX ( expresion , expresion : expresion , expresion , expresion , expresion )
Rule 29    factor -> MUX ( expresion : expresion , expresion )
Rule 30    factor -> ( expresion )
Rule 31    factor -> ~ factor
Rule 32    factor -> FLECHAARRIBA factor
Rule 33    factor -> INTEGER
Rule 34    factor -> LOGICVALUE
Rule 35    factor -> ID selector
Rule 36    termino -> factor
Rule 37    termino -> termino simbolosProd factor
Rule 38    simbolosProd -> MOD
Rule 39    simbolosProd -> DIV
Rule 40    simbolosProd -> /
Rule 41    simbolosProd -> *
Rule 42    expresion -> termino
Rule 43    expresion -> expresion - termino
Rule 44    expresion -> expresion + termino
Rule 45    asignacion -> ID selector DOSPUNTOSIGUAL condicion | expresion
Rule 46    asignacion -> ID selector DOSPUNTOSIGUAL expresion
Rule 47    condicion -> expresion
Rule 48    relacion -> expresion MAYORIGUAL expresion
Rule 49    relacion -> expresion > expresion
Rule 50    relacion -> expresion MENORIGUAL expresion
Rule 51    relacion -> expresion < expresion
Rule 52    relacion -> expresion # expresion
Rule 53    relacion -> expresion = expresion
Rule 54    sentenciaSi -> IF relacion THEN sentenciaSecuencia sentenciaSiSino sentenciaSiEntonces END
Rule 55    sentenciaSiSino -> empty
Rule 56    sentenciaSiSino -> sentenciaSiSinoR
Rule 57    sentenciaSiSinoR -> ELSIF relacion THEN sentenciaSecuencia
Rule 58    sentenciaSiSinoR -> sentenciaSiSinoR ELSIF relacion THEN sentenciaSecuencia
Rule 59    sentenciaSiEntonces -> empty
Rule 60    sentenciaSiEntonces -> ELSE sentenciaSecuencia
Rule 61    sentenciaPara -> FOR ID DOSPUNTOSIGUAL expresion DOBLEPUNTO expresion DO sentenciaSecuencia END
Rule 62    sentencia -> empty
Rule 63    sentencia -> sentenciaPara
Rule 64    sentencia -> sentenciaSi
Rule 65    sentencia -> asignacionUnidad
Rule 66    sentencia -> asignacion
Rule 67    sentenciaSecuencia -> sentencia
Rule 68    sentenciaSecuencia -> sentenciaSecuencia ; sentencia
Rule 69    modulo -> MODULE ID ; declaracionTipoPuntoComa declaracionConstanteCONST declaracionVariableIN declaracionVariableINOUT declaracionVariableOUT declaracionVariableVAR sentenciaSecuenciaBEGIN END ID .
Rule 70    declaracionTipoPuntoComa -> empty
Rule 71    declaracionTipoPuntoComa -> declaracionTipoPuntoComaR
Rule 72    declaracionTipoPuntoComaR -> declaracionTipo ;
Rule 73    declaracionTipoPuntoComaR -> declaracionTipoPuntoComaR declaracionTipo ;
Rule 74    declaracionConstanteCONST -> empty
Rule 75    declaracionConstanteCONST -> CONST declaracionConstanteRecursivo
Rule 76    declaracionConstanteRecursivo -> empty
Rule 77    declaracionConstanteRecursivo -> declaracionConstanteRecursivoR
Rule 78    declaracionConstanteRecursivoR -> declaracionConstante
Rule 79    declaracionConstanteRecursivoR -> declaracionConstanteRecursivoR declaracionConstante
Rule 80    declaracionVariableIN -> empty
Rule 81    declaracionVariableIN -> IN declaracionVariableRecursivo
Rule 82    declaracionVariableRecursivo -> empty
Rule 83    declaracionVariableRecursivo -> declaracionVariableRecursivoR
Rule 84    declaracionVariableRecursivoR -> declaracionVariable
Rule 85    declaracionVariableRecursivoR -> declaracionVariableRecursivoR declaracionVariable
Rule 86    declaracionVariableINOUT -> empty
Rule 87    declaracionVariableINOUT -> INOUT declaracionVariableRecursivo
Rule 88    declaracionVariableOUT -> empty
Rule 89    declaracionVariableOUT -> OUT declaracionVariableRecursivo
Rule 90    declaracionVariableVAR -> empty
Rule 91    declaracionVariableVAR -> VAR declaracionVariableRecursivo
Rule 92    sentenciaSecuenciaBEGIN -> empty
Rule 93    sentenciaSecuenciaBEGIN -> BEGIN sentenciaSecuencia
Rule 94    tipoFormal -> expresionCorcheteO BIT
Rule 95    expresionCorcheteO -> empty
Rule 96    expresionCorcheteO -> expresionCorcheteOR
Rule 97    expresionCorcheteOR -> [ expresionOpcional ]
Rule 98    expresionCorcheteOR -> expresionCorcheteOR [ expresionOpcional ]
Rule 99    expresionOpcional -> empty
Rule 100   expresionOpcional -> expresion
Rule 101   tipoFormalBus -> expresionCorcheteO OC
Rule 102   tipoFormalBus -> expresionCorcheteO TS
Rule 103   declaracionTipo -> TYPE ID simboloPor listaIdParentesis ; declaracionConstanteCONST tipoFormalIN tipoFormlINOUT declaracionVariableOUT declaracionVariableVAR sentenciaSecuenciaBEGIN END ID
Rule 104   simboloPor -> empty
Rule 105   simboloPor -> *
Rule 106   listaIdParentesis -> empty
Rule 107   listaIdParentesis -> ( listaId )
Rule 108   tipoFormalIN -> empty
Rule 109   tipoFormalIN -> IN tipoFormallistaId
Rule 110   tipoFormallistaId -> empty
Rule 111   tipoFormallistaId -> tipoFormallistaIdR
Rule 112   tipoFormallistaIdR -> listaId : tipoFormal ;
Rule 113   tipoFormallistaIdR -> tipoFormallistaIdR listaId : tipoFormal ;
Rule 114   tipoFormlINOUT -> empty
Rule 115   tipoFormlINOUT -> INOUT tipoFormlBuslistaId
Rule 116   tipoFormlBuslistaId -> empty
Rule 117   tipoFormlBuslistaId -> tipoFormlBuslistaIdR
Rule 118   tipoFormlBuslistaIdR -> listaId : tipoFormalBus ;
Rule 119   tipoFormlBuslistaIdR -> tipoFormlBuslistaIdR listaId : tipoFormalBus ;
Rule 120   asignacionUnidad -> ID selector ( listaExpresiones )
Rule 121   empty -> <empty>

Terminals, with rules where they appear:

#                    : 52
(                    : 4 24 25 26 27 28 29 30 107 120
)                    : 4 24 25 26 27 28 29 30 107 120
*                    : 41 105
+                    : 44
,                    : 10 15 24 25 26 28 28 28 28 29
-                    : 43
.                    : 22 23 69
/                    : 40
:                    : 14 28 29 112 113 118 119
;                    : 13 14 68 69 72 73 103 112 113 118 119
<                    : 51
=                    : 53
>                    : 49
BEGIN                : 93
BIT                  : 8 94
CONST                : 75
DIV                  : 39
DO                   : 61
DOBLEPUNTO           : 61
DOSPUNTOSIGUAL       : 13 45 46 61
ELSE                 : 60
ELSIF                : 57 58
END                  : 54 61 69 103
FLECHAARRIBA         : 32
FOR                  : 61
ID                   : 3 4 13 15 16 23 35 45 46 61 69 69 103 103 120
IF                   : 54
IN                   : 81 109
INOUT                : 87 115
INTEGER              : 22 33
LATCH                : 25
LOGICVALUE           : 34
MAYORIGUAL           : 48
MENORIGUAL           : 50
MOD                  : 38
MODULE               : 69
MUX                  : 28 29
OC                   : 6 101
OUT                  : 89
REG                  : 26 27
SR                   : 24
THEN                 : 54 57 58
TS                   : 7 102
TYPE                 : 103
VAR                  : 91
[                    : 12 21 97 98
]                    : 12 21 97 98
error                : 
|                    : 45
~                    : 31

Nonterminals, with rules where they appear:

asignacion           : 66
asignacionUnidad     : 65
condicion            : 45
declaracionConstante : 78 79
declaracionConstanteCONST : 69 103
declaracionConstanteRecursivo : 75
declaracionConstanteRecursivoR : 77 79
declaracionTipo      : 72 73
declaracionTipoPuntoComa : 69
declaracionTipoPuntoComaR : 71 73
declaracionVariable  : 84 85
declaracionVariableIN : 69
declaracionVariableINOUT : 69
declaracionVariableOUT : 69 103
declaracionVariableRecursivo : 81 87 89 91
declaracionVariableRecursivoR : 83 85
declaracionVariableVAR : 69 103
empty                : 17 55 59 62 70 74 76 80 82 86 88 90 92 95 99 104 106 108 110 114 116
expresion            : 9 10 12 13 21 24 24 25 25 26 26 27 28 28 28 28 28 28 29 29 29 30 43 44 45 46 47 48 48 49 49 50 50 51 51 52 52 53 53 61 61 100
expresionCorcheteO   : 94 101 102
expresionCorcheteOR  : 96 98
expresionOpcional    : 97 98
factor               : 31 32 36 37
listaExpresiones     : 4 10 120
listaId              : 14 15 107 112 113 118 119
listaIdParentesis    : 103
lola                 : 2 0
modulo               : 1 2
relacion             : 54 57 58
selector             : 35 45 46 120
selectorR            : 18 20
selectorRR           : 19 20
sentencia            : 67 68
sentenciaPara        : 63
sentenciaSecuencia   : 54 57 58 60 61 68 93
sentenciaSecuenciaBEGIN : 69 103
sentenciaSi          : 64
sentenciaSiEntonces  : 54
sentenciaSiSino      : 54
sentenciaSiSinoR     : 56 58
simboloPor           : 103
simbolosProd         : 37
termino              : 37 42 43 44
tipo                 : 12 14
tipoBasico           : 5
tipoFormal           : 112 113
tipoFormalBus        : 118 119
tipoFormalIN         : 103
tipoFormallistaId    : 109
tipoFormallistaIdR   : 111 113
tipoFormlBuslistaId  : 115
tipoFormlBuslistaIdR : 117 119
tipoFormlINOUT       : 103
tipoSimple           : 11


state 0

    (0) S' -> . lola
    (1) lola -> . modulo
    (2) lola -> . lola modulo
    (69) modulo -> . MODULE ID ; declaracionTipoPuntoComa declaracionConstanteCONST declaracionVariableIN declaracionVariableINOUT declaracionVariableOUT declaracionVariableVAR sentenciaSecuenciaBEGIN END ID .
    MODULE          shift and go to state 3

    lola                           shift and go to state 1
    modulo                         shift and go to state 2

state 1

    (0) S' -> lola .
    (2) lola -> lola . modulo
    (69) modulo -> . MODULE ID ; declaracionTipoPuntoComa declaracionConstanteCONST declaracionVariableIN declaracionVariableINOUT declaracionVariableOUT declaracionVariableVAR sentenciaSecuenciaBEGIN END ID .
    MODULE          shift and go to state 3

    modulo                         shift and go to state 4

state 2

    (1) lola -> modulo .
    MODULE          reduce using rule 1 (lola -> modulo .)
    $end            reduce using rule 1 (lola -> modulo .)


state 3

    (69) modulo -> MODULE . ID ; declaracionTipoPuntoComa declaracionConstanteCONST declaracionVariableIN declaracionVariableINOUT declaracionVariableOUT declaracionVariableVAR sentenciaSecuenciaBEGIN END ID .
    ID              shift and go to state 5


state 4

    (2) lola -> lola modulo .
    MODULE          reduce using rule 2 (lola -> lola modulo .)
    $end            reduce using rule 2 (lola -> lola modulo .)


state 5

    (69) modulo -> MODULE ID . ; declaracionTipoPuntoComa declaracionConstanteCONST declaracionVariableIN declaracionVariableINOUT declaracionVariableOUT declaracionVariableVAR sentenciaSecuenciaBEGIN END ID .
    ;               shift and go to state 6


state 6

    (69) modulo -> MODULE ID ; . declaracionTipoPuntoComa declaracionConstanteCONST declaracionVariableIN declaracionVariableINOUT declaracionVariableOUT declaracionVariableVAR sentenciaSecuenciaBEGIN END ID .
    (70) declaracionTipoPuntoComa -> . empty
    (71) declaracionTipoPuntoComa -> . declaracionTipoPuntoComaR
    (121) empty -> .
    (72) declaracionTipoPuntoComaR -> . declaracionTipo ;
    (73) declaracionTipoPuntoComaR -> . declaracionTipoPuntoComaR declaracionTipo ;
    (103) declaracionTipo -> . TYPE ID simboloPor listaIdParentesis ; declaracionConstanteCONST tipoFormalIN tipoFormlINOUT declaracionVariableOUT declaracionVariableVAR sentenciaSecuenciaBEGIN END ID
    CONST           reduce using rule 121 (empty -> .)
    IN              reduce using rule 121 (empty -> .)
    INOUT           reduce using rule 121 (empty -> .)
    OUT             reduce using rule 121 (empty -> .)
    VAR             reduce using rule 121 (empty -> .)
    BEGIN           reduce using rule 121 (empty -> .)
    END             reduce using rule 121 (empty -> .)
    TYPE            shift and go to state 11

    declaracionTipoPuntoComa       shift and go to state 7
    empty                          shift and go to state 8
    declaracionTipoPuntoComaR      shift and go to state 9
    declaracionTipo                shift and go to state 10

state 7

    (69) modulo -> MODULE ID ; declaracionTipoPuntoComa . declaracionConstanteCONST declaracionVariableIN declaracionVariableINOUT declaracionVariableOUT declaracionVariableVAR sentenciaSecuenciaBEGIN END ID .
    (74) declaracionConstanteCONST -> . empty
    (75) declaracionConstanteCONST -> . CONST declaracionConstanteRecursivo
    (121) empty -> .
    CONST           shift and go to state 14
    IN              reduce using rule 121 (empty -> .)
    INOUT           reduce using rule 121 (empty -> .)
    OUT             reduce using rule 121 (empty -> .)
    VAR             reduce using rule 121 (empty -> .)
    BEGIN           reduce using rule 121 (empty -> .)
    END             reduce using rule 121 (empty -> .)

    declaracionConstanteCONST      shift and go to state 12
    empty                          shift and go to state 13

state 8

    (70) declaracionTipoPuntoComa -> empty .
    CONST           reduce using rule 70 (declaracionTipoPuntoComa -> empty .)
    IN              reduce using rule 70 (declaracionTipoPuntoComa -> empty .)
    INOUT           reduce using rule 70 (declaracionTipoPuntoComa -> empty .)
    OUT             reduce using rule 70 (declaracionTipoPuntoComa -> empty .)
    VAR             reduce using rule 70 (declaracionTipoPuntoComa -> empty .)
    BEGIN           reduce using rule 70 (declaracionTipoPuntoComa -> empty .)
    END             reduce using rule 70 (declaracionTipoPuntoComa -> empty .)


state 9

    (71) declaracionTipoPuntoComa -> declaracionTipoPuntoComaR .
    (73) declaracionTipoPuntoComaR -> declaracionTipoPuntoComaR . declaracionTipo ;
    (103) declaracionTipo -> . TYPE ID simboloPor listaIdParentesis ; declaracionConstanteCONST tipoFormalIN tipoFormlINOUT declaracionVariableOUT declaracionVariableVAR sentenciaSecuenciaBEGIN END ID
    CONST           reduce using rule 71 (declaracionTipoPuntoComa -> declaracionTipoPuntoComaR .)
    IN              reduce using rule 71 (declaracionTipoPuntoComa -> declaracionTipoPuntoComaR .)
    INOUT           reduce using rule 71 (declaracionTipoPuntoComa -> declaracionTipoPuntoComaR .)
    OUT             reduce using rule 71 (declaracionTipoPuntoComa -> declaracionTipoPuntoComaR .)
    VAR             reduce using rule 71 (declaracionTipoPuntoComa -> declaracionTipoPuntoComaR .)
    BEGIN           reduce using rule 71 (declaracionTipoPuntoComa -> declaracionTipoPuntoComaR .)
    END             reduce using rule 71 (declaracionTipoPuntoComa -> declaracionTipoPuntoComaR .)
    TYPE            shift and go to state 11

    declaracionTipo                shift and go to state 15

state 10

    (72) declaracionTipoPuntoComaR -> declaracionTipo . ;
    ;               shift and go to state 16


state 11

    (103) declaracionTipo -> TYPE . ID simboloPor listaIdParentesis ; declaracionConstanteCONST tipoFormalIN tipoFormlINOUT declaracionVariableOUT declaracionVariableVAR sentenciaSecuenciaBEGIN END ID
    ID              shift and go to state 17


state 12

    (69) modulo -> MODULE ID ; declaracionTipoPuntoComa declaracionConstanteCONST . declaracionVariableIN declaracionVariableINOUT declaracionVariableOUT declaracionVariableVAR sentenciaSecuenciaBEGIN END ID .
    (80) declaracionVariableIN -> . empty
    (81) declaracionVariableIN -> . IN declaracionVariableRecursivo
    (121) empty -> .
    IN              shift and go to state 20
    INOUT           reduce using rule 121 (empty -> .)
    OUT             reduce using rule 121 (empty -> .)
    VAR             reduce using rule 121 (empty -> .)
    BEGIN           reduce using rule 121 (empty -> .)
    END             reduce using rule 121 (empty -> .)

    declaracionVariableIN          shift and go to state 18
    empty                          shift and go to state 19

state 13

    (74) declaracionConstanteCONST -> empty .
    IN              reduce using rule 74 (declaracionConstanteCONST -> empty .)
    INOUT           reduce using rule 74 (declaracionConstanteCONST -> empty .)
    OUT             reduce using rule 74 (declaracionConstanteCONST -> empty .)
    VAR             reduce using rule 74 (declaracionConstanteCONST -> empty .)
    BEGIN           reduce using rule 74 (declaracionConstanteCONST -> empty .)
    END             reduce using rule 74 (declaracionConstanteCONST -> empty .)


state 14

    (75) declaracionConstanteCONST -> CONST . declaracionConstanteRecursivo
    (76) declaracionConstanteRecursivo -> . empty
    (77) declaracionConstanteRecursivo -> . declaracionConstanteRecursivoR
    (121) empty -> .
    (78) declaracionConstanteRecursivoR -> . declaracionConstante
    (79) declaracionConstanteRecursivoR -> . declaracionConstanteRecursivoR declaracionConstante
    (13) declaracionConstante -> . ID DOSPUNTOSIGUAL expresion ;
    IN              reduce using rule 121 (empty -> .)
    INOUT           reduce using rule 121 (empty -> .)
    OUT             reduce using rule 121 (empty -> .)
    VAR             reduce using rule 121 (empty -> .)
    BEGIN           reduce using rule 121 (empty -> .)
    END             reduce using rule 121 (empty -> .)
    ID              shift and go to state 25

    declaracionConstanteRecursivo  shift and go to state 21
    empty                          shift and go to state 22
    declaracionConstanteRecursivoR shift and go to state 23
    declaracionConstante           shift and go to state 24

state 15

    (73) declaracionTipoPuntoComaR -> declaracionTipoPuntoComaR declaracionTipo . ;
    ;               shift and go to state 26


state 16

    (72) declaracionTipoPuntoComaR -> declaracionTipo ; .
    TYPE            reduce using rule 72 (declaracionTipoPuntoComaR -> declaracionTipo ; .)
    CONST           reduce using rule 72 (declaracionTipoPuntoComaR -> declaracionTipo ; .)
    IN              reduce using rule 72 (declaracionTipoPuntoComaR -> declaracionTipo ; .)
    INOUT           reduce using rule 72 (declaracionTipoPuntoComaR -> declaracionTipo ; .)
    OUT             reduce using rule 72 (declaracionTipoPuntoComaR -> declaracionTipo ; .)
    VAR             reduce using rule 72 (declaracionTipoPuntoComaR -> declaracionTipo ; .)
    BEGIN           reduce using rule 72 (declaracionTipoPuntoComaR -> declaracionTipo ; .)
    END             reduce using rule 72 (declaracionTipoPuntoComaR -> declaracionTipo ; .)


state 17

    (103) declaracionTipo -> TYPE ID . simboloPor listaIdParentesis ; declaracionConstanteCONST tipoFormalIN tipoFormlINOUT declaracionVariableOUT declaracionVariableVAR sentenciaSecuenciaBEGIN END ID
    (104) simboloPor -> . empty
    (105) simboloPor -> . *
    (121) empty -> .
    *               shift and go to state 29
    (               reduce using rule 121 (empty -> .)
    ;               reduce using rule 121 (empty -> .)

    simboloPor                     shift and go to state 27
    empty                          shift and go to state 28

state 18

    (69) modulo -> MODULE ID ; declaracionTipoPuntoComa declaracionConstanteCONST declaracionVariableIN . declaracionVariableINOUT declaracionVariableOUT declaracionVariableVAR sentenciaSecuenciaBEGIN END ID .
    (86) declaracionVariableINOUT -> . empty
    (87) declaracionVariableINOUT -> . INOUT declaracionVariableRecursivo
    (121) empty -> .
    INOUT           shift and go to state 32
    OUT             reduce using rule 121 (empty -> .)
    VAR             reduce using rule 121 (empty -> .)
    BEGIN           reduce using rule 121 (empty -> .)
    END             reduce using rule 121 (empty -> .)

    declaracionVariableINOUT       shift and go to state 30
    empty                          shift and go to state 31

state 19

    (80) declaracionVariableIN -> empty .
    INOUT           reduce using rule 80 (declaracionVariableIN -> empty .)
    OUT             reduce using rule 80 (declaracionVariableIN -> empty .)
    VAR             reduce using rule 80 (declaracionVariableIN -> empty .)
    BEGIN           reduce using rule 80 (declaracionVariableIN -> empty .)
    END             reduce using rule 80 (declaracionVariableIN -> empty .)


state 20

    (81) declaracionVariableIN -> IN . declaracionVariableRecursivo
    (82) declaracionVariableRecursivo -> . empty
    (83) declaracionVariableRecursivo -> . declaracionVariableRecursivoR
    (121) empty -> .
    (84) declaracionVariableRecursivoR -> . declaracionVariable
    (85) declaracionVariableRecursivoR -> . declaracionVariableRecursivoR declaracionVariable
    (14) declaracionVariable -> . listaId : tipo ;
    (15) listaId -> . listaId , ID
    (16) listaId -> . ID
    INOUT           reduce using rule 121 (empty -> .)
    OUT             reduce using rule 121 (empty -> .)
    VAR             reduce using rule 121 (empty -> .)
    BEGIN           reduce using rule 121 (empty -> .)
    END             reduce using rule 121 (empty -> .)
    ID              shift and go to state 38

    declaracionVariableRecursivo   shift and go to state 33
    empty                          shift and go to state 34
    declaracionVariableRecursivoR  shift and go to state 35
    declaracionVariable            shift and go to state 36
    listaId                        shift and go to state 37

state 21

    (75) declaracionConstanteCONST -> CONST declaracionConstanteRecursivo .
    IN              reduce using rule 75 (declaracionConstanteCONST -> CONST declaracionConstanteRecursivo .)
    INOUT           reduce using rule 75 (declaracionConstanteCONST -> CONST declaracionConstanteRecursivo .)
    OUT             reduce using rule 75 (declaracionConstanteCONST -> CONST declaracionConstanteRecursivo .)
    VAR             reduce using rule 75 (declaracionConstanteCONST -> CONST declaracionConstanteRecursivo .)
    BEGIN           reduce using rule 75 (declaracionConstanteCONST -> CONST declaracionConstanteRecursivo .)
    END             reduce using rule 75 (declaracionConstanteCONST -> CONST declaracionConstanteRecursivo .)


state 22

    (76) declaracionConstanteRecursivo -> empty .
    IN              reduce using rule 76 (declaracionConstanteRecursivo -> empty .)
    INOUT           reduce using rule 76 (declaracionConstanteRecursivo -> empty .)
    OUT             reduce using rule 76 (declaracionConstanteRecursivo -> empty .)
    VAR             reduce using rule 76 (declaracionConstanteRecursivo -> empty .)
    BEGIN           reduce using rule 76 (declaracionConstanteRecursivo -> empty .)
    END             reduce using rule 76 (declaracionConstanteRecursivo -> empty .)


state 23

    (77) declaracionConstanteRecursivo -> declaracionConstanteRecursivoR .
    (79) declaracionConstanteRecursivoR -> declaracionConstanteRecursivoR . declaracionConstante
    (13) declaracionConstante -> . ID DOSPUNTOSIGUAL expresion ;
    IN              reduce using rule 77 (declaracionConstanteRecursivo -> declaracionConstanteRecursivoR .)
    INOUT           reduce using rule 77 (declaracionConstanteRecursivo -> declaracionConstanteRecursivoR .)
    OUT             reduce using rule 77 (declaracionConstanteRecursivo -> declaracionConstanteRecursivoR .)
    VAR             reduce using rule 77 (declaracionConstanteRecursivo -> declaracionConstanteRecursivoR .)
    BEGIN           reduce using rule 77 (declaracionConstanteRecursivo -> declaracionConstanteRecursivoR .)
    END             reduce using rule 77 (declaracionConstanteRecursivo -> declaracionConstanteRecursivoR .)
    ID              shift and go to state 25

    declaracionConstante           shift and go to state 39

state 24

    (78) declaracionConstanteRecursivoR -> declaracionConstante .
    ID              reduce using rule 78 (declaracionConstanteRecursivoR -> declaracionConstante .)
    IN              reduce using rule 78 (declaracionConstanteRecursivoR -> declaracionConstante .)
    INOUT           reduce using rule 78 (declaracionConstanteRecursivoR -> declaracionConstante .)
    OUT             reduce using rule 78 (declaracionConstanteRecursivoR -> declaracionConstante .)
    VAR             reduce using rule 78 (declaracionConstanteRecursivoR -> declaracionConstante .)
    BEGIN           reduce using rule 78 (declaracionConstanteRecursivoR -> declaracionConstante .)
    END             reduce using rule 78 (declaracionConstanteRecursivoR -> declaracionConstante .)


state 25

    (13) declaracionConstante -> ID . DOSPUNTOSIGUAL expresion ;
    DOSPUNTOSIGUAL  shift and go to state 40


state 26

    (73) declaracionTipoPuntoComaR -> declaracionTipoPuntoComaR declaracionTipo ; .
    TYPE            reduce using rule 73 (declaracionTipoPuntoComaR -> declaracionTipoPuntoComaR declaracionTipo ; .)
    CONST           reduce using rule 73 (declaracionTipoPuntoComaR -> declaracionTipoPuntoComaR declaracionTipo ; .)
    IN              reduce using rule 73 (declaracionTipoPuntoComaR -> declaracionTipoPuntoComaR declaracionTipo ; .)
    INOUT           reduce using rule 73 (declaracionTipoPuntoComaR -> declaracionTipoPuntoComaR declaracionTipo ; .)
    OUT             reduce using rule 73 (declaracionTipoPuntoComaR -> declaracionTipoPuntoComaR declaracionTipo ; .)
    VAR             reduce using rule 73 (declaracionTipoPuntoComaR -> declaracionTipoPuntoComaR declaracionTipo ; .)
    BEGIN           reduce using rule 73 (declaracionTipoPuntoComaR -> declaracionTipoPuntoComaR declaracionTipo ; .)
    END             reduce using rule 73 (declaracionTipoPuntoComaR -> declaracionTipoPuntoComaR declaracionTipo ; .)


state 27

    (103) declaracionTipo -> TYPE ID simboloPor . listaIdParentesis ; declaracionConstanteCONST tipoFormalIN tipoFormlINOUT declaracionVariableOUT declaracionVariableVAR sentenciaSecuenciaBEGIN END ID
    (106) listaIdParentesis -> . empty
    (107) listaIdParentesis -> . ( listaId )
    (121) empty -> .
    (               shift and go to state 43
    ;               reduce using rule 121 (empty -> .)

    listaIdParentesis              shift and go to state 41
    empty                          shift and go to state 42

state 28

    (104) simboloPor -> empty .
    (               reduce using rule 104 (simboloPor -> empty .)
    ;               reduce using rule 104 (simboloPor -> empty .)


state 29

    (105) simboloPor -> * .
    (               reduce using rule 105 (simboloPor -> * .)
    ;               reduce using rule 105 (simboloPor -> * .)


state 30

    (69) modulo -> MODULE ID ; declaracionTipoPuntoComa declaracionConstanteCONST declaracionVariableIN declaracionVariableINOUT . declaracionVariableOUT declaracionVariableVAR sentenciaSecuenciaBEGIN END ID .
    (88) declaracionVariableOUT -> . empty
    (89) declaracionVariableOUT -> . OUT declaracionVariableRecursivo
    (121) empty -> .
    OUT             shift and go to state 46
    VAR             reduce using rule 121 (empty -> .)
    BEGIN           reduce using rule 121 (empty -> .)
    END             reduce using rule 121 (empty -> .)

    declaracionVariableOUT         shift and go to state 44
    empty                          shift and go to state 45

state 31

    (86) declaracionVariableINOUT -> empty .
    OUT             reduce using rule 86 (declaracionVariableINOUT -> empty .)
    VAR             reduce using rule 86 (declaracionVariableINOUT -> empty .)
    BEGIN           reduce using rule 86 (declaracionVariableINOUT -> empty .)
    END             reduce using rule 86 (declaracionVariableINOUT -> empty .)


state 32

    (87) declaracionVariableINOUT -> INOUT . declaracionVariableRecursivo
    (82) declaracionVariableRecursivo -> . empty
    (83) declaracionVariableRecursivo -> . declaracionVariableRecursivoR
    (121) empty -> .
    (84) declaracionVariableRecursivoR -> . declaracionVariable
    (85) declaracionVariableRecursivoR -> . declaracionVariableRecursivoR declaracionVariable
    (14) declaracionVariable -> . listaId : tipo ;
    (15) listaId -> . listaId , ID
    (16) listaId -> . ID
    OUT             reduce using rule 121 (empty -> .)
    VAR             reduce using rule 121 (empty -> .)
    BEGIN           reduce using rule 121 (empty -> .)
    END             reduce using rule 121 (empty -> .)
    ID              shift and go to state 38

    declaracionVariableRecursivo   shift and go to state 47
    empty                          shift and go to state 34
    declaracionVariableRecursivoR  shift and go to state 35
    declaracionVariable            shift and go to state 36
    listaId                        shift and go to state 37

state 33

    (81) declaracionVariableIN -> IN declaracionVariableRecursivo .
    INOUT           reduce using rule 81 (declaracionVariableIN -> IN declaracionVariableRecursivo .)
    OUT             reduce using rule 81 (declaracionVariableIN -> IN declaracionVariableRecursivo .)
    VAR             reduce using rule 81 (declaracionVariableIN -> IN declaracionVariableRecursivo .)
    BEGIN           reduce using rule 81 (declaracionVariableIN -> IN declaracionVariableRecursivo .)
    END             reduce using rule 81 (declaracionVariableIN -> IN declaracionVariableRecursivo .)


state 34

    (82) declaracionVariableRecursivo -> empty .
    INOUT           reduce using rule 82 (declaracionVariableRecursivo -> empty .)
    OUT             reduce using rule 82 (declaracionVariableRecursivo -> empty .)
    VAR             reduce using rule 82 (declaracionVariableRecursivo -> empty .)
    BEGIN           reduce using rule 82 (declaracionVariableRecursivo -> empty .)
    END             reduce using rule 82 (declaracionVariableRecursivo -> empty .)


state 35

    (83) declaracionVariableRecursivo -> declaracionVariableRecursivoR .
    (85) declaracionVariableRecursivoR -> declaracionVariableRecursivoR . declaracionVariable
    (14) declaracionVariable -> . listaId : tipo ;
    (15) listaId -> . listaId , ID
    (16) listaId -> . ID
    INOUT           reduce using rule 83 (declaracionVariableRecursivo -> declaracionVariableRecursivoR .)
    OUT             reduce using rule 83 (declaracionVariableRecursivo -> declaracionVariableRecursivoR .)
    VAR             reduce using rule 83 (declaracionVariableRecursivo -> declaracionVariableRecursivoR .)
    BEGIN           reduce using rule 83 (declaracionVariableRecursivo -> declaracionVariableRecursivoR .)
    END             reduce using rule 83 (declaracionVariableRecursivo -> declaracionVariableRecursivoR .)
    ID              shift and go to state 38

    declaracionVariable            shift and go to state 48
    listaId                        shift and go to state 37

state 36

    (84) declaracionVariableRecursivoR -> declaracionVariable .
    ID              reduce using rule 84 (declaracionVariableRecursivoR -> declaracionVariable .)
    INOUT           reduce using rule 84 (declaracionVariableRecursivoR -> declaracionVariable .)
    OUT             reduce using rule 84 (declaracionVariableRecursivoR -> declaracionVariable .)
    VAR             reduce using rule 84 (declaracionVariableRecursivoR -> declaracionVariable .)
    BEGIN           reduce using rule 84 (declaracionVariableRecursivoR -> declaracionVariable .)
    END             reduce using rule 84 (declaracionVariableRecursivoR -> declaracionVariable .)


state 37

    (14) declaracionVariable -> listaId . : tipo ;
    (15) listaId -> listaId . , ID
    :               shift and go to state 49
    ,               shift and go to state 50


state 38

    (16) listaId -> ID .
    :               reduce using rule 16 (listaId -> ID .)
    ,               reduce using rule 16 (listaId -> ID .)
    )               reduce using rule 16 (listaId -> ID .)


state 39

    (79) declaracionConstanteRecursivoR -> declaracionConstanteRecursivoR declaracionConstante .
    ID              reduce using rule 79 (declaracionConstanteRecursivoR -> declaracionConstanteRecursivoR declaracionConstante .)
    IN              reduce using rule 79 (declaracionConstanteRecursivoR -> declaracionConstanteRecursivoR declaracionConstante .)
    INOUT           reduce using rule 79 (declaracionConstanteRecursivoR -> declaracionConstanteRecursivoR declaracionConstante .)
    OUT             reduce using rule 79 (declaracionConstanteRecursivoR -> declaracionConstanteRecursivoR declaracionConstante .)
    VAR             reduce using rule 79 (declaracionConstanteRecursivoR -> declaracionConstanteRecursivoR declaracionConstante .)
    BEGIN           reduce using rule 79 (declaracionConstanteRecursivoR -> declaracionConstanteRecursivoR declaracionConstante .)
    END             reduce using rule 79 (declaracionConstanteRecursivoR -> declaracionConstanteRecursivoR declaracionConstante .)


state 40

    (13) declaracionConstante -> ID DOSPUNTOSIGUAL . expresion ;
    (42) expresion -> . termino
    (43) expresion -> . expresion - termino
    (44) expresion -> . expresion + termino
    (36) termino -> . factor
    (37) termino -> . termino simbolosProd factor
    (24) factor -> . SR ( expresion , expresion )
    (25) factor -> . LATCH ( expresion , expresion )
    (26) factor -> . REG ( expresion , expresion )
    (27) factor -> . REG ( expresion )
    (28) factor -> . MUX ( expresion , expresion : expresion , expresion , expresion , expresion )
    (29) factor -> . MUX ( expresion : expresion , expresion )
    (30) factor -> . ( expresion )
    (31) factor -> . ~ factor
    (32) factor -> . FLECHAARRIBA factor
    (33) factor -> . INTEGER
    (34) factor -> . LOGICVALUE
    (35) factor -> . ID selector
    SR              shift and go to state 55
    LATCH           shift and go to state 57
    REG             shift and go to state 58
    MUX             shift and go to state 59
    (               shift and go to state 56
    ~               shift and go to state 60
    FLECHAARRIBA    shift and go to state 61
    INTEGER         shift and go to state 62
    LOGICVALUE      shift and go to state 63
    ID              shift and go to state 51

    expresion                      shift and go to state 52
    termino                        shift and go to state 53
    factor                         shift and go to state 54

state 41

    (103) declaracionTipo -> TYPE ID simboloPor listaIdParentesis . ; declaracionConstanteCONST tipoFormalIN tipoFormlINOUT declaracionVariableOUT declaracionVariableVAR sentenciaSecuenciaBEGIN END ID
    ;               shift and go to state 64


state 42

    (106) listaIdParentesis -> empty .
    ;               reduce using rule 106 (listaIdParentesis -> empty .)


state 43

    (107) listaIdParentesis -> ( . listaId )
    (15) listaId -> . listaId , ID
    (16) listaId -> . ID
    ID              shift and go to state 38

    listaId                        shift and go to state 65

state 44

    (69) modulo -> MODULE ID ; declaracionTipoPuntoComa declaracionConstanteCONST declaracionVariableIN declaracionVariableINOUT declaracionVariableOUT . declaracionVariableVAR sentenciaSecuenciaBEGIN END ID .
    (90) declaracionVariableVAR -> . empty
    (91) declaracionVariableVAR -> . VAR declaracionVariableRecursivo
    (121) empty -> .
    VAR             shift and go to state 68
    BEGIN           reduce using rule 121 (empty -> .)
    END             reduce using rule 121 (empty -> .)

    declaracionVariableVAR         shift and go to state 66
    empty                          shift and go to state 67

state 45

    (88) declaracionVariableOUT -> empty .
    VAR             reduce using rule 88 (declaracionVariableOUT -> empty .)
    BEGIN           reduce using rule 88 (declaracionVariableOUT -> empty .)
    END             reduce using rule 88 (declaracionVariableOUT -> empty .)


state 46

    (89) declaracionVariableOUT -> OUT . declaracionVariableRecursivo
    (82) declaracionVariableRecursivo -> . empty
    (83) declaracionVariableRecursivo -> . declaracionVariableRecursivoR
    (121) empty -> .
    (84) declaracionVariableRecursivoR -> . declaracionVariable
    (85) declaracionVariableRecursivoR -> . declaracionVariableRecursivoR declaracionVariable
    (14) declaracionVariable -> . listaId : tipo ;
    (15) listaId -> . listaId , ID
    (16) listaId -> . ID
    VAR             reduce using rule 121 (empty -> .)
    BEGIN           reduce using rule 121 (empty -> .)
    END             reduce using rule 121 (empty -> .)
    ID              shift and go to state 38

    declaracionVariableRecursivo   shift and go to state 69
    empty                          shift and go to state 34
    declaracionVariableRecursivoR  shift and go to state 35
    declaracionVariable            shift and go to state 36
    listaId                        shift and go to state 37

state 47

    (87) declaracionVariableINOUT -> INOUT declaracionVariableRecursivo .
    OUT             reduce using rule 87 (declaracionVariableINOUT -> INOUT declaracionVariableRecursivo .)
    VAR             reduce using rule 87 (declaracionVariableINOUT -> INOUT declaracionVariableRecursivo .)
    BEGIN           reduce using rule 87 (declaracionVariableINOUT -> INOUT declaracionVariableRecursivo .)
    END             reduce using rule 87 (declaracionVariableINOUT -> INOUT declaracionVariableRecursivo .)


state 48

    (85) declaracionVariableRecursivoR -> declaracionVariableRecursivoR declaracionVariable .
    ID              reduce using rule 85 (declaracionVariableRecursivoR -> declaracionVariableRecursivoR declaracionVariable .)
    INOUT           reduce using rule 85 (declaracionVariableRecursivoR -> declaracionVariableRecursivoR declaracionVariable .)
    OUT             reduce using rule 85 (declaracionVariableRecursivoR -> declaracionVariableRecursivoR declaracionVariable .)
    VAR             reduce using rule 85 (declaracionVariableRecursivoR -> declaracionVariableRecursivoR declaracionVariable .)
    BEGIN           reduce using rule 85 (declaracionVariableRecursivoR -> declaracionVariableRecursivoR declaracionVariable .)
    END             reduce using rule 85 (declaracionVariableRecursivoR -> declaracionVariableRecursivoR declaracionVariable .)


state 49

    (14) declaracionVariable -> listaId : . tipo ;
    (11) tipo -> . tipoSimple
    (12) tipo -> . [ expresion ] tipo
    (3) tipoSimple -> . ID
    (4) tipoSimple -> . ID ( listaExpresiones )
    (5) tipoSimple -> . tipoBasico
    (6) tipoBasico -> . OC
    (7) tipoBasico -> . TS
    (8) tipoBasico -> . BIT
    [               shift and go to state 72
    ID              shift and go to state 73
    OC              shift and go to state 75
    TS              shift and go to state 76
    BIT             shift and go to state 77

    tipo                           shift and go to state 70
    tipoSimple                     shift and go to state 71
    tipoBasico                     shift and go to state 74

state 50

    (15) listaId -> listaId , . ID
    ID              shift and go to state 78


state 51

    (35) factor -> ID . selector
    (17) selector -> . empty
    (18) selector -> . selectorR
    (121) empty -> .
    (19) selectorR -> . selectorRR
    (20) selectorR -> . selectorR selectorRR
    (21) selectorRR -> . [ expresion ]
    (22) selectorRR -> . . INTEGER
    (23) selectorRR -> . . ID
    MOD             reduce using rule 121 (empty -> .)
    DIV             reduce using rule 121 (empty -> .)
    /               reduce using rule 121 (empty -> .)
    *               reduce using rule 121 (empty -> .)
    ;               reduce using rule 121 (empty -> .)
    -               reduce using rule 121 (empty -> .)
    +               reduce using rule 121 (empty -> .)
    )               reduce using rule 121 (empty -> .)
    ]               reduce using rule 121 (empty -> .)
    ,               reduce using rule 121 (empty -> .)
    :               reduce using rule 121 (empty -> .)
    MAYORIGUAL      reduce using rule 121 (empty -> .)
    >               reduce using rule 121 (empty -> .)
    MENORIGUAL      reduce using rule 121 (empty -> .)
    <               reduce using rule 121 (empty -> .)
    #               reduce using rule 121 (empty -> .)
    =               reduce using rule 121 (empty -> .)
    DOBLEPUNTO      reduce using rule 121 (empty -> .)
    END             reduce using rule 121 (empty -> .)
    ELSIF           reduce using rule 121 (empty -> .)
    ELSE            reduce using rule 121 (empty -> .)
    |               reduce using rule 121 (empty -> .)
    THEN            reduce using rule 121 (empty -> .)
    DO              reduce using rule 121 (empty -> .)
    [               shift and go to state 83
    .               shift and go to state 84

    selector                       shift and go to state 79
    empty                          shift and go to state 80
    selectorR                      shift and go to state 81
    selectorRR                     shift and go to state 82

state 52

    (13) declaracionConstante -> ID DOSPUNTOSIGUAL expresion . ;
    (43) expresion -> expresion . - termino
    (44) expresion -> expresion . + termino
    ;               shift and go to state 85
    -               shift and go to state 86
    +               shift and go to state 87


state 53

    (42) expresion -> termino .
    (37) termino -> termino . simbolosProd factor
    (38) simbolosProd -> . MOD
    (39) simbolosProd -> . DIV
    (40) simbolosProd -> . /
    (41) simbolosProd -> . *
    ;               reduce using rule 42 (expresion -> termino .)
    -               reduce using rule 42 (expresion -> termino .)
    +               reduce using rule 42 (expresion -> termino .)
    )               reduce using rule 42 (expresion -> termino .)
    ]               reduce using rule 42 (expresion -> termino .)
    ,               reduce using rule 42 (expresion -> termino .)
    :               reduce using rule 42 (expresion -> termino .)
    MAYORIGUAL      reduce using rule 42 (expresion -> termino .)
    >               reduce using rule 42 (expresion -> termino .)
    MENORIGUAL      reduce using rule 42 (expresion -> termino .)
    <               reduce using rule 42 (expresion -> termino .)
    #               reduce using rule 42 (expresion -> termino .)
    =               reduce using rule 42 (expresion -> termino .)
    DOBLEPUNTO      reduce using rule 42 (expresion -> termino .)
    END             reduce using rule 42 (expresion -> termino .)
    ELSIF           reduce using rule 42 (expresion -> termino .)
    ELSE            reduce using rule 42 (expresion -> termino .)
    |               reduce using rule 42 (expresion -> termino .)
    THEN            reduce using rule 42 (expresion -> termino .)
    DO              reduce using rule 42 (expresion -> termino .)
    MOD             shift and go to state 89
    DIV             shift and go to state 90
    /               shift and go to state 91
    *               shift and go to state 92

    simbolosProd                   shift and go to state 88

state 54

    (36) termino -> factor .
    MOD             reduce using rule 36 (termino -> factor .)
    DIV             reduce using rule 36 (termino -> factor .)
    /               reduce using rule 36 (termino -> factor .)
    *               reduce using rule 36 (termino -> factor .)
    ;               reduce using rule 36 (termino -> factor .)
    -               reduce using rule 36 (termino -> factor .)
    +               reduce using rule 36 (termino -> factor .)
    )               reduce using rule 36 (termino -> factor .)
    ]               reduce using rule 36 (termino -> factor .)
    ,               reduce using rule 36 (termino -> factor .)
    :               reduce using rule 36 (termino -> factor .)
    MAYORIGUAL      reduce using rule 36 (termino -> factor .)
    >               reduce using rule 36 (termino -> factor .)
    MENORIGUAL      reduce using rule 36 (termino -> factor .)
    <               reduce using rule 36 (termino -> factor .)
    #               reduce using rule 36 (termino -> factor .)
    =               reduce using rule 36 (termino -> factor .)
    DOBLEPUNTO      reduce using rule 36 (termino -> factor .)
    END             reduce using rule 36 (termino -> factor .)
    ELSIF           reduce using rule 36 (termino -> factor .)
    ELSE            reduce using rule 36 (termino -> factor .)
    |               reduce using rule 36 (termino -> factor .)
    THEN            reduce using rule 36 (termino -> factor .)
    DO              reduce using rule 36 (termino -> factor .)


state 55

    (24) factor -> SR . ( expresion , expresion )
    (               shift and go to state 93


state 56

    (30) factor -> ( . expresion )
    (42) expresion -> . termino
    (43) expresion -> . expresion - termino
    (44) expresion -> . expresion + termino
    (36) termino -> . factor
    (37) termino -> . termino simbolosProd factor
    (24) factor -> . SR ( expresion , expresion )
    (25) factor -> . LATCH ( expresion , expresion )
    (26) factor -> . REG ( expresion , expresion )
    (27) factor -> . REG ( expresion )
    (28) factor -> . MUX ( expresion , expresion : expresion , expresion , expresion , expresion )
    (29) factor -> . MUX ( expresion : expresion , expresion )
    (30) factor -> . ( expresion )
    (31) factor -> . ~ factor
    (32) factor -> . FLECHAARRIBA factor
    (33) factor -> . INTEGER
    (34) factor -> . LOGICVALUE
    (35) factor -> . ID selector
    SR              shift and go to state 55
    LATCH           shift and go to state 57
    REG             shift and go to state 58
    MUX             shift and go to state 59
    (               shift and go to state 56
    ~               shift and go to state 60
    FLECHAARRIBA    shift and go to state 61
    INTEGER         shift and go to state 62
    LOGICVALUE      shift and go to state 63
    ID              shift and go to state 51

    expresion                      shift and go to state 94
    termino                        shift and go to state 53
    factor                         shift and go to state 54

state 57

    (25) factor -> LATCH . ( expresion , expresion )
    (               shift and go to state 95


state 58

    (26) factor -> REG . ( expresion , expresion )
    (27) factor -> REG . ( expresion )
    (               shift and go to state 96


state 59

    (28) factor -> MUX . ( expresion , expresion : expresion , expresion , expresion , expresion )
    (29) factor -> MUX . ( expresion : expresion , expresion )
    (               shift and go to state 97


state 60

    (31) factor -> ~ . factor
    (24) factor -> . SR ( expresion , expresion )
    (25) factor -> . LATCH ( expresion , expresion )
    (26) factor -> . REG ( expresion , expresion )
    (27) factor -> . REG ( expresion )
    (28) factor -> . MUX ( expresion , expresion : expresion , expresion , expresion , expresion )
    (29) factor -> . MUX ( expresion : expresion , expresion )
    (30) factor -> . ( expresion )
    (31) factor -> . ~ factor
    (32) factor -> . FLECHAARRIBA factor
    (33) factor -> . INTEGER
    (34) factor -> . LOGICVALUE
    (35) factor -> . ID selector
    SR              shift and go to state 55
    LATCH           shift and go to state 57
    REG             shift and go to state 58
    MUX             shift and go to state 59
    (               shift and go to state 56
    ~               shift and go to state 60
    FLECHAARRIBA    shift and go to state 61
    INTEGER         shift and go to state 62
    LOGICVALUE      shift and go to state 63
    ID              shift and go to state 51

    factor                         shift and go to state 98

state 61

    (32) factor -> FLECHAARRIBA . factor
    (24) factor -> . SR ( expresion , expresion )
    (25) factor -> . LATCH ( expresion , expresion )
    (26) factor -> . REG ( expresion , expresion )
    (27) factor -> . REG ( expresion )
    (28) factor -> . MUX ( expresion , expresion : expresion , expresion , expresion , expresion )
    (29) factor -> . MUX ( expresion : expresion , expresion )
    (30) factor -> . ( expresion )
    (31) factor -> . ~ factor
    (32) factor -> . FLECHAARRIBA factor
    (33) factor -> . INTEGER
    (34) factor -> . LOGICVALUE
    (35) factor -> . ID selector
    SR              shift and go to state 55
    LATCH           shift and go to state 57
    REG             shift and go to state 58
    MUX             shift and go to state 59
    (               shift and go to state 56
    ~               shift and go to state 60
    FLECHAARRIBA    shift and go to state 61
    INTEGER         shift and go to state 62
    LOGICVALUE      shift and go to state 63
    ID              shift and go to state 51

    factor                         shift and go to state 99

state 62

    (33) factor -> INTEGER .
    MOD             reduce using rule 33 (factor -> INTEGER .)
    DIV             reduce using rule 33 (factor -> INTEGER .)
    /               reduce using rule 33 (factor -> INTEGER .)
    *               reduce using rule 33 (factor -> INTEGER .)
    ;               reduce using rule 33 (factor -> INTEGER .)
    -               reduce using rule 33 (factor -> INTEGER .)
    +               reduce using rule 33 (factor -> INTEGER .)
    )               reduce using rule 33 (factor -> INTEGER .)
    ]               reduce using rule 33 (factor -> INTEGER .)
    ,               reduce using rule 33 (factor -> INTEGER .)
    :               reduce using rule 33 (factor -> INTEGER .)
    MAYORIGUAL      reduce using rule 33 (factor -> INTEGER .)
    >               reduce using rule 33 (factor -> INTEGER .)
    MENORIGUAL      reduce using rule 33 (factor -> INTEGER .)
    <               reduce using rule 33 (factor -> INTEGER .)
    #               reduce using rule 33 (factor -> INTEGER .)
    =               reduce using rule 33 (factor -> INTEGER .)
    DOBLEPUNTO      reduce using rule 33 (factor -> INTEGER .)
    END             reduce using rule 33 (factor -> INTEGER .)
    ELSIF           reduce using rule 33 (factor -> INTEGER .)
    ELSE            reduce using rule 33 (factor -> INTEGER .)
    |               reduce using rule 33 (factor -> INTEGER .)
    THEN            reduce using rule 33 (factor -> INTEGER .)
    DO              reduce using rule 33 (factor -> INTEGER .)


state 63

    (34) factor -> LOGICVALUE .
    MOD             reduce using rule 34 (factor -> LOGICVALUE .)
    DIV             reduce using rule 34 (factor -> LOGICVALUE .)
    /               reduce using rule 34 (factor -> LOGICVALUE .)
    *               reduce using rule 34 (factor -> LOGICVALUE .)
    ;               reduce using rule 34 (factor -> LOGICVALUE .)
    -               reduce using rule 34 (factor -> LOGICVALUE .)
    +               reduce using rule 34 (factor -> LOGICVALUE .)
    )               reduce using rule 34 (factor -> LOGICVALUE .)
    ]               reduce using rule 34 (factor -> LOGICVALUE .)
    ,               reduce using rule 34 (factor -> LOGICVALUE .)
    :               reduce using rule 34 (factor -> LOGICVALUE .)
    MAYORIGUAL      reduce using rule 34 (factor -> LOGICVALUE .)
    >               reduce using rule 34 (factor -> LOGICVALUE .)
    MENORIGUAL      reduce using rule 34 (factor -> LOGICVALUE .)
    <               reduce using rule 34 (factor -> LOGICVALUE .)
    #               reduce using rule 34 (factor -> LOGICVALUE .)
    =               reduce using rule 34 (factor -> LOGICVALUE .)
    DOBLEPUNTO      reduce using rule 34 (factor -> LOGICVALUE .)
    END             reduce using rule 34 (factor -> LOGICVALUE .)
    ELSIF           reduce using rule 34 (factor -> LOGICVALUE .)
    ELSE            reduce using rule 34 (factor -> LOGICVALUE .)
    |               reduce using rule 34 (factor -> LOGICVALUE .)
    THEN            reduce using rule 34 (factor -> LOGICVALUE .)
    DO              reduce using rule 34 (factor -> LOGICVALUE .)


state 64

    (103) declaracionTipo -> TYPE ID simboloPor listaIdParentesis ; . declaracionConstanteCONST tipoFormalIN tipoFormlINOUT declaracionVariableOUT declaracionVariableVAR sentenciaSecuenciaBEGIN END ID
    (74) declaracionConstanteCONST -> . empty
    (75) declaracionConstanteCONST -> . CONST declaracionConstanteRecursivo
    (121) empty -> .
    CONST           shift and go to state 14
    IN              reduce using rule 121 (empty -> .)
    INOUT           reduce using rule 121 (empty -> .)
    OUT             reduce using rule 121 (empty -> .)
    VAR             reduce using rule 121 (empty -> .)
    BEGIN           reduce using rule 121 (empty -> .)
    END             reduce using rule 121 (empty -> .)

    declaracionConstanteCONST      shift and go to state 100
    empty                          shift and go to state 13

state 65

    (107) listaIdParentesis -> ( listaId . )
    (15) listaId -> listaId . , ID
    )               shift and go to state 101
    ,               shift and go to state 50


state 66

    (69) modulo -> MODULE ID ; declaracionTipoPuntoComa declaracionConstanteCONST declaracionVariableIN declaracionVariableINOUT declaracionVariableOUT declaracionVariableVAR . sentenciaSecuenciaBEGIN END ID .
    (92) sentenciaSecuenciaBEGIN -> . empty
    (93) sentenciaSecuenciaBEGIN -> . BEGIN sentenciaSecuencia
    (121) empty -> .
    BEGIN           shift and go to state 104
    END             reduce using rule 121 (empty -> .)

    sentenciaSecuenciaBEGIN        shift and go to state 102
    empty                          shift and go to state 103

state 67

    (90) declaracionVariableVAR -> empty .
    BEGIN           reduce using rule 90 (declaracionVariableVAR -> empty .)
    END             reduce using rule 90 (declaracionVariableVAR -> empty .)


state 68

    (91) declaracionVariableVAR -> VAR . declaracionVariableRecursivo
    (82) declaracionVariableRecursivo -> . empty
    (83) declaracionVariableRecursivo -> . declaracionVariableRecursivoR
    (121) empty -> .
    (84) declaracionVariableRecursivoR -> . declaracionVariable
    (85) declaracionVariableRecursivoR -> . declaracionVariableRecursivoR declaracionVariable
    (14) declaracionVariable -> . listaId : tipo ;
    (15) listaId -> . listaId , ID
    (16) listaId -> . ID
    BEGIN           reduce using rule 121 (empty -> .)
    END             reduce using rule 121 (empty -> .)
    ID              shift and go to state 38

    declaracionVariableRecursivo   shift and go to state 105
    empty                          shift and go to state 34
    declaracionVariableRecursivoR  shift and go to state 35
    declaracionVariable            shift and go to state 36
    listaId                        shift and go to state 37

state 69

    (89) declaracionVariableOUT -> OUT declaracionVariableRecursivo .
    VAR             reduce using rule 89 (declaracionVariableOUT -> OUT declaracionVariableRecursivo .)
    BEGIN           reduce using rule 89 (declaracionVariableOUT -> OUT declaracionVariableRecursivo .)
    END             reduce using rule 89 (declaracionVariableOUT -> OUT declaracionVariableRecursivo .)


state 70

    (14) declaracionVariable -> listaId : tipo . ;
    ;               shift and go to state 106


state 71

    (11) tipo -> tipoSimple .
    ;               reduce using rule 11 (tipo -> tipoSimple .)


state 72

    (12) tipo -> [ . expresion ] tipo
    (42) expresion -> . termino
    (43) expresion -> . expresion - termino
    (44) expresion -> . expresion + termino
    (36) termino -> . factor
    (37) termino -> . termino simbolosProd factor
    (24) factor -> . SR ( expresion , expresion )
    (25) factor -> . LATCH ( expresion , expresion )
    (26) factor -> . REG ( expresion , expresion )
    (27) factor -> . REG ( expresion )
    (28) factor -> . MUX ( expresion , expresion : expresion , expresion , expresion , expresion )
    (29) factor -> . MUX ( expresion : expresion , expresion )
    (30) factor -> . ( expresion )
    (31) factor -> . ~ factor
    (32) factor -> . FLECHAARRIBA factor
    (33) factor -> . INTEGER
    (34) factor -> . LOGICVALUE
    (35) factor -> . ID selector
    SR              shift and go to state 55
    LATCH           shift and go to state 57
    REG             shift and go to state 58
    MUX             shift and go to state 59
    (               shift and go to state 56
    ~               shift and go to state 60
    FLECHAARRIBA    shift and go to state 61
    INTEGER         shift and go to state 62
    LOGICVALUE      shift and go to state 63
    ID              shift and go to state 51

    expresion                      shift and go to state 107
    termino                        shift and go to state 53
    factor                         shift and go to state 54

state 73

    (3) tipoSimple -> ID .
    (4) tipoSimple -> ID . ( listaExpresiones )
    ;               reduce using rule 3 (tipoSimple -> ID .)
    (               shift and go to state 108


state 74

    (5) tipoSimple -> tipoBasico .
    ;               reduce using rule 5 (tipoSimple -> tipoBasico .)


state 75

    (6) tipoBasico -> OC .
    ;               reduce using rule 6 (tipoBasico -> OC .)


state 76

    (7) tipoBasico -> TS .
    ;               reduce using rule 7 (tipoBasico -> TS .)


state 77

    (8) tipoBasico -> BIT .
    ;               reduce using rule 8 (tipoBasico -> BIT .)


state 78

    (15) listaId -> listaId , ID .
    :               reduce using rule 15 (listaId -> listaId , ID .)
    ,               reduce using rule 15 (listaId -> listaId , ID .)
    )               reduce using rule 15 (listaId -> listaId , ID .)


state 79

    (35) factor -> ID selector .
    MOD             reduce using rule 35 (factor -> ID selector .)
    DIV             reduce using rule 35 (factor -> ID selector .)
    /               reduce using rule 35 (factor -> ID selector .)
    *               reduce using rule 35 (factor -> ID selector .)
    ;               reduce using rule 35 (factor -> ID selector .)
    -               reduce using rule 35 (factor -> ID selector .)
    +               reduce using rule 35 (factor -> ID selector .)
    )               reduce using rule 35 (factor -> ID selector .)
    ]               reduce using rule 35 (factor -> ID selector .)
    ,               reduce using rule 35 (factor -> ID selector .)
    :               reduce using rule 35 (factor -> ID selector .)
    MAYORIGUAL      reduce using rule 35 (factor -> ID selector .)
    >               reduce using rule 35 (factor -> ID selector .)
    MENORIGUAL      reduce using rule 35 (factor -> ID selector .)
    <               reduce using rule 35 (factor -> ID selector .)
    #               reduce using rule 35 (factor -> ID selector .)
    =               reduce using rule 35 (factor -> ID selector .)
    DOBLEPUNTO      reduce using rule 35 (factor -> ID selector .)
    END             reduce using rule 35 (factor -> ID selector .)
    ELSIF           reduce using rule 35 (factor -> ID selector .)
    ELSE            reduce using rule 35 (factor -> ID selector .)
    |               reduce using rule 35 (factor -> ID selector .)
    THEN            reduce using rule 35 (factor -> ID selector .)
    DO              reduce using rule 35 (factor -> ID selector .)


state 80

    (17) selector -> empty .
    MOD             reduce using rule 17 (selector -> empty .)
    DIV             reduce using rule 17 (selector -> empty .)
    /               reduce using rule 17 (selector -> empty .)
    *               reduce using rule 17 (selector -> empty .)
    ;               reduce using rule 17 (selector -> empty .)
    -               reduce using rule 17 (selector -> empty .)
    +               reduce using rule 17 (selector -> empty .)
    )               reduce using rule 17 (selector -> empty .)
    ]               reduce using rule 17 (selector -> empty .)
    ,               reduce using rule 17 (selector -> empty .)
    :               reduce using rule 17 (selector -> empty .)
    MAYORIGUAL      reduce using rule 17 (selector -> empty .)
    >               reduce using rule 17 (selector -> empty .)
    MENORIGUAL      reduce using rule 17 (selector -> empty .)
    <               reduce using rule 17 (selector -> empty .)
    #               reduce using rule 17 (selector -> empty .)
    =               reduce using rule 17 (selector -> empty .)
    DOBLEPUNTO      reduce using rule 17 (selector -> empty .)
    END             reduce using rule 17 (selector -> empty .)
    ELSIF           reduce using rule 17 (selector -> empty .)
    ELSE            reduce using rule 17 (selector -> empty .)
    |               reduce using rule 17 (selector -> empty .)
    THEN            reduce using rule 17 (selector -> empty .)
    DO              reduce using rule 17 (selector -> empty .)
    (               reduce using rule 17 (selector -> empty .)
    DOSPUNTOSIGUAL  reduce using rule 17 (selector -> empty .)


state 81

    (18) selector -> selectorR .
    (20) selectorR -> selectorR . selectorRR
    (21) selectorRR -> . [ expresion ]
    (22) selectorRR -> . . INTEGER
    (23) selectorRR -> . . ID
    MOD             reduce using rule 18 (selector -> selectorR .)
    DIV             reduce using rule 18 (selector -> selectorR .)
    /               reduce using rule 18 (selector -> selectorR .)
    *               reduce using rule 18 (selector -> selectorR .)
    ;               reduce using rule 18 (selector -> selectorR .)
    -               reduce using rule 18 (selector -> selectorR .)
    +               reduce using rule 18 (selector -> selectorR .)
    )               reduce using rule 18 (selector -> selectorR .)
    ]               reduce using rule 18 (selector -> selectorR .)
    ,               reduce using rule 18 (selector -> selectorR .)
    :               reduce using rule 18 (selector -> selectorR .)
    MAYORIGUAL      reduce using rule 18 (selector -> selectorR .)
    >               reduce using rule 18 (selector -> selectorR .)
    MENORIGUAL      reduce using rule 18 (selector -> selectorR .)
    <               reduce using rule 18 (selector -> selectorR .)
    #               reduce using rule 18 (selector -> selectorR .)
    =               reduce using rule 18 (selector -> selectorR .)
    DOBLEPUNTO      reduce using rule 18 (selector -> selectorR .)
    END             reduce using rule 18 (selector -> selectorR .)
    ELSIF           reduce using rule 18 (selector -> selectorR .)
    ELSE            reduce using rule 18 (selector -> selectorR .)
    |               reduce using rule 18 (selector -> selectorR .)
    THEN            reduce using rule 18 (selector -> selectorR .)
    DO              reduce using rule 18 (selector -> selectorR .)
    (               reduce using rule 18 (selector -> selectorR .)
    DOSPUNTOSIGUAL  reduce using rule 18 (selector -> selectorR .)
    [               shift and go to state 83
    .               shift and go to state 84

    selectorRR                     shift and go to state 109

state 82

    (19) selectorR -> selectorRR .
    [               reduce using rule 19 (selectorR -> selectorRR .)
    .               reduce using rule 19 (selectorR -> selectorRR .)
    MOD             reduce using rule 19 (selectorR -> selectorRR .)
    DIV             reduce using rule 19 (selectorR -> selectorRR .)
    /               reduce using rule 19 (selectorR -> selectorRR .)
    *               reduce using rule 19 (selectorR -> selectorRR .)
    ;               reduce using rule 19 (selectorR -> selectorRR .)
    -               reduce using rule 19 (selectorR -> selectorRR .)
    +               reduce using rule 19 (selectorR -> selectorRR .)
    )               reduce using rule 19 (selectorR -> selectorRR .)
    ]               reduce using rule 19 (selectorR -> selectorRR .)
    ,               reduce using rule 19 (selectorR -> selectorRR .)
    :               reduce using rule 19 (selectorR -> selectorRR .)
    MAYORIGUAL      reduce using rule 19 (selectorR -> selectorRR .)
    >               reduce using rule 19 (selectorR -> selectorRR .)
    MENORIGUAL      reduce using rule 19 (selectorR -> selectorRR .)
    <               reduce using rule 19 (selectorR -> selectorRR .)
    #               reduce using rule 19 (selectorR -> selectorRR .)
    =               reduce using rule 19 (selectorR -> selectorRR .)
    DOBLEPUNTO      reduce using rule 19 (selectorR -> selectorRR .)
    END             reduce using rule 19 (selectorR -> selectorRR .)
    ELSIF           reduce using rule 19 (selectorR -> selectorRR .)
    ELSE            reduce using rule 19 (selectorR -> selectorRR .)
    |               reduce using rule 19 (selectorR -> selectorRR .)
    THEN            reduce using rule 19 (selectorR -> selectorRR .)
    DO              reduce using rule 19 (selectorR -> selectorRR .)
    (               reduce using rule 19 (selectorR -> selectorRR .)
    DOSPUNTOSIGUAL  reduce using rule 19 (selectorR -> selectorRR .)


state 83

    (21) selectorRR -> [ . expresion ]
    (42) expresion -> . termino
    (43) expresion -> . expresion - termino
    (44) expresion -> . expresion + termino
    (36) termino -> . factor
    (37) termino -> . termino simbolosProd factor
    (24) factor -> . SR ( expresion , expresion )
    (25) factor -> . LATCH ( expresion , expresion )
    (26) factor -> . REG ( expresion , expresion )
    (27) factor -> . REG ( expresion )
    (28) factor -> . MUX ( expresion , expresion : expresion , expresion , expresion , expresion )
    (29) factor -> . MUX ( expresion : expresion , expresion )
    (30) factor -> . ( expresion )
    (31) factor -> . ~ factor
    (32) factor -> . FLECHAARRIBA factor
    (33) factor -> . INTEGER
    (34) factor -> . LOGICVALUE
    (35) factor -> . ID selector
    SR              shift and go to state 55
    LATCH           shift and go to state 57
    REG             shift and go to state 58
    MUX             shift and go to state 59
    (               shift and go to state 56
    ~               shift and go to state 60
    FLECHAARRIBA    shift and go to state 61
    INTEGER         shift and go to state 62
    LOGICVALUE      shift and go to state 63
    ID              shift and go to state 51

    expresion                      shift and go to state 110
    termino                        shift and go to state 53
    factor                         shift and go to state 54

state 84

    (22) selectorRR -> . . INTEGER
    (23) selectorRR -> . . ID
    INTEGER         shift and go to state 111
    ID              shift and go to state 112


state 85

    (13) declaracionConstante -> ID DOSPUNTOSIGUAL expresion ; .
    ID              reduce using rule 13 (declaracionConstante -> ID DOSPUNTOSIGUAL expresion ; .)
    IN              reduce using rule 13 (declaracionConstante -> ID DOSPUNTOSIGUAL expresion ; .)
    INOUT           reduce using rule 13 (declaracionConstante -> ID DOSPUNTOSIGUAL expresion ; .)
    OUT             reduce using rule 13 (declaracionConstante -> ID DOSPUNTOSIGUAL expresion ; .)
    VAR             reduce using rule 13 (declaracionConstante -> ID DOSPUNTOSIGUAL expresion ; .)
    BEGIN           reduce using rule 13 (declaracionConstante -> ID DOSPUNTOSIGUAL expresion ; .)
    END             reduce using rule 13 (declaracionConstante -> ID DOSPUNTOSIGUAL expresion ; .)


state 86

    (43) expresion -> expresion - . termino
    (36) termino -> . factor
    (37) termino -> . termino simbolosProd factor
    (24) factor -> . SR ( expresion , expresion )
    (25) factor -> . LATCH ( expresion , expresion )
    (26) factor -> . REG ( expresion , expresion )
    (27) factor -> . REG ( expresion )
    (28) factor -> . MUX ( expresion , expresion : expresion , expresion , expresion , expresion )
    (29) factor -> . MUX ( expresion : expresion , expresion )
    (30) factor -> . ( expresion )
    (31) factor -> . ~ factor
    (32) factor -> . FLECHAARRIBA factor
    (33) factor -> . INTEGER
    (34) factor -> . LOGICVALUE
    (35) factor -> . ID selector
    SR              shift and go to state 55
    LATCH           shift and go to state 57
    REG             shift and go to state 58
    MUX             shift and go to state 59
    (               shift and go to state 56
    ~               shift and go to state 60
    FLECHAARRIBA    shift and go to state 61
    INTEGER         shift and go to state 62
    LOGICVALUE      shift and go to state 63
    ID              shift and go to state 51

    termino                        shift and go to state 113
    factor                         shift and go to state 54

state 87

    (44) expresion -> expresion + . termino
    (36) termino -> . factor
    (37) termino -> . termino simbolosProd factor
    (24) factor -> . SR ( expresion , expresion )
    (25) factor -> . LATCH ( expresion , expresion )
    (26) factor -> . REG ( expresion , expresion )
    (27) factor -> . REG ( expresion )
    (28) factor -> . MUX ( expresion , expresion : expresion , expresion , expresion , expresion )
    (29) factor -> . MUX ( expresion : expresion , expresion )
    (30) factor -> . ( expresion )
    (31) factor -> . ~ factor
    (32) factor -> . FLECHAARRIBA factor
    (33) factor -> . INTEGER
    (34) factor -> . LOGICVALUE
    (35) factor -> . ID selector
    SR              shift and go to state 55
    LATCH           shift and go to state 57
    REG             shift and go to state 58
    MUX             shift and go to state 59
    (               shift and go to state 56
    ~               shift and go to state 60
    FLECHAARRIBA    shift and go to state 61
    INTEGER         shift and go to state 62
    LOGICVALUE      shift and go to state 63
    ID              shift and go to state 51

    termino                        shift and go to state 114
    factor                         shift and go to state 54

state 88

    (37) termino -> termino simbolosProd . factor
    (24) factor -> . SR ( expresion , expresion )
    (25) factor -> . LATCH ( expresion , expresion )
    (26) factor -> . REG ( expresion , expresion )
    (27) factor -> . REG ( expresion )
    (28) factor -> . MUX ( expresion , expresion : expresion , expresion , expresion , expresion )
    (29) factor -> . MUX ( expresion : expresion , expresion )
    (30) factor -> . ( expresion )
    (31) factor -> . ~ factor
    (32) factor -> . FLECHAARRIBA factor
    (33) factor -> . INTEGER
    (34) factor -> . LOGICVALUE
    (35) factor -> . ID selector
    SR              shift and go to state 55
    LATCH           shift and go to state 57
    REG             shift and go to state 58
    MUX             shift and go to state 59
    (               shift and go to state 56
    ~               shift and go to state 60
    FLECHAARRIBA    shift and go to state 61
    INTEGER         shift and go to state 62
    LOGICVALUE      shift and go to state 63
    ID              shift and go to state 51

    factor                         shift and go to state 115

state 89

    (38) simbolosProd -> MOD .
    SR              reduce using rule 38 (simbolosProd -> MOD .)
    LATCH           reduce using rule 38 (simbolosProd -> MOD .)
    REG             reduce using rule 38 (simbolosProd -> MOD .)
    MUX             reduce using rule 38 (simbolosProd -> MOD .)
    (               reduce using rule 38 (simbolosProd -> MOD .)
    ~               reduce using rule 38 (simbolosProd -> MOD .)
    FLECHAARRIBA    reduce using rule 38 (simbolosProd -> MOD .)
    INTEGER         reduce using rule 38 (simbolosProd -> MOD .)
    LOGICVALUE      reduce using rule 38 (simbolosProd -> MOD .)
    ID              reduce using rule 38 (simbolosProd -> MOD .)


state 90

    (39) simbolosProd -> DIV .
    SR              reduce using rule 39 (simbolosProd -> DIV .)
    LATCH           reduce using rule 39 (simbolosProd -> DIV .)
    REG             reduce using rule 39 (simbolosProd -> DIV .)
    MUX             reduce using rule 39 (simbolosProd -> DIV .)
    (               reduce using rule 39 (simbolosProd -> DIV .)
    ~               reduce using rule 39 (simbolosProd -> DIV .)
    FLECHAARRIBA    reduce using rule 39 (simbolosProd -> DIV .)
    INTEGER         reduce using rule 39 (simbolosProd -> DIV .)
    LOGICVALUE      reduce using rule 39 (simbolosProd -> DIV .)
    ID              reduce using rule 39 (simbolosProd -> DIV .)


state 91

    (40) simbolosProd -> / .
    SR              reduce using rule 40 (simbolosProd -> / .)
    LATCH           reduce using rule 40 (simbolosProd -> / .)
    REG             reduce using rule 40 (simbolosProd -> / .)
    MUX             reduce using rule 40 (simbolosProd -> / .)
    (               reduce using rule 40 (simbolosProd -> / .)
    ~               reduce using rule 40 (simbolosProd -> / .)
    FLECHAARRIBA    reduce using rule 40 (simbolosProd -> / .)
    INTEGER         reduce using rule 40 (simbolosProd -> / .)
    LOGICVALUE      reduce using rule 40 (simbolosProd -> / .)
    ID              reduce using rule 40 (simbolosProd -> / .)


state 92

    (41) simbolosProd -> * .
    SR              reduce using rule 41 (simbolosProd -> * .)
    LATCH           reduce using rule 41 (simbolosProd -> * .)
    REG             reduce using rule 41 (simbolosProd -> * .)
    MUX             reduce using rule 41 (simbolosProd -> * .)
    (               reduce using rule 41 (simbolosProd -> * .)
    ~               reduce using rule 41 (simbolosProd -> * .)
    FLECHAARRIBA    reduce using rule 41 (simbolosProd -> * .)
    INTEGER         reduce using rule 41 (simbolosProd -> * .)
    LOGICVALUE      reduce using rule 41 (simbolosProd -> * .)
    ID              reduce using rule 41 (simbolosProd -> * .)


state 93

    (24) factor -> SR ( . expresion , expresion )
    (42) expresion -> . termino
    (43) expresion -> . expresion - termino
    (44) expresion -> . expresion + termino
    (36) termino -> . factor
    (37) termino -> . termino simbolosProd factor
    (24) factor -> . SR ( expresion , expresion )
    (25) factor -> . LATCH ( expresion , expresion )
    (26) factor -> . REG ( expresion , expresion )
    (27) factor -> . REG ( expresion )
    (28) factor -> . MUX ( expresion , expresion : expresion , expresion , expresion , expresion )
    (29) factor -> . MUX ( expresion : expresion , expresion )
    (30) factor -> . ( expresion )
    (31) factor -> . ~ factor
    (32) factor -> . FLECHAARRIBA factor
    (33) factor -> . INTEGER
    (34) factor -> . LOGICVALUE
    (35) factor -> . ID selector
    SR              shift and go to state 55
    LATCH           shift and go to state 57
    REG             shift and go to state 58
    MUX             shift and go to state 59
    (               shift and go to state 56
    ~               shift and go to state 60
    FLECHAARRIBA    shift and go to state 61
    INTEGER         shift and go to state 62
    LOGICVALUE      shift and go to state 63
    ID              shift and go to state 51

    expresion                      shift and go to state 116
    termino                        shift and go to state 53
    factor                         shift and go to state 54

state 94

    (30) factor -> ( expresion . )
    (43) expresion -> expresion . - termino
    (44) expresion -> expresion . + termino
    )               shift and go to state 117
    -               shift and go to state 86
    +               shift and go to state 87


state 95

    (25) factor -> LATCH ( . expresion , expresion )
    (42) expresion -> . termino
    (43) expresion -> . expresion - termino
    (44) expresion -> . expresion + termino
    (36) termino -> . factor
    (37) termino -> . termino simbolosProd factor
    (24) factor -> . SR ( expresion , expresion )
    (25) factor -> . LATCH ( expresion , expresion )
    (26) factor -> . REG ( expresion , expresion )
    (27) factor -> . REG ( expresion )
    (28) factor -> . MUX ( expresion , expresion : expresion , expresion , expresion , expresion )
    (29) factor -> . MUX ( expresion : expresion , expresion )
    (30) factor -> . ( expresion )
    (31) factor -> . ~ factor
    (32) factor -> . FLECHAARRIBA factor
    (33) factor -> . INTEGER
    (34) factor -> . LOGICVALUE
    (35) factor -> . ID selector
    SR              shift and go to state 55
    LATCH           shift and go to state 57
    REG             shift and go to state 58
    MUX             shift and go to state 59
    (               shift and go to state 56
    ~               shift and go to state 60
    FLECHAARRIBA    shift and go to state 61
    INTEGER         shift and go to state 62
    LOGICVALUE      shift and go to state 63
    ID              shift and go to state 51

    expresion                      shift and go to state 118
    termino                        shift and go to state 53
    factor                         shift and go to state 54

state 96

    (26) factor -> REG ( . expresion , expresion )
    (27) factor -> REG ( . expresion )
    (42) expresion -> . termino
    (43) expresion -> . expresion - termino
    (44) expresion -> . expresion + termino
    (36) termino -> . factor
    (37) termino -> . termino simbolosProd factor
    (24) factor -> . SR ( expresion , expresion )
    (25) factor -> . LATCH ( expresion , expresion )
    (26) factor -> . REG ( expresion , expresion )
    (27) factor -> . REG ( expresion )
    (28) factor -> . MUX ( expresion , expresion : expresion , expresion , expresion , expresion )
    (29) factor -> . MUX ( expresion : expresion , expresion )
    (30) factor -> . ( expresion )
    (31) factor -> . ~ factor
    (32) factor -> . FLECHAARRIBA factor
    (33) factor -> . INTEGER
    (34) factor -> . LOGICVALUE
    (35) factor -> . ID selector
    SR              shift and go to state 55
    LATCH           shift and go to state 57
    REG             shift and go to state 58
    MUX             shift and go to state 59
    (               shift and go to state 56
    ~               shift and go to state 60
    FLECHAARRIBA    shift and go to state 61
    INTEGER         shift and go to state 62
    LOGICVALUE      shift and go to state 63
    ID              shift and go to state 51

    expresion                      shift and go to state 119
    termino                        shift and go to state 53
    factor                         shift and go to state 54

state 97

    (28) factor -> MUX ( . expresion , expresion : expresion , expresion , expresion , expresion )
    (29) factor -> MUX ( . expresion : expresion , expresion )
    (42) expresion -> . termino
    (43) expresion -> . expresion - termino
    (44) expresion -> . expresion + termino
    (36) termino -> . factor
    (37) termino -> . termino simbolosProd factor
    (24) factor -> . SR ( expresion , expresion )
    (25) factor -> . LATCH ( expresion , expresion )
    (26) factor -> . REG ( expresion , expresion )
    (27) factor -> . REG ( expresion )
    (28) factor -> . MUX ( expresion , expresion : expresion , expresion , expresion , expresion )
    (29) factor -> . MUX ( expresion : expresion , expresion )
    (30) factor -> . ( expresion )
    (31) factor -> . ~ factor
    (32) factor -> . FLECHAARRIBA factor
    (33) factor -> . INTEGER
    (34) factor -> . LOGICVALUE
    (35) factor -> . ID selector
    SR              shift and go to state 55
    LATCH           shift and go to state 57
    REG             shift and go to state 58
    MUX             shift and go to state 59
    (               shift and go to state 56
    ~               shift and go to state 60
    FLECHAARRIBA    shift and go to state 61
    INTEGER         shift and go to state 62
    LOGICVALUE      shift and go to state 63
    ID              shift and go to state 51

    expresion                      shift and go to state 120
    termino                        shift and go to state 53
    factor                         shift and go to state 54

state 98

    (31) factor -> ~ factor .
    MOD             reduce using rule 31 (factor -> ~ factor .)
    DIV             reduce using rule 31 (factor -> ~ factor .)
    /               reduce using rule 31 (factor -> ~ factor .)
    *               reduce using rule 31 (factor -> ~ factor .)
    ;               reduce using rule 31 (factor -> ~ factor .)
    -               reduce using rule 31 (factor -> ~ factor .)
    +               reduce using rule 31 (factor -> ~ factor .)
    )               reduce using rule 31 (factor -> ~ factor .)
    ]               reduce using rule 31 (factor -> ~ factor .)
    ,               reduce using rule 31 (factor -> ~ factor .)
    :               reduce using rule 31 (factor -> ~ factor .)
    MAYORIGUAL      reduce using rule 31 (factor -> ~ factor .)
    >               reduce using rule 31 (factor -> ~ factor .)
    MENORIGUAL      reduce using rule 31 (factor -> ~ factor .)
    <               reduce using rule 31 (factor -> ~ factor .)
    #               reduce using rule 31 (factor -> ~ factor .)
    =               reduce using rule 31 (factor -> ~ factor .)
    DOBLEPUNTO      reduce using rule 31 (factor -> ~ factor .)
    END             reduce using rule 31 (factor -> ~ factor .)
    ELSIF           reduce using rule 31 (factor -> ~ factor .)
    ELSE            reduce using rule 31 (factor -> ~ factor .)
    |               reduce using rule 31 (factor -> ~ factor .)
    THEN            reduce using rule 31 (factor -> ~ factor .)
    DO              reduce using rule 31 (factor -> ~ factor .)


state 99

    (32) factor -> FLECHAARRIBA factor .
    MOD             reduce using rule 32 (factor -> FLECHAARRIBA factor .)
    DIV             reduce using rule 32 (factor -> FLECHAARRIBA factor .)
    /               reduce using rule 32 (factor -> FLECHAARRIBA factor .)
    *               reduce using rule 32 (factor -> FLECHAARRIBA factor .)
    ;               reduce using rule 32 (factor -> FLECHAARRIBA factor .)
    -               reduce using rule 32 (factor -> FLECHAARRIBA factor .)
    +               reduce using rule 32 (factor -> FLECHAARRIBA factor .)
    )               reduce using rule 32 (factor -> FLECHAARRIBA factor .)
    ]               reduce using rule 32 (factor -> FLECHAARRIBA factor .)
    ,               reduce using rule 32 (factor -> FLECHAARRIBA factor .)
    :               reduce using rule 32 (factor -> FLECHAARRIBA factor .)
    MAYORIGUAL      reduce using rule 32 (factor -> FLECHAARRIBA factor .)
    >               reduce using rule 32 (factor -> FLECHAARRIBA factor .)
    MENORIGUAL      reduce using rule 32 (factor -> FLECHAARRIBA factor .)
    <               reduce using rule 32 (factor -> FLECHAARRIBA factor .)
    #               reduce using rule 32 (factor -> FLECHAARRIBA factor .)
    =               reduce using rule 32 (factor -> FLECHAARRIBA factor .)
    DOBLEPUNTO      reduce using rule 32 (factor -> FLECHAARRIBA factor .)
    END             reduce using rule 32 (factor -> FLECHAARRIBA factor .)
    ELSIF           reduce using rule 32 (factor -> FLECHAARRIBA factor .)
    ELSE            reduce using rule 32 (factor -> FLECHAARRIBA factor .)
    |               reduce using rule 32 (factor -> FLECHAARRIBA factor .)
    THEN            reduce using rule 32 (factor -> FLECHAARRIBA factor .)
    DO              reduce using rule 32 (factor -> FLECHAARRIBA factor .)


state 100

    (103) declaracionTipo -> TYPE ID simboloPor listaIdParentesis ; declaracionConstanteCONST . tipoFormalIN tipoFormlINOUT declaracionVariableOUT declaracionVariableVAR sentenciaSecuenciaBEGIN END ID
    (108) tipoFormalIN -> . empty
    (109) tipoFormalIN -> . IN tipoFormallistaId
    (121) empty -> .
    IN              shift and go to state 123
    INOUT           reduce using rule 121 (empty -> .)
    OUT             reduce using rule 121 (empty -> .)
    VAR             reduce using rule 121 (empty -> .)
    BEGIN           reduce using rule 121 (empty -> .)
    END             reduce using rule 121 (empty -> .)

    tipoFormalIN                   shift and go to state 121
    empty                          shift and go to state 122

state 101

    (107) listaIdParentesis -> ( listaId ) .
    ;               reduce using rule 107 (listaIdParentesis -> ( listaId ) .)


state 102

    (69) modulo -> MODULE ID ; declaracionTipoPuntoComa declaracionConstanteCONST declaracionVariableIN declaracionVariableINOUT declaracionVariableOUT declaracionVariableVAR sentenciaSecuenciaBEGIN . END ID .
    END             shift and go to state 124


state 103

    (92) sentenciaSecuenciaBEGIN -> empty .
    END             reduce using rule 92 (sentenciaSecuenciaBEGIN -> empty .)


state 104

    (93) sentenciaSecuenciaBEGIN -> BEGIN . sentenciaSecuencia
    (67) sentenciaSecuencia -> . sentencia
    (68) sentenciaSecuencia -> . sentenciaSecuencia ; sentencia
    (62) sentencia -> . empty
    (63) sentencia -> . sentenciaPara
    (64) sentencia -> . sentenciaSi
    (65) sentencia -> . asignacionUnidad
    (66) sentencia -> . asignacion
    (121) empty -> .
    (61) sentenciaPara -> . FOR ID DOSPUNTOSIGUAL expresion DOBLEPUNTO expresion DO sentenciaSecuencia END
    (54) sentenciaSi -> . IF relacion THEN sentenciaSecuencia sentenciaSiSino sentenciaSiEntonces END
    (120) asignacionUnidad -> . ID selector ( listaExpresiones )
    (45) asignacion -> . ID selector DOSPUNTOSIGUAL condicion | expresion
    (46) asignacion -> . ID selector DOSPUNTOSIGUAL expresion
    ;               reduce using rule 121 (empty -> .)
    END             reduce using rule 121 (empty -> .)
    FOR             shift and go to state 132
    IF              shift and go to state 134
    ID              shift and go to state 133

    sentenciaSecuencia             shift and go to state 125
    sentencia                      shift and go to state 126
    empty                          shift and go to state 127
    sentenciaPara                  shift and go to state 128
    sentenciaSi                    shift and go to state 129
    asignacionUnidad               shift and go to state 130
    asignacion                     shift and go to state 131

state 105

    (91) declaracionVariableVAR -> VAR declaracionVariableRecursivo .
    BEGIN           reduce using rule 91 (declaracionVariableVAR -> VAR declaracionVariableRecursivo .)
    END             reduce using rule 91 (declaracionVariableVAR -> VAR declaracionVariableRecursivo .)


state 106

    (14) declaracionVariable -> listaId : tipo ; .
    ID              reduce using rule 14 (declaracionVariable -> listaId : tipo ; .)
    INOUT           reduce using rule 14 (declaracionVariable -> listaId : tipo ; .)
    OUT             reduce using rule 14 (declaracionVariable -> listaId : tipo ; .)
    VAR             reduce using rule 14 (declaracionVariable -> listaId : tipo ; .)
    BEGIN           reduce using rule 14 (declaracionVariable -> listaId : tipo ; .)
    END             reduce using rule 14 (declaracionVariable -> listaId : tipo ; .)


state 107

    (12) tipo -> [ expresion . ] tipo
    (43) expresion -> expresion . - termino
    (44) expresion -> expresion . + termino
    ]               shift and go to state 135
    -               shift and go to state 86
    +               shift and go to state 87


state 108

    (4) tipoSimple -> ID ( . listaExpresiones )
    (9) listaExpresiones -> . expresion
    (10) listaExpresiones -> . listaExpresiones , expresion
    (42) expresion -> . termino
    (43) expresion -> . expresion - termino
    (44) expresion -> . expresion + termino
    (36) termino -> . factor
    (37) termino -> . termino simbolosProd factor
    (24) factor -> . SR ( expresion , expresion )
    (25) factor -> . LATCH ( expresion , expresion )
    (26) factor -> . REG ( expresion , expresion )
    (27) factor -> . REG ( expresion )
    (28) factor -> . MUX ( expresion , expresion : expresion , expresion , expresion , expresion )
    (29) factor -> . MUX ( expresion : expresion , expresion )
    (30) factor -> . ( expresion )
    (31) factor -> . ~ factor
    (32) factor -> . FLECHAARRIBA factor
    (33) factor -> . INTEGER
    (34) factor -> . LOGICVALUE
    (35) factor -> . ID selector
    SR              shift and go to state 55
    LATCH           shift and go to state 57
    REG             shift and go to state 58
    MUX             shift and go to state 59
    (               shift and go to state 56
    ~               shift and go to state 60
    FLECHAARRIBA    shift and go to state 61
    INTEGER         shift and go to state 62
    LOGICVALUE      shift and go to state 63
    ID              shift and go to state 51

    listaExpresiones               shift and go to state 136
    expresion                      shift and go to state 137
    termino                        shift and go to state 53
    factor                         shift and go to state 54

state 109

    (20) selectorR -> selectorR selectorRR .
    [               reduce using rule 20 (selectorR -> selectorR selectorRR .)
    .               reduce using rule 20 (selectorR -> selectorR selectorRR .)
    MOD             reduce using rule 20 (selectorR -> selectorR selectorRR .)
    DIV             reduce using rule 20 (selectorR -> selectorR selectorRR .)
    /               reduce using rule 20 (selectorR -> selectorR selectorRR .)
    *               reduce using rule 20 (selectorR -> selectorR selectorRR .)
    ;               reduce using rule 20 (selectorR -> selectorR selectorRR .)
    -               reduce using rule 20 (selectorR -> selectorR selectorRR .)
    +               reduce using rule 20 (selectorR -> selectorR selectorRR .)
    )               reduce using rule 20 (selectorR -> selectorR selectorRR .)
    ]               reduce using rule 20 (selectorR -> selectorR selectorRR .)
    ,               reduce using rule 20 (selectorR -> selectorR selectorRR .)
    :               reduce using rule 20 (selectorR -> selectorR selectorRR .)
    MAYORIGUAL      reduce using rule 20 (selectorR -> selectorR selectorRR .)
    >               reduce using rule 20 (selectorR -> selectorR selectorRR .)
    MENORIGUAL      reduce using rule 20 (selectorR -> selectorR selectorRR .)
    <               reduce using rule 20 (selectorR -> selectorR selectorRR .)
    #               reduce using rule 20 (selectorR -> selectorR selectorRR .)
    =               reduce using rule 20 (selectorR -> selectorR selectorRR .)
    DOBLEPUNTO      reduce using rule 20 (selectorR -> selectorR selectorRR .)
    END             reduce using rule 20 (selectorR -> selectorR selectorRR .)
    ELSIF           reduce using rule 20 (selectorR -> selectorR selectorRR .)
    ELSE            reduce using rule 20 (selectorR -> selectorR selectorRR .)
    |               reduce using rule 20 (selectorR -> selectorR selectorRR .)
    THEN            reduce using rule 20 (selectorR -> selectorR selectorRR .)
    DO              reduce using rule 20 (selectorR -> selectorR selectorRR .)
    (               reduce using rule 20 (selectorR -> selectorR selectorRR .)
    DOSPUNTOSIGUAL  reduce using rule 20 (selectorR -> selectorR selectorRR .)


state 110

    (21) selectorRR -> [ expresion . ]
    (43) expresion -> expresion . - termino
    (44) expresion -> expresion . + termino
    ]               shift and go to state 138
    -               shift and go to state 86
    +               shift and go to state 87


state 111

    (22) selectorRR -> . INTEGER .
    [               reduce using rule 22 (selectorRR -> . INTEGER .)
    .               reduce using rule 22 (selectorRR -> . INTEGER .)
    MOD             reduce using rule 22 (selectorRR -> . INTEGER .)
    DIV             reduce using rule 22 (selectorRR -> . INTEGER .)
    /               reduce using rule 22 (selectorRR -> . INTEGER .)
    *               reduce using rule 22 (selectorRR -> . INTEGER .)
    ;               reduce using rule 22 (selectorRR -> . INTEGER .)
    -               reduce using rule 22 (selectorRR -> . INTEGER .)
    +               reduce using rule 22 (selectorRR -> . INTEGER .)
    )               reduce using rule 22 (selectorRR -> . INTEGER .)
    ]               reduce using rule 22 (selectorRR -> . INTEGER .)
    ,               reduce using rule 22 (selectorRR -> . INTEGER .)
    :               reduce using rule 22 (selectorRR -> . INTEGER .)
    MAYORIGUAL      reduce using rule 22 (selectorRR -> . INTEGER .)
    >               reduce using rule 22 (selectorRR -> . INTEGER .)
    MENORIGUAL      reduce using rule 22 (selectorRR -> . INTEGER .)
    <               reduce using rule 22 (selectorRR -> . INTEGER .)
    #               reduce using rule 22 (selectorRR -> . INTEGER .)
    =               reduce using rule 22 (selectorRR -> . INTEGER .)
    DOBLEPUNTO      reduce using rule 22 (selectorRR -> . INTEGER .)
    END             reduce using rule 22 (selectorRR -> . INTEGER .)
    ELSIF           reduce using rule 22 (selectorRR -> . INTEGER .)
    ELSE            reduce using rule 22 (selectorRR -> . INTEGER .)
    |               reduce using rule 22 (selectorRR -> . INTEGER .)
    THEN            reduce using rule 22 (selectorRR -> . INTEGER .)
    DO              reduce using rule 22 (selectorRR -> . INTEGER .)
    (               reduce using rule 22 (selectorRR -> . INTEGER .)
    DOSPUNTOSIGUAL  reduce using rule 22 (selectorRR -> . INTEGER .)


state 112

    (23) selectorRR -> . ID .
    [               reduce using rule 23 (selectorRR -> . ID .)
    .               reduce using rule 23 (selectorRR -> . ID .)
    MOD             reduce using rule 23 (selectorRR -> . ID .)
    DIV             reduce using rule 23 (selectorRR -> . ID .)
    /               reduce using rule 23 (selectorRR -> . ID .)
    *               reduce using rule 23 (selectorRR -> . ID .)
    ;               reduce using rule 23 (selectorRR -> . ID .)
    -               reduce using rule 23 (selectorRR -> . ID .)
    +               reduce using rule 23 (selectorRR -> . ID .)
    )               reduce using rule 23 (selectorRR -> . ID .)
    ]               reduce using rule 23 (selectorRR -> . ID .)
    ,               reduce using rule 23 (selectorRR -> . ID .)
    :               reduce using rule 23 (selectorRR -> . ID .)
    MAYORIGUAL      reduce using rule 23 (selectorRR -> . ID .)
    >               reduce using rule 23 (selectorRR -> . ID .)
    MENORIGUAL      reduce using rule 23 (selectorRR -> . ID .)
    <               reduce using rule 23 (selectorRR -> . ID .)
    #               reduce using rule 23 (selectorRR -> . ID .)
    =               reduce using rule 23 (selectorRR -> . ID .)
    DOBLEPUNTO      reduce using rule 23 (selectorRR -> . ID .)
    END             reduce using rule 23 (selectorRR -> . ID .)
    ELSIF           reduce using rule 23 (selectorRR -> . ID .)
    ELSE            reduce using rule 23 (selectorRR -> . ID .)
    |               reduce using rule 23 (selectorRR -> . ID .)
    THEN            reduce using rule 23 (selectorRR -> . ID .)
    DO              reduce using rule 23 (selectorRR -> . ID .)
    (               reduce using rule 23 (selectorRR -> . ID .)
    DOSPUNTOSIGUAL  reduce using rule 23 (selectorRR -> . ID .)


state 113

    (43) expresion -> expresion - termino .
    (37) termino -> termino . simbolosProd factor
    (38) simbolosProd -> . MOD
    (39) simbolosProd -> . DIV
    (40) simbolosProd -> . /
    (41) simbolosProd -> . *
    ;               reduce using rule 43 (expresion -> expresion - termino .)
    -               reduce using rule 43 (expresion -> expresion - termino .)
    +               reduce using rule 43 (expresion -> expresion - termino .)
    )               reduce using rule 43 (expresion -> expresion - termino .)
    ]               reduce using rule 43 (expresion -> expresion - termino .)
    ,               reduce using rule 43 (expresion -> expresion - termino .)
    :               reduce using rule 43 (expresion -> expresion - termino .)
    MAYORIGUAL      reduce using rule 43 (expresion -> expresion - termino .)
    >               reduce using rule 43 (expresion -> expresion - termino .)
    MENORIGUAL      reduce using rule 43 (expresion -> expresion - termino .)
    <               reduce using rule 43 (expresion -> expresion - termino .)
    #               reduce using rule 43 (expresion -> expresion - termino .)
    =               reduce using rule 43 (expresion -> expresion - termino .)
    DOBLEPUNTO      reduce using rule 43 (expresion -> expresion - termino .)
    END             reduce using rule 43 (expresion -> expresion - termino .)
    ELSIF           reduce using rule 43 (expresion -> expresion - termino .)
    ELSE            reduce using rule 43 (expresion -> expresion - termino .)
    |               reduce using rule 43 (expresion -> expresion - termino .)
    THEN            reduce using rule 43 (expresion -> expresion - termino .)
    DO              reduce using rule 43 (expresion -> expresion - termino .)
    MOD             shift and go to state 89
    DIV             shift and go to state 90
    /               shift and go to state 91
    *               shift and go to state 92

    simbolosProd                   shift and go to state 88

state 114

    (44) expresion -> expresion + termino .
    (37) termino -> termino . simbolosProd factor
    (38) simbolosProd -> . MOD
    (39) simbolosProd -> . DIV
    (40) simbolosProd -> . /
    (41) simbolosProd -> . *
    ;               reduce using rule 44 (expresion -> expresion + termino .)
    -               reduce using rule 44 (expresion -> expresion + termino .)
    +               reduce using rule 44 (expresion -> expresion + termino .)
    )               reduce using rule 44 (expresion -> expresion + termino .)
    ]               reduce using rule 44 (expresion -> expresion + termino .)
    ,               reduce using rule 44 (expresion -> expresion + termino .)
    :               reduce using rule 44 (expresion -> expresion + termino .)
    MAYORIGUAL      reduce using rule 44 (expresion -> expresion + termino .)
    >               reduce using rule 44 (expresion -> expresion + termino .)
    MENORIGUAL      reduce using rule 44 (expresion -> expresion + termino .)
    <               reduce using rule 44 (expresion -> expresion + termino .)
    #               reduce using rule 44 (expresion -> expresion + termino .)
    =               reduce using rule 44 (expresion -> expresion + termino .)
    DOBLEPUNTO      reduce using rule 44 (expresion -> expresion + termino .)
    END             reduce using rule 44 (expresion -> expresion + termino .)
    ELSIF           reduce using rule 44 (expresion -> expresion + termino .)
    ELSE            reduce using rule 44 (expresion -> expresion + termino .)
    |               reduce using rule 44 (expresion -> expresion + termino .)
    THEN            reduce using rule 44 (expresion -> expresion + termino .)
    DO              reduce using rule 44 (expresion -> expresion + termino .)
    MOD             shift and go to state 89
    DIV             shift and go to state 90
    /               shift and go to state 91
    *               shift and go to state 92

    simbolosProd                   shift and go to state 88

state 115

    (37) termino -> termino simbolosProd factor .
    MOD             reduce using rule 37 (termino -> termino simbolosProd factor .)
    DIV             reduce using rule 37 (termino -> termino simbolosProd factor .)
    /               reduce using rule 37 (termino -> termino simbolosProd factor .)
    *               reduce using rule 37 (termino -> termino simbolosProd factor .)
    ;               reduce using rule 37 (termino -> termino simbolosProd factor .)
    -               reduce using rule 37 (termino -> termino simbolosProd factor .)
    +               reduce using rule 37 (termino -> termino simbolosProd factor .)
    )               reduce using rule 37 (termino -> termino simbolosProd factor .)
    ]               reduce using rule 37 (termino -> termino simbolosProd factor .)
    ,               reduce using rule 37 (termino -> termino simbolosProd factor .)
    :               reduce using rule 37 (termino -> termino simbolosProd factor .)
    MAYORIGUAL      reduce using rule 37 (termino -> termino simbolosProd factor .)
    >               reduce using rule 37 (termino -> termino simbolosProd factor .)
    MENORIGUAL      reduce using rule 37 (termino -> termino simbolosProd factor .)
    <               reduce using rule 37 (termino -> termino simbolosProd factor .)
    #               reduce using rule 37 (termino -> termino simbolosProd factor .)
    =               reduce using rule 37 (termino -> termino simbolosProd factor .)
    DOBLEPUNTO      reduce using rule 37 (termino -> termino simbolosProd factor .)
    END             reduce using rule 37 (termino -> termino simbolosProd factor .)
    ELSIF           reduce using rule 37 (termino -> termino simbolosProd factor .)
    ELSE            reduce using rule 37 (termino -> termino simbolosProd factor .)
    |               reduce using rule 37 (termino -> termino simbolosProd factor .)
    THEN            reduce using rule 37 (termino -> termino simbolosProd factor .)
    DO              reduce using rule 37 (termino -> termino simbolosProd factor .)


state 116

    (24) factor -> SR ( expresion . , expresion )
    (43) expresion -> expresion . - termino
    (44) expresion -> expresion . + termino
    ,               shift and go to state 139
    -               shift and go to state 86
    +               shift and go to state 87


state 117

    (30) factor -> ( expresion ) .
    MOD             reduce using rule 30 (factor -> ( expresion ) .)
    DIV             reduce using rule 30 (factor -> ( expresion ) .)
    /               reduce using rule 30 (factor -> ( expresion ) .)
    *               reduce using rule 30 (factor -> ( expresion ) .)
    ;               reduce using rule 30 (factor -> ( expresion ) .)
    -               reduce using rule 30 (factor -> ( expresion ) .)
    +               reduce using rule 30 (factor -> ( expresion ) .)
    )               reduce using rule 30 (factor -> ( expresion ) .)
    ]               reduce using rule 30 (factor -> ( expresion ) .)
    ,               reduce using rule 30 (factor -> ( expresion ) .)
    :               reduce using rule 30 (factor -> ( expresion ) .)
    MAYORIGUAL      reduce using rule 30 (factor -> ( expresion ) .)
    >               reduce using rule 30 (factor -> ( expresion ) .)
    MENORIGUAL      reduce using rule 30 (factor -> ( expresion ) .)
    <               reduce using rule 30 (factor -> ( expresion ) .)
    #               reduce using rule 30 (factor -> ( expresion ) .)
    =               reduce using rule 30 (factor -> ( expresion ) .)
    DOBLEPUNTO      reduce using rule 30 (factor -> ( expresion ) .)
    END             reduce using rule 30 (factor -> ( expresion ) .)
    ELSIF           reduce using rule 30 (factor -> ( expresion ) .)
    ELSE            reduce using rule 30 (factor -> ( expresion ) .)
    |               reduce using rule 30 (factor -> ( expresion ) .)
    THEN            reduce using rule 30 (factor -> ( expresion ) .)
    DO              reduce using rule 30 (factor -> ( expresion ) .)


state 118

    (25) factor -> LATCH ( expresion . , expresion )
    (43) expresion -> expresion . - termino
    (44) expresion -> expresion . + termino
    ,               shift and go to state 140
    -               shift and go to state 86
    +               shift and go to state 87


state 119

    (26) factor -> REG ( expresion . , expresion )
    (27) factor -> REG ( expresion . )
    (43) expresion -> expresion . - termino
    (44) expresion -> expresion . + termino
    ,               shift and go to state 141
    )               shift and go to state 142
    -               shift and go to state 86
    +               shift and go to state 87


state 120

    (28) factor -> MUX ( expresion . , expresion : expresion , expresion , expresion , expresion )
    (29) factor -> MUX ( expresion . : expresion , expresion )
    (43) expresion -> expresion . - termino
    (44) expresion -> expresion . + termino
    ,               shift and go to state 143
    :               shift and go to state 144
    -               shift and go to state 86
    +               shift and go to state 87


state 121

    (103) declaracionTipo -> TYPE ID simboloPor listaIdParentesis ; declaracionConstanteCONST tipoFormalIN . tipoFormlINOUT declaracionVariableOUT declaracionVariableVAR sentenciaSecuenciaBEGIN END ID
    (114) tipoFormlINOUT -> . empty
    (115) tipoFormlINOUT -> . INOUT tipoFormlBuslistaId
    (121) empty -> .
    INOUT           shift and go to state 147
    OUT             reduce using rule 121 (empty -> .)
    VAR             reduce using rule 121 (empty -> .)
    BEGIN           reduce using rule 121 (empty -> .)
    END             reduce using rule 121 (empty -> .)

    tipoFormlINOUT                 shift and go to state 145
    empty                          shift and go to state 146

state 122

    (108) tipoFormalIN -> empty .
    INOUT           reduce using rule 108 (tipoFormalIN -> empty .)
    OUT             reduce using rule 108 (tipoFormalIN -> empty .)
    VAR             reduce using rule 108 (tipoFormalIN -> empty .)
    BEGIN           reduce using rule 108 (tipoFormalIN -> empty .)
    END             reduce using rule 108 (tipoFormalIN -> empty .)


state 123

    (109) tipoFormalIN -> IN . tipoFormallistaId
    (110) tipoFormallistaId -> . empty
    (111) tipoFormallistaId -> . tipoFormallistaIdR
    (121) empty -> .
    (112) tipoFormallistaIdR -> . listaId : tipoFormal ;
    (113) tipoFormallistaIdR -> . tipoFormallistaIdR listaId : tipoFormal ;
    (15) listaId -> . listaId , ID
    (16) listaId -> . ID
    INOUT           reduce using rule 121 (empty -> .)
    OUT             reduce using rule 121 (empty -> .)
    VAR             reduce using rule 121 (empty -> .)
    BEGIN           reduce using rule 121 (empty -> .)
    END             reduce using rule 121 (empty -> .)
    ID              shift and go to state 38

    tipoFormallistaId              shift and go to state 148
    empty                          shift and go to state 149
    tipoFormallistaIdR             shift and go to state 150
    listaId                        shift and go to state 151

state 124

    (69) modulo -> MODULE ID ; declaracionTipoPuntoComa declaracionConstanteCONST declaracionVariableIN declaracionVariableINOUT declaracionVariableOUT declaracionVariableVAR sentenciaSecuenciaBEGIN END . ID .
    ID              shift and go to state 152


state 125

    (93) sentenciaSecuenciaBEGIN -> BEGIN sentenciaSecuencia .
    (68) sentenciaSecuencia -> sentenciaSecuencia . ; sentencia
    END             reduce using rule 93 (sentenciaSecuenciaBEGIN -> BEGIN sentenciaSecuencia .)
    ;               shift and go to state 153


state 126

    (67) sentenciaSecuencia -> sentencia .
    ;               reduce using rule 67 (sentenciaSecuencia -> sentencia .)
    END             reduce using rule 67 (sentenciaSecuencia -> sentencia .)
    ELSIF           reduce using rule 67 (sentenciaSecuencia -> sentencia .)
    ELSE            reduce using rule 67 (sentenciaSecuencia -> sentencia .)


state 127

    (62) sentencia -> empty .
    ;               reduce using rule 62 (sentencia -> empty .)
    END             reduce using rule 62 (sentencia -> empty .)
    ELSIF           reduce using rule 62 (sentencia -> empty .)
    ELSE            reduce using rule 62 (sentencia -> empty .)


state 128

    (63) sentencia -> sentenciaPara .
    ;               reduce using rule 63 (sentencia -> sentenciaPara .)
    END             reduce using rule 63 (sentencia -> sentenciaPara .)
    ELSIF           reduce using rule 63 (sentencia -> sentenciaPara .)
    ELSE            reduce using rule 63 (sentencia -> sentenciaPara .)


state 129

    (64) sentencia -> sentenciaSi .
    ;               reduce using rule 64 (sentencia -> sentenciaSi .)
    END             reduce using rule 64 (sentencia -> sentenciaSi .)
    ELSIF           reduce using rule 64 (sentencia -> sentenciaSi .)
    ELSE            reduce using rule 64 (sentencia -> sentenciaSi .)


state 130

    (65) sentencia -> asignacionUnidad .
    ;               reduce using rule 65 (sentencia -> asignacionUnidad .)
    END             reduce using rule 65 (sentencia -> asignacionUnidad .)
    ELSIF           reduce using rule 65 (sentencia -> asignacionUnidad .)
    ELSE            reduce using rule 65 (sentencia -> asignacionUnidad .)


state 131

    (66) sentencia -> asignacion .
    ;               reduce using rule 66 (sentencia -> asignacion .)
    END             reduce using rule 66 (sentencia -> asignacion .)
    ELSIF           reduce using rule 66 (sentencia -> asignacion .)
    ELSE            reduce using rule 66 (sentencia -> asignacion .)


state 132

    (61) sentenciaPara -> FOR . ID DOSPUNTOSIGUAL expresion DOBLEPUNTO expresion DO sentenciaSecuencia END
    ID              shift and go to state 154


state 133

    (120) asignacionUnidad -> ID . selector ( listaExpresiones )
    (45) asignacion -> ID . selector DOSPUNTOSIGUAL condicion | expresion
    (46) asignacion -> ID . selector DOSPUNTOSIGUAL expresion
    (17) selector -> . empty
    (18) selector -> . selectorR
    (121) empty -> .
    (19) selectorR -> . selectorRR
    (20) selectorR -> . selectorR selectorRR
    (21) selectorRR -> . [ expresion ]
    (22) selectorRR -> . . INTEGER
    (23) selectorRR -> . . ID
    (               reduce using rule 121 (empty -> .)
    DOSPUNTOSIGUAL  reduce using rule 121 (empty -> .)
    [               shift and go to state 83
    .               shift and go to state 84

    selector                       shift and go to state 155
    empty                          shift and go to state 80
    selectorR                      shift and go to state 81
    selectorRR                     shift and go to state 82

state 134

    (54) sentenciaSi -> IF . relacion THEN sentenciaSecuencia sentenciaSiSino sentenciaSiEntonces END
    (48) relacion -> . expresion MAYORIGUAL expresion
    (49) relacion -> . expresion > expresion
    (50) relacion -> . expresion MENORIGUAL expresion
    (51) relacion -> . expresion < expresion
    (52) relacion -> . expresion # expresion
    (53) relacion -> . expresion = expresion
    (42) expresion -> . termino
    (43) expresion -> . expresion - termino
    (44) expresion -> . expresion + termino
    (36) termino -> . factor
    (37) termino -> . termino simbolosProd factor
    (24) factor -> . SR ( expresion , expresion )
    (25) factor -> . LATCH ( expresion , expresion )
    (26) factor -> . REG ( expresion , expresion )
    (27) factor -> . REG ( expresion )
    (28) factor -> . MUX ( expresion , expresion : expresion , expresion , expresion , expresion )
    (29) factor -> . MUX ( expresion : expresion , expresion )
    (30) factor -> . ( expresion )
    (31) factor -> . ~ factor
    (32) factor -> . FLECHAARRIBA factor
    (33) factor -> . INTEGER
    (34) factor -> . LOGICVALUE
    (35) factor -> . ID selector
    SR              shift and go to state 55
    LATCH           shift and go to state 57
    REG             shift and go to state 58
    MUX             shift and go to state 59
    (               shift and go to state 56
    ~               shift and go to state 60
    FLECHAARRIBA    shift and go to state 61
    INTEGER         shift and go to state 62
    LOGICVALUE      shift and go to state 63
    ID              shift and go to state 51

    relacion                       shift and go to state 156
    expresion                      shift and go to state 157
    termino                        shift and go to state 53
    factor                         shift and go to state 54

state 135

    (12) tipo -> [ expresion ] . tipo
    (11) tipo -> . tipoSimple
    (12) tipo -> . [ expresion ] tipo
    (3) tipoSimple -> . ID
    (4) tipoSimple -> . ID ( listaExpresiones )
    (5) tipoSimple -> . tipoBasico
    (6) tipoBasico -> . OC
    (7) tipoBasico -> . TS
    (8) tipoBasico -> . BIT
    [               shift and go to state 72
    ID              shift and go to state 73
    OC              shift and go to state 75
    TS              shift and go to state 76
    BIT             shift and go to state 77

    tipo                           shift and go to state 158
    tipoSimple                     shift and go to state 71
    tipoBasico                     shift and go to state 74

state 136

    (4) tipoSimple -> ID ( listaExpresiones . )
    (10) listaExpresiones -> listaExpresiones . , expresion
    )               shift and go to state 159
    ,               shift and go to state 160


state 137

    (9) listaExpresiones -> expresion .
    (43) expresion -> expresion . - termino
    (44) expresion -> expresion . + termino
    )               reduce using rule 9 (listaExpresiones -> expresion .)
    ,               reduce using rule 9 (listaExpresiones -> expresion .)
    -               shift and go to state 86
    +               shift and go to state 87


state 138

    (21) selectorRR -> [ expresion ] .
    [               reduce using rule 21 (selectorRR -> [ expresion ] .)
    .               reduce using rule 21 (selectorRR -> [ expresion ] .)
    MOD             reduce using rule 21 (selectorRR -> [ expresion ] .)
    DIV             reduce using rule 21 (selectorRR -> [ expresion ] .)
    /               reduce using rule 21 (selectorRR -> [ expresion ] .)
    *               reduce using rule 21 (selectorRR -> [ expresion ] .)
    ;               reduce using rule 21 (selectorRR -> [ expresion ] .)
    -               reduce using rule 21 (selectorRR -> [ expresion ] .)
    +               reduce using rule 21 (selectorRR -> [ expresion ] .)
    )               reduce using rule 21 (selectorRR -> [ expresion ] .)
    ]               reduce using rule 21 (selectorRR -> [ expresion ] .)
    ,               reduce using rule 21 (selectorRR -> [ expresion ] .)
    :               reduce using rule 21 (selectorRR -> [ expresion ] .)
    MAYORIGUAL      reduce using rule 21 (selectorRR -> [ expresion ] .)
    >               reduce using rule 21 (selectorRR -> [ expresion ] .)
    MENORIGUAL      reduce using rule 21 (selectorRR -> [ expresion ] .)
    <               reduce using rule 21 (selectorRR -> [ expresion ] .)
    #               reduce using rule 21 (selectorRR -> [ expresion ] .)
    =               reduce using rule 21 (selectorRR -> [ expresion ] .)
    DOBLEPUNTO      reduce using rule 21 (selectorRR -> [ expresion ] .)
    END             reduce using rule 21 (selectorRR -> [ expresion ] .)
    ELSIF           reduce using rule 21 (selectorRR -> [ expresion ] .)
    ELSE            reduce using rule 21 (selectorRR -> [ expresion ] .)
    |               reduce using rule 21 (selectorRR -> [ expresion ] .)
    THEN            reduce using rule 21 (selectorRR -> [ expresion ] .)
    DO              reduce using rule 21 (selectorRR -> [ expresion ] .)
    (               reduce using rule 21 (selectorRR -> [ expresion ] .)
    DOSPUNTOSIGUAL  reduce using rule 21 (selectorRR -> [ expresion ] .)


state 139

    (24) factor -> SR ( expresion , . expresion )
    (42) expresion -> . termino
    (43) expresion -> . expresion - termino
    (44) expresion -> . expresion + termino
    (36) termino -> . factor
    (37) termino -> . termino simbolosProd factor
    (24) factor -> . SR ( expresion , expresion )
    (25) factor -> . LATCH ( expresion , expresion )
    (26) factor -> . REG ( expresion , expresion )
    (27) factor -> . REG ( expresion )
    (28) factor -> . MUX ( expresion , expresion : expresion , expresion , expresion , expresion )
    (29) factor -> . MUX ( expresion : expresion , expresion )
    (30) factor -> . ( expresion )
    (31) factor -> . ~ factor
    (32) factor -> . FLECHAARRIBA factor
    (33) factor -> . INTEGER
    (34) factor -> . LOGICVALUE
    (35) factor -> . ID selector
    SR              shift and go to state 55
    LATCH           shift and go to state 57
    REG             shift and go to state 58
    MUX             shift and go to state 59
    (               shift and go to state 56
    ~               shift and go to state 60
    FLECHAARRIBA    shift and go to state 61
    INTEGER         shift and go to state 62
    LOGICVALUE      shift and go to state 63
    ID              shift and go to state 51

    expresion                      shift and go to state 161
    termino                        shift and go to state 53
    factor                         shift and go to state 54

state 140

    (25) factor -> LATCH ( expresion , . expresion )
    (42) expresion -> . termino
    (43) expresion -> . expresion - termino
    (44) expresion -> . expresion + termino
    (36) termino -> . factor
    (37) termino -> . termino simbolosProd factor
    (24) factor -> . SR ( expresion , expresion )
    (25) factor -> . LATCH ( expresion , expresion )
    (26) factor -> . REG ( expresion , expresion )
    (27) factor -> . REG ( expresion )
    (28) factor -> . MUX ( expresion , expresion : expresion , expresion , expresion , expresion )
    (29) factor -> . MUX ( expresion : expresion , expresion )
    (30) factor -> . ( expresion )
    (31) factor -> . ~ factor
    (32) factor -> . FLECHAARRIBA factor
    (33) factor -> . INTEGER
    (34) factor -> . LOGICVALUE
    (35) factor -> . ID selector
    SR              shift and go to state 55
    LATCH           shift and go to state 57
    REG             shift and go to state 58
    MUX             shift and go to state 59
    (               shift and go to state 56
    ~               shift and go to state 60
    FLECHAARRIBA    shift and go to state 61
    INTEGER         shift and go to state 62
    LOGICVALUE      shift and go to state 63
    ID              shift and go to state 51

    expresion                      shift and go to state 162
    termino                        shift and go to state 53
    factor                         shift and go to state 54

state 141

    (26) factor -> REG ( expresion , . expresion )
    (42) expresion -> . termino
    (43) expresion -> . expresion - termino
    (44) expresion -> . expresion + termino
    (36) termino -> . factor
    (37) termino -> . termino simbolosProd factor
    (24) factor -> . SR ( expresion , expresion )
    (25) factor -> . LATCH ( expresion , expresion )
    (26) factor -> . REG ( expresion , expresion )
    (27) factor -> . REG ( expresion )
    (28) factor -> . MUX ( expresion , expresion : expresion , expresion , expresion , expresion )
    (29) factor -> . MUX ( expresion : expresion , expresion )
    (30) factor -> . ( expresion )
    (31) factor -> . ~ factor
    (32) factor -> . FLECHAARRIBA factor
    (33) factor -> . INTEGER
    (34) factor -> . LOGICVALUE
    (35) factor -> . ID selector
    SR              shift and go to state 55
    LATCH           shift and go to state 57
    REG             shift and go to state 58
    MUX             shift and go to state 59
    (               shift and go to state 56
    ~               shift and go to state 60
    FLECHAARRIBA    shift and go to state 61
    INTEGER         shift and go to state 62
    LOGICVALUE      shift and go to state 63
    ID              shift and go to state 51

    expresion                      shift and go to state 163
    termino                        shift and go to state 53
    factor                         shift and go to state 54

state 142

    (27) factor -> REG ( expresion ) .
    MOD             reduce using rule 27 (factor -> REG ( expresion ) .)
    DIV             reduce using rule 27 (factor -> REG ( expresion ) .)
    /               reduce using rule 27 (factor -> REG ( expresion ) .)
    *               reduce using rule 27 (factor -> REG ( expresion ) .)
    ;               reduce using rule 27 (factor -> REG ( expresion ) .)
    -               reduce using rule 27 (factor -> REG ( expresion ) .)
    +               reduce using rule 27 (factor -> REG ( expresion ) .)
    )               reduce using rule 27 (factor -> REG ( expresion ) .)
    ]               reduce using rule 27 (factor -> REG ( expresion ) .)
    ,               reduce using rule 27 (factor -> REG ( expresion ) .)
    :               reduce using rule 27 (factor -> REG ( expresion ) .)
    MAYORIGUAL      reduce using rule 27 (factor -> REG ( expresion ) .)
    >               reduce using rule 27 (factor -> REG ( expresion ) .)
    MENORIGUAL      reduce using rule 27 (factor -> REG ( expresion ) .)
    <               reduce using rule 27 (factor -> REG ( expresion ) .)
    #               reduce using rule 27 (factor -> REG ( expresion ) .)
    =               reduce using rule 27 (factor -> REG ( expresion ) .)
    DOBLEPUNTO      reduce using rule 27 (factor -> REG ( expresion ) .)
    END             reduce using rule 27 (factor -> REG ( expresion ) .)
    ELSIF           reduce using rule 27 (factor -> REG ( expresion ) .)
    ELSE            reduce using rule 27 (factor -> REG ( expresion ) .)
    |               reduce using rule 27 (factor -> REG ( expresion ) .)
    THEN            reduce using rule 27 (factor -> REG ( expresion ) .)
    DO              reduce using rule 27 (factor -> REG ( expresion ) .)


state 143

    (28) factor -> MUX ( expresion , . expresion : expresion , expresion , expresion , expresion )
    (42) expresion -> . termino
    (43) expresion -> . expresion - termino
    (44) expresion -> . expresion + termino
    (36) termino -> . factor
    (37) termino -> . termino simbolosProd factor
    (24) factor -> . SR ( expresion , expresion )
    (25) factor -> . LATCH ( expresion , expresion )
    (26) factor -> . REG ( expresion , expresion )
    (27) factor -> . REG ( expresion )
    (28) factor -> . MUX ( expresion , expresion : expresion , expresion , expresion , expresion )
    (29) factor -> . MUX ( expresion : expresion , expresion )
    (30) factor -> . ( expresion )
    (31) factor -> . ~ factor
    (32) factor -> . FLECHAARRIBA factor
    (33) factor -> . INTEGER
    (34) factor -> . LOGICVALUE
    (35) factor -> . ID selector
    SR              shift and go to state 55
    LATCH           shift and go to state 57
    REG             shift and go to state 58
    MUX             shift and go to state 59
    (               shift and go to state 56
    ~               shift and go to state 60
    FLECHAARRIBA    shift and go to state 61
    INTEGER         shift and go to state 62
    LOGICVALUE      shift and go to state 63
    ID              shift and go to state 51

    expresion                      shift and go to state 164
    termino                        shift and go to state 53
    factor                         shift and go to state 54

state 144

    (29) factor -> MUX ( expresion : . expresion , expresion )
    (42) expresion -> . termino
    (43) expresion -> . expresion - termino
    (44) expresion -> . expresion + termino
    (36) termino -> . factor
    (37) termino -> . termino simbolosProd factor
    (24) factor -> . SR ( expresion , expresion )
    (25) factor -> . LATCH ( expresion , expresion )
    (26) factor -> . REG ( expresion , expresion )
    (27) factor -> . REG ( expresion )
    (28) factor -> . MUX ( expresion , expresion : expresion , expresion , expresion , expresion )
    (29) factor -> . MUX ( expresion : expresion , expresion )
    (30) factor -> . ( expresion )
    (31) factor -> . ~ factor
    (32) factor -> . FLECHAARRIBA factor
    (33) factor -> . INTEGER
    (34) factor -> . LOGICVALUE
    (35) factor -> . ID selector
    SR              shift and go to state 55
    LATCH           shift and go to state 57
    REG             shift and go to state 58
    MUX             shift and go to state 59
    (               shift and go to state 56
    ~               shift and go to state 60
    FLECHAARRIBA    shift and go to state 61
    INTEGER         shift and go to state 62
    LOGICVALUE      shift and go to state 63
    ID              shift and go to state 51

    expresion                      shift and go to state 165
    termino                        shift and go to state 53
    factor                         shift and go to state 54

state 145

    (103) declaracionTipo -> TYPE ID simboloPor listaIdParentesis ; declaracionConstanteCONST tipoFormalIN tipoFormlINOUT . declaracionVariableOUT declaracionVariableVAR sentenciaSecuenciaBEGIN END ID
    (88) declaracionVariableOUT -> . empty
    (89) declaracionVariableOUT -> . OUT declaracionVariableRecursivo
    (121) empty -> .
    OUT             shift and go to state 46
    VAR             reduce using rule 121 (empty -> .)
    BEGIN           reduce using rule 121 (empty -> .)
    END             reduce using rule 121 (empty -> .)

    declaracionVariableOUT         shift and go to state 166
    empty                          shift and go to state 45

state 146

    (114) tipoFormlINOUT -> empty .
    OUT             reduce using rule 114 (tipoFormlINOUT -> empty .)
    VAR             reduce using rule 114 (tipoFormlINOUT -> empty .)
    BEGIN           reduce using rule 114 (tipoFormlINOUT -> empty .)
    END             reduce using rule 114 (tipoFormlINOUT -> empty .)


state 147

    (115) tipoFormlINOUT -> INOUT . tipoFormlBuslistaId
    (116) tipoFormlBuslistaId -> . empty
    (117) tipoFormlBuslistaId -> . tipoFormlBuslistaIdR
    (121) empty -> .
    (118) tipoFormlBuslistaIdR -> . listaId : tipoFormalBus ;
    (119) tipoFormlBuslistaIdR -> . tipoFormlBuslistaIdR listaId : tipoFormalBus ;
    (15) listaId -> . listaId , ID
    (16) listaId -> . ID
    OUT             reduce using rule 121 (empty -> .)
    VAR             reduce using rule 121 (empty -> .)
    BEGIN           reduce using rule 121 (empty -> .)
    END             reduce using rule 121 (empty -> .)
    ID              shift and go to state 38

    tipoFormlBuslistaId            shift and go to state 167
    empty                          shift and go to state 168
    tipoFormlBuslistaIdR           shift and go to state 169
    listaId                        shift and go to state 170

state 148

    (109) tipoFormalIN -> IN tipoFormallistaId .
    INOUT           reduce using rule 109 (tipoFormalIN -> IN tipoFormallistaId .)
    OUT             reduce using rule 109 (tipoFormalIN -> IN tipoFormallistaId .)
    VAR             reduce using rule 109 (tipoFormalIN -> IN tipoFormallistaId .)
    BEGIN           reduce using rule 109 (tipoFormalIN -> IN tipoFormallistaId .)
    END             reduce using rule 109 (tipoFormalIN -> IN tipoFormallistaId .)


state 149

    (110) tipoFormallistaId -> empty .
    INOUT           reduce using rule 110 (tipoFormallistaId -> empty .)
    OUT             reduce using rule 110 (tipoFormallistaId -> empty .)
    VAR             reduce using rule 110 (tipoFormallistaId -> empty .)
    BEGIN           reduce using rule 110 (tipoFormallistaId -> empty .)
    END             reduce using rule 110 (tipoFormallistaId -> empty .)


state 150

    (111) tipoFormallistaId -> tipoFormallistaIdR .
    (113) tipoFormallistaIdR -> tipoFormallistaIdR . listaId : tipoFormal ;
    (15) listaId -> . listaId , ID
    (16) listaId -> . ID
    INOUT           reduce using rule 111 (tipoFormallistaId -> tipoFormallistaIdR .)
    OUT             reduce using rule 111 (tipoFormallistaId -> tipoFormallistaIdR .)
    VAR             reduce using rule 111 (tipoFormallistaId -> tipoFormallistaIdR .)
    BEGIN           reduce using rule 111 (tipoFormallistaId -> tipoFormallistaIdR .)
    END             reduce using rule 111 (tipoFormallistaId -> tipoFormallistaIdR .)
    ID              shift and go to state 38

    listaId                        shift and go to state 171

state 151

    (112) tipoFormallistaIdR -> listaId . : tipoFormal ;
    (15) listaId -> listaId . , ID
    :               shift and go to state 172
    ,               shift and go to state 50


state 152

    (69) modulo -> MODULE ID ; declaracionTipoPuntoComa declaracionConstanteCONST declaracionVariableIN declaracionVariableINOUT declaracionVariableOUT declaracionVariableVAR sentenciaSecuenciaBEGIN END ID . .
    .               shift and go to state 173


state 153

    (68) sentenciaSecuencia -> sentenciaSecuencia ; . sentencia
    (62) sentencia -> . empty
    (63) sentencia -> . sentenciaPara
    (64) sentencia -> . sentenciaSi
    (65) sentencia -> . asignacionUnidad
    (66) sentencia -> . asignacion
    (121) empty -> .
    (61) sentenciaPara -> . FOR ID DOSPUNTOSIGUAL expresion DOBLEPUNTO expresion DO sentenciaSecuencia END
    (54) sentenciaSi -> . IF relacion THEN sentenciaSecuencia sentenciaSiSino sentenciaSiEntonces END
    (120) asignacionUnidad -> . ID selector ( listaExpresiones )
    (45) asignacion -> . ID selector DOSPUNTOSIGUAL condicion | expresion
    (46) asignacion -> . ID selector DOSPUNTOSIGUAL expresion
    ;               reduce using rule 121 (empty -> .)
    END             reduce using rule 121 (empty -> .)
    ELSIF           reduce using rule 121 (empty -> .)
    ELSE            reduce using rule 121 (empty -> .)
    FOR             shift and go to state 132
    IF              shift and go to state 134
    ID              shift and go to state 133

    sentencia                      shift and go to state 174
    empty                          shift and go to state 127
    sentenciaPara                  shift and go to state 128
    sentenciaSi                    shift and go to state 129
    asignacionUnidad               shift and go to state 130
    asignacion                     shift and go to state 131

state 154

    (61) sentenciaPara -> FOR ID . DOSPUNTOSIGUAL expresion DOBLEPUNTO expresion DO sentenciaSecuencia END
    DOSPUNTOSIGUAL  shift and go to state 175


state 155

    (120) asignacionUnidad -> ID selector . ( listaExpresiones )
    (45) asignacion -> ID selector . DOSPUNTOSIGUAL condicion | expresion
    (46) asignacion -> ID selector . DOSPUNTOSIGUAL expresion
    (               shift and go to state 176
    DOSPUNTOSIGUAL  shift and go to state 177


state 156

    (54) sentenciaSi -> IF relacion . THEN sentenciaSecuencia sentenciaSiSino sentenciaSiEntonces END
    THEN            shift and go to state 178


state 157

    (48) relacion -> expresion . MAYORIGUAL expresion
    (49) relacion -> expresion . > expresion
    (50) relacion -> expresion . MENORIGUAL expresion
    (51) relacion -> expresion . < expresion
    (52) relacion -> expresion . # expresion
    (53) relacion -> expresion . = expresion
    (43) expresion -> expresion . - termino
    (44) expresion -> expresion . + termino
    MAYORIGUAL      shift and go to state 179
    >               shift and go to state 180
    MENORIGUAL      shift and go to state 181
    <               shift and go to state 182
    #               shift and go to state 183
    =               shift and go to state 184
    -               shift and go to state 86
    +               shift and go to state 87


state 158

    (12) tipo -> [ expresion ] tipo .
    ;               reduce using rule 12 (tipo -> [ expresion ] tipo .)


state 159

    (4) tipoSimple -> ID ( listaExpresiones ) .
    ;               reduce using rule 4 (tipoSimple -> ID ( listaExpresiones ) .)


state 160

    (10) listaExpresiones -> listaExpresiones , . expresion
    (42) expresion -> . termino
    (43) expresion -> . expresion - termino
    (44) expresion -> . expresion + termino
    (36) termino -> . factor
    (37) termino -> . termino simbolosProd factor
    (24) factor -> . SR ( expresion , expresion )
    (25) factor -> . LATCH ( expresion , expresion )
    (26) factor -> . REG ( expresion , expresion )
    (27) factor -> . REG ( expresion )
    (28) factor -> . MUX ( expresion , expresion : expresion , expresion , expresion , expresion )
    (29) factor -> . MUX ( expresion : expresion , expresion )
    (30) factor -> . ( expresion )
    (31) factor -> . ~ factor
    (32) factor -> . FLECHAARRIBA factor
    (33) factor -> . INTEGER
    (34) factor -> . LOGICVALUE
    (35) factor -> . ID selector
    SR              shift and go to state 55
    LATCH           shift and go to state 57
    REG             shift and go to state 58
    MUX             shift and go to state 59
    (               shift and go to state 56
    ~               shift and go to state 60
    FLECHAARRIBA    shift and go to state 61
    INTEGER         shift and go to state 62
    LOGICVALUE      shift and go to state 63
    ID              shift and go to state 51

    expresion                      shift and go to state 185
    termino                        shift and go to state 53
    factor                         shift and go to state 54

state 161

    (24) factor -> SR ( expresion , expresion . )
    (43) expresion -> expresion . - termino
    (44) expresion -> expresion . + termino
    )               shift and go to state 186
    -               shift and go to state 86
    +               shift and go to state 87


state 162

    (25) factor -> LATCH ( expresion , expresion . )
    (43) expresion -> expresion . - termino
    (44) expresion -> expresion . + termino
    )               shift and go to state 187
    -               shift and go to state 86
    +               shift and go to state 87


state 163

    (26) factor -> REG ( expresion , expresion . )
    (43) expresion -> expresion . - termino
    (44) expresion -> expresion . + termino
    )               shift and go to state 188
    -               shift and go to state 86
    +               shift and go to state 87


state 164

    (28) factor -> MUX ( expresion , expresion . : expresion , expresion , expresion , expresion )
    (43) expresion -> expresion . - termino
    (44) expresion -> expresion . + termino
    :               shift and go to state 189
    -               shift and go to state 86
    +               shift and go to state 87


state 165

    (29) factor -> MUX ( expresion : expresion . , expresion )
    (43) expresion -> expresion . - termino
    (44) expresion -> expresion . + termino
    ,               shift and go to state 190
    -               shift and go to state 86
    +               shift and go to state 87


state 166

    (103) declaracionTipo -> TYPE ID simboloPor listaIdParentesis ; declaracionConstanteCONST tipoFormalIN tipoFormlINOUT declaracionVariableOUT . declaracionVariableVAR sentenciaSecuenciaBEGIN END ID
    (90) declaracionVariableVAR -> . empty
    (91) declaracionVariableVAR -> . VAR declaracionVariableRecursivo
    (121) empty -> .
    VAR             shift and go to state 68
    BEGIN           reduce using rule 121 (empty -> .)
    END             reduce using rule 121 (empty -> .)

    declaracionVariableVAR         shift and go to state 191
    empty                          shift and go to state 67

state 167

    (115) tipoFormlINOUT -> INOUT tipoFormlBuslistaId .
    OUT             reduce using rule 115 (tipoFormlINOUT -> INOUT tipoFormlBuslistaId .)
    VAR             reduce using rule 115 (tipoFormlINOUT -> INOUT tipoFormlBuslistaId .)
    BEGIN           reduce using rule 115 (tipoFormlINOUT -> INOUT tipoFormlBuslistaId .)
    END             reduce using rule 115 (tipoFormlINOUT -> INOUT tipoFormlBuslistaId .)


state 168

    (116) tipoFormlBuslistaId -> empty .
    OUT             reduce using rule 116 (tipoFormlBuslistaId -> empty .)
    VAR             reduce using rule 116 (tipoFormlBuslistaId -> empty .)
    BEGIN           reduce using rule 116 (tipoFormlBuslistaId -> empty .)
    END             reduce using rule 116 (tipoFormlBuslistaId -> empty .)


state 169

    (117) tipoFormlBuslistaId -> tipoFormlBuslistaIdR .
    (119) tipoFormlBuslistaIdR -> tipoFormlBuslistaIdR . listaId : tipoFormalBus ;
    (15) listaId -> . listaId , ID
    (16) listaId -> . ID
    OUT             reduce using rule 117 (tipoFormlBuslistaId -> tipoFormlBuslistaIdR .)
    VAR             reduce using rule 117 (tipoFormlBuslistaId -> tipoFormlBuslistaIdR .)
    BEGIN           reduce using rule 117 (tipoFormlBuslistaId -> tipoFormlBuslistaIdR .)
    END             reduce using rule 117 (tipoFormlBuslistaId -> tipoFormlBuslistaIdR .)
    ID              shift and go to state 38

    listaId                        shift and go to state 192

state 170

    (118) tipoFormlBuslistaIdR -> listaId . : tipoFormalBus ;
    (15) listaId -> listaId . , ID
    :               shift and go to state 193
    ,               shift and go to state 50


state 171

    (113) tipoFormallistaIdR -> tipoFormallistaIdR listaId . : tipoFormal ;
    (15) listaId -> listaId . , ID
    :               shift and go to state 194
    ,               shift and go to state 50


state 172

    (112) tipoFormallistaIdR -> listaId : . tipoFormal ;
    (94) tipoFormal -> . expresionCorcheteO BIT
    (95) expresionCorcheteO -> . empty
    (96) expresionCorcheteO -> . expresionCorcheteOR
    (121) empty -> .
    (97) expresionCorcheteOR -> . [ expresionOpcional ]
    (98) expresionCorcheteOR -> . expresionCorcheteOR [ expresionOpcional ]
    BIT             reduce using rule 121 (empty -> .)
    [               shift and go to state 199

    tipoFormal                     shift and go to state 195
    expresionCorcheteO             shift and go to state 196
    empty                          shift and go to state 197
    expresionCorcheteOR            shift and go to state 198

state 173

    (69) modulo -> MODULE ID ; declaracionTipoPuntoComa declaracionConstanteCONST declaracionVariableIN declaracionVariableINOUT declaracionVariableOUT declaracionVariableVAR sentenciaSecuenciaBEGIN END ID . .
    MODULE          reduce using rule 69 (modulo -> MODULE ID ; declaracionTipoPuntoComa declaracionConstanteCONST declaracionVariableIN declaracionVariableINOUT declaracionVariableOUT declaracionVariableVAR sentenciaSecuenciaBEGIN END ID . .)
    $end            reduce using rule 69 (modulo -> MODULE ID ; declaracionTipoPuntoComa declaracionConstanteCONST declaracionVariableIN declaracionVariableINOUT declaracionVariableOUT declaracionVariableVAR sentenciaSecuenciaBEGIN END ID . .)


state 174

    (68) sentenciaSecuencia -> sentenciaSecuencia ; sentencia .
    ;               reduce using rule 68 (sentenciaSecuencia -> sentenciaSecuencia ; sentencia .)
    END             reduce using rule 68 (sentenciaSecuencia -> sentenciaSecuencia ; sentencia .)
    ELSIF           reduce using rule 68 (sentenciaSecuencia -> sentenciaSecuencia ; sentencia .)
    ELSE            reduce using rule 68 (sentenciaSecuencia -> sentenciaSecuencia ; sentencia .)


state 175

    (61) sentenciaPara -> FOR ID DOSPUNTOSIGUAL . expresion DOBLEPUNTO expresion DO sentenciaSecuencia END
    (42) expresion -> . termino
    (43) expresion -> . expresion - termino
    (44) expresion -> . expresion + termino
    (36) termino -> . factor
    (37) termino -> . termino simbolosProd factor
    (24) factor -> . SR ( expresion , expresion )
    (25) factor -> . LATCH ( expresion , expresion )
    (26) factor -> . REG ( expresion , expresion )
    (27) factor -> . REG ( expresion )
    (28) factor -> . MUX ( expresion , expresion : expresion , expresion , expresion , expresion )
    (29) factor -> . MUX ( expresion : expresion , expresion )
    (30) factor -> . ( expresion )
    (31) factor -> . ~ factor
    (32) factor -> . FLECHAARRIBA factor
    (33) factor -> . INTEGER
    (34) factor -> . LOGICVALUE
    (35) factor -> . ID selector
    SR              shift and go to state 55
    LATCH           shift and go to state 57
    REG             shift and go to state 58
    MUX             shift and go to state 59
    (               shift and go to state 56
    ~               shift and go to state 60
    FLECHAARRIBA    shift and go to state 61
    INTEGER         shift and go to state 62
    LOGICVALUE      shift and go to state 63
    ID              shift and go to state 51

    expresion                      shift and go to state 200
    termino                        shift and go to state 53
    factor                         shift and go to state 54

state 176

    (120) asignacionUnidad -> ID selector ( . listaExpresiones )
    (9) listaExpresiones -> . expresion
    (10) listaExpresiones -> . listaExpresiones , expresion
    (42) expresion -> . termino
    (43) expresion -> . expresion - termino
    (44) expresion -> . expresion + termino
    (36) termino -> . factor
    (37) termino -> . termino simbolosProd factor
    (24) factor -> . SR ( expresion , expresion )
    (25) factor -> . LATCH ( expresion , expresion )
    (26) factor -> . REG ( expresion , expresion )
    (27) factor -> . REG ( expresion )
    (28) factor -> . MUX ( expresion , expresion : expresion , expresion , expresion , expresion )
    (29) factor -> . MUX ( expresion : expresion , expresion )
    (30) factor -> . ( expresion )
    (31) factor -> . ~ factor
    (32) factor -> . FLECHAARRIBA factor
    (33) factor -> . INTEGER
    (34) factor -> . LOGICVALUE
    (35) factor -> . ID selector
    SR              shift and go to state 55
    LATCH           shift and go to state 57
    REG             shift and go to state 58
    MUX             shift and go to state 59
    (               shift and go to state 56
    ~               shift and go to state 60
    FLECHAARRIBA    shift and go to state 61
    INTEGER         shift and go to state 62
    LOGICVALUE      shift and go to state 63
    ID              shift and go to state 51

    listaExpresiones               shift and go to state 201
    expresion                      shift and go to state 137
    termino                        shift and go to state 53
    factor                         shift and go to state 54

state 177

    (45) asignacion -> ID selector DOSPUNTOSIGUAL . condicion | expresion
    (46) asignacion -> ID selector DOSPUNTOSIGUAL . expresion
    (47) condicion -> . expresion
    (42) expresion -> . termino
    (43) expresion -> . expresion - termino
    (44) expresion -> . expresion + termino
    (36) termino -> . factor
    (37) termino -> . termino simbolosProd factor
    (24) factor -> . SR ( expresion , expresion )
    (25) factor -> . LATCH ( expresion , expresion )
    (26) factor -> . REG ( expresion , expresion )
    (27) factor -> . REG ( expresion )
    (28) factor -> . MUX ( expresion , expresion : expresion , expresion , expresion , expresion )
    (29) factor -> . MUX ( expresion : expresion , expresion )
    (30) factor -> . ( expresion )
    (31) factor -> . ~ factor
    (32) factor -> . FLECHAARRIBA factor
    (33) factor -> . INTEGER
    (34) factor -> . LOGICVALUE
    (35) factor -> . ID selector
    SR              shift and go to state 55
    LATCH           shift and go to state 57
    REG             shift and go to state 58
    MUX             shift and go to state 59
    (               shift and go to state 56
    ~               shift and go to state 60
    FLECHAARRIBA    shift and go to state 61
    INTEGER         shift and go to state 62
    LOGICVALUE      shift and go to state 63
    ID              shift and go to state 51

    condicion                      shift and go to state 202
    expresion                      shift and go to state 203
    termino                        shift and go to state 53
    factor                         shift and go to state 54

state 178

    (54) sentenciaSi -> IF relacion THEN . sentenciaSecuencia sentenciaSiSino sentenciaSiEntonces END
    (67) sentenciaSecuencia -> . sentencia
    (68) sentenciaSecuencia -> . sentenciaSecuencia ; sentencia
    (62) sentencia -> . empty
    (63) sentencia -> . sentenciaPara
    (64) sentencia -> . sentenciaSi
    (65) sentencia -> . asignacionUnidad
    (66) sentencia -> . asignacion
    (121) empty -> .
    (61) sentenciaPara -> . FOR ID DOSPUNTOSIGUAL expresion DOBLEPUNTO expresion DO sentenciaSecuencia END
    (54) sentenciaSi -> . IF relacion THEN sentenciaSecuencia sentenciaSiSino sentenciaSiEntonces END
    (120) asignacionUnidad -> . ID selector ( listaExpresiones )
    (45) asignacion -> . ID selector DOSPUNTOSIGUAL condicion | expresion
    (46) asignacion -> . ID selector DOSPUNTOSIGUAL expresion
    ;               reduce using rule 121 (empty -> .)
    ELSIF           reduce using rule 121 (empty -> .)
    ELSE            reduce using rule 121 (empty -> .)
    END             reduce using rule 121 (empty -> .)
    FOR             shift and go to state 132
    IF              shift and go to state 134
    ID              shift and go to state 133

    sentenciaSecuencia             shift and go to state 204
    sentencia                      shift and go to state 126
    empty                          shift and go to state 127
    sentenciaPara                  shift and go to state 128
    sentenciaSi                    shift and go to state 129
    asignacionUnidad               shift and go to state 130
    asignacion                     shift and go to state 131

state 179

    (48) relacion -> expresion MAYORIGUAL . expresion
    (42) expresion -> . termino
    (43) expresion -> . expresion - termino
    (44) expresion -> . expresion + termino
    (36) termino -> . factor
    (37) termino -> . termino simbolosProd factor
    (24) factor -> . SR ( expresion , expresion )
    (25) factor -> . LATCH ( expresion , expresion )
    (26) factor -> . REG ( expresion , expresion )
    (27) factor -> . REG ( expresion )
    (28) factor -> . MUX ( expresion , expresion : expresion , expresion , expresion , expresion )
    (29) factor -> . MUX ( expresion : expresion , expresion )
    (30) factor -> . ( expresion )
    (31) factor -> . ~ factor
    (32) factor -> . FLECHAARRIBA factor
    (33) factor -> . INTEGER
    (34) factor -> . LOGICVALUE
    (35) factor -> . ID selector
    SR              shift and go to state 55
    LATCH           shift and go to state 57
    REG             shift and go to state 58
    MUX             shift and go to state 59
    (               shift and go to state 56
    ~               shift and go to state 60
    FLECHAARRIBA    shift and go to state 61
    INTEGER         shift and go to state 62
    LOGICVALUE      shift and go to state 63
    ID              shift and go to state 51

    expresion                      shift and go to state 205
    termino                        shift and go to state 53
    factor                         shift and go to state 54

state 180

    (49) relacion -> expresion > . expresion
    (42) expresion -> . termino
    (43) expresion -> . expresion - termino
    (44) expresion -> . expresion + termino
    (36) termino -> . factor
    (37) termino -> . termino simbolosProd factor
    (24) factor -> . SR ( expresion , expresion )
    (25) factor -> . LATCH ( expresion , expresion )
    (26) factor -> . REG ( expresion , expresion )
    (27) factor -> . REG ( expresion )
    (28) factor -> . MUX ( expresion , expresion : expresion , expresion , expresion , expresion )
    (29) factor -> . MUX ( expresion : expresion , expresion )
    (30) factor -> . ( expresion )
    (31) factor -> . ~ factor
    (32) factor -> . FLECHAARRIBA factor
    (33) factor -> . INTEGER
    (34) factor -> . LOGICVALUE
    (35) factor -> . ID selector
    SR              shift and go to state 55
    LATCH           shift and go to state 57
    REG             shift and go to state 58
    MUX             shift and go to state 59
    (               shift and go to state 56
    ~               shift and go to state 60
    FLECHAARRIBA    shift and go to state 61
    INTEGER         shift and go to state 62
    LOGICVALUE      shift and go to state 63
    ID              shift and go to state 51

    expresion                      shift and go to state 206
    termino                        shift and go to state 53
    factor                         shift and go to state 54

state 181

    (50) relacion -> expresion MENORIGUAL . expresion
    (42) expresion -> . termino
    (43) expresion -> . expresion - termino
    (44) expresion -> . expresion + termino
    (36) termino -> . factor
    (37) termino -> . termino simbolosProd factor
    (24) factor -> . SR ( expresion , expresion )
    (25) factor -> . LATCH ( expresion , expresion )
    (26) factor -> . REG ( expresion , expresion )
    (27) factor -> . REG ( expresion )
    (28) factor -> . MUX ( expresion , expresion : expresion , expresion , expresion , expresion )
    (29) factor -> . MUX ( expresion : expresion , expresion )
    (30) factor -> . ( expresion )
    (31) factor -> . ~ factor
    (32) factor -> . FLECHAARRIBA factor
    (33) factor -> . INTEGER
    (34) factor -> . LOGICVALUE
    (35) factor -> . ID selector
    SR              shift and go to state 55
    LATCH           shift and go to state 57
    REG             shift and go to state 58
    MUX             shift and go to state 59
    (               shift and go to state 56
    ~               shift and go to state 60
    FLECHAARRIBA    shift and go to state 61
    INTEGER         shift and go to state 62
    LOGICVALUE      shift and go to state 63
    ID              shift and go to state 51

    expresion                      shift and go to state 207
    termino                        shift and go to state 53
    factor                         shift and go to state 54

state 182

    (51) relacion -> expresion < . expresion
    (42) expresion -> . termino
    (43) expresion -> . expresion - termino
    (44) expresion -> . expresion + termino
    (36) termino -> . factor
    (37) termino -> . termino simbolosProd factor
    (24) factor -> . SR ( expresion , expresion )
    (25) factor -> . LATCH ( expresion , expresion )
    (26) factor -> . REG ( expresion , expresion )
    (27) factor -> . REG ( expresion )
    (28) factor -> . MUX ( expresion , expresion : expresion , expresion , expresion , expresion )
    (29) factor -> . MUX ( expresion : expresion , expresion )
    (30) factor -> . ( expresion )
    (31) factor -> . ~ factor
    (32) factor -> . FLECHAARRIBA factor
    (33) factor -> . INTEGER
    (34) factor -> . LOGICVALUE
    (35) factor -> . ID selector
    SR              shift and go to state 55
    LATCH           shift and go to state 57
    REG             shift and go to state 58
    MUX             shift and go to state 59
    (               shift and go to state 56
    ~               shift and go to state 60
    FLECHAARRIBA    shift and go to state 61
    INTEGER         shift and go to state 62
    LOGICVALUE      shift and go to state 63
    ID              shift and go to state 51

    expresion                      shift and go to state 208
    termino                        shift and go to state 53
    factor                         shift and go to state 54

state 183

    (52) relacion -> expresion # . expresion
    (42) expresion -> . termino
    (43) expresion -> . expresion - termino
    (44) expresion -> . expresion + termino
    (36) termino -> . factor
    (37) termino -> . termino simbolosProd factor
    (24) factor -> . SR ( expresion , expresion )
    (25) factor -> . LATCH ( expresion , expresion )
    (26) factor -> . REG ( expresion , expresion )
    (27) factor -> . REG ( expresion )
    (28) factor -> . MUX ( expresion , expresion : expresion , expresion , expresion , expresion )
    (29) factor -> . MUX ( expresion : expresion , expresion )
    (30) factor -> . ( expresion )
    (31) factor -> . ~ factor
    (32) factor -> . FLECHAARRIBA factor
    (33) factor -> . INTEGER
    (34) factor -> . LOGICVALUE
    (35) factor -> . ID selector
    SR              shift and go to state 55
    LATCH           shift and go to state 57
    REG             shift and go to state 58
    MUX             shift and go to state 59
    (               shift and go to state 56
    ~               shift and go to state 60
    FLECHAARRIBA    shift and go to state 61
    INTEGER         shift and go to state 62
    LOGICVALUE      shift and go to state 63
    ID              shift and go to state 51

    expresion                      shift and go to state 209
    termino                        shift and go to state 53
    factor                         shift and go to state 54

state 184

    (53) relacion -> expresion = . expresion
    (42) expresion -> . termino
    (43) expresion -> . expresion - termino
    (44) expresion -> . expresion + termino
    (36) termino -> . factor
    (37) termino -> . termino simbolosProd factor
    (24) factor -> . SR ( expresion , expresion )
    (25) factor -> . LATCH ( expresion , expresion )
    (26) factor -> . REG ( expresion , expresion )
    (27) factor -> . REG ( expresion )
    (28) factor -> . MUX ( expresion , expresion : expresion , expresion , expresion , expresion )
    (29) factor -> . MUX ( expresion : expresion , expresion )
    (30) factor -> . ( expresion )
    (31) factor -> . ~ factor
    (32) factor -> . FLECHAARRIBA factor
    (33) factor -> . INTEGER
    (34) factor -> . LOGICVALUE
    (35) factor -> . ID selector
    SR              shift and go to state 55
    LATCH           shift and go to state 57
    REG             shift and go to state 58
    MUX             shift and go to state 59
    (               shift and go to state 56
    ~               shift and go to state 60
    FLECHAARRIBA    shift and go to state 61
    INTEGER         shift and go to state 62
    LOGICVALUE      shift and go to state 63
    ID              shift and go to state 51

    expresion                      shift and go to state 210
    termino                        shift and go to state 53
    factor                         shift and go to state 54

state 185

    (10) listaExpresiones -> listaExpresiones , expresion .
    (43) expresion -> expresion . - termino
    (44) expresion -> expresion . + termino
    )               reduce using rule 10 (listaExpresiones -> listaExpresiones , expresion .)
    ,               reduce using rule 10 (listaExpresiones -> listaExpresiones , expresion .)
    -               shift and go to state 86
    +               shift and go to state 87


state 186

    (24) factor -> SR ( expresion , expresion ) .
    MOD             reduce using rule 24 (factor -> SR ( expresion , expresion ) .)
    DIV             reduce using rule 24 (factor -> SR ( expresion , expresion ) .)
    /               reduce using rule 24 (factor -> SR ( expresion , expresion ) .)
    *               reduce using rule 24 (factor -> SR ( expresion , expresion ) .)
    ;               reduce using rule 24 (factor -> SR ( expresion , expresion ) .)
    -               reduce using rule 24 (factor -> SR ( expresion , expresion ) .)
    +               reduce using rule 24 (factor -> SR ( expresion , expresion ) .)
    )               reduce using rule 24 (factor -> SR ( expresion , expresion ) .)
    ]               reduce using rule 24 (factor -> SR ( expresion , expresion ) .)
    ,               reduce using rule 24 (factor -> SR ( expresion , expresion ) .)
    :               reduce using rule 24 (factor -> SR ( expresion , expresion ) .)
    MAYORIGUAL      reduce using rule 24 (factor -> SR ( expresion , expresion ) .)
    >               reduce using rule 24 (factor -> SR ( expresion , expresion ) .)
    MENORIGUAL      reduce using rule 24 (factor -> SR ( expresion , expresion ) .)
    <               reduce using rule 24 (factor -> SR ( expresion , expresion ) .)
    #               reduce using rule 24 (factor -> SR ( expresion , expresion ) .)
    =               reduce using rule 24 (factor -> SR ( expresion , expresion ) .)
    DOBLEPUNTO      reduce using rule 24 (factor -> SR ( expresion , expresion ) .)
    END             reduce using rule 24 (factor -> SR ( expresion , expresion ) .)
    ELSIF           reduce using rule 24 (factor -> SR ( expresion , expresion ) .)
    ELSE            reduce using rule 24 (factor -> SR ( expresion , expresion ) .)
    |               reduce using rule 24 (factor -> SR ( expresion , expresion ) .)
    THEN            reduce using rule 24 (factor -> SR ( expresion , expresion ) .)
    DO              reduce using rule 24 (factor -> SR ( expresion , expresion ) .)


state 187

    (25) factor -> LATCH ( expresion , expresion ) .
    MOD             reduce using rule 25 (factor -> LATCH ( expresion , expresion ) .)
    DIV             reduce using rule 25 (factor -> LATCH ( expresion , expresion ) .)
    /               reduce using rule 25 (factor -> LATCH ( expresion , expresion ) .)
    *               reduce using rule 25 (factor -> LATCH ( expresion , expresion ) .)
    ;               reduce using rule 25 (factor -> LATCH ( expresion , expresion ) .)
    -               reduce using rule 25 (factor -> LATCH ( expresion , expresion ) .)
    +               reduce using rule 25 (factor -> LATCH ( expresion , expresion ) .)
    )               reduce using rule 25 (factor -> LATCH ( expresion , expresion ) .)
    ]               reduce using rule 25 (factor -> LATCH ( expresion , expresion ) .)
    ,               reduce using rule 25 (factor -> LATCH ( expresion , expresion ) .)
    :               reduce using rule 25 (factor -> LATCH ( expresion , expresion ) .)
    MAYORIGUAL      reduce using rule 25 (factor -> LATCH ( expresion , expresion ) .)
    >               reduce using rule 25 (factor -> LATCH ( expresion , expresion ) .)
    MENORIGUAL      reduce using rule 25 (factor -> LATCH ( expresion , expresion ) .)
    <               reduce using rule 25 (factor -> LATCH ( expresion , expresion ) .)
    #               reduce using rule 25 (factor -> LATCH ( expresion , expresion ) .)
    =               reduce using rule 25 (factor -> LATCH ( expresion , expresion ) .)
    DOBLEPUNTO      reduce using rule 25 (factor -> LATCH ( expresion , expresion ) .)
    END             reduce using rule 25 (factor -> LATCH ( expresion , expresion ) .)
    ELSIF           reduce using rule 25 (factor -> LATCH ( expresion , expresion ) .)
    ELSE            reduce using rule 25 (factor -> LATCH ( expresion , expresion ) .)
    |               reduce using rule 25 (factor -> LATCH ( expresion , expresion ) .)
    THEN            reduce using rule 25 (factor -> LATCH ( expresion , expresion ) .)
    DO              reduce using rule 25 (factor -> LATCH ( expresion , expresion ) .)


state 188

    (26) factor -> REG ( expresion , expresion ) .
    MOD             reduce using rule 26 (factor -> REG ( expresion , expresion ) .)
    DIV             reduce using rule 26 (factor -> REG ( expresion , expresion ) .)
    /               reduce using rule 26 (factor -> REG ( expresion , expresion ) .)
    *               reduce using rule 26 (factor -> REG ( expresion , expresion ) .)
    ;               reduce using rule 26 (factor -> REG ( expresion , expresion ) .)
    -               reduce using rule 26 (factor -> REG ( expresion , expresion ) .)
    +               reduce using rule 26 (factor -> REG ( expresion , expresion ) .)
    )               reduce using rule 26 (factor -> REG ( expresion , expresion ) .)
    ]               reduce using rule 26 (factor -> REG ( expresion , expresion ) .)
    ,               reduce using rule 26 (factor -> REG ( expresion , expresion ) .)
    :               reduce using rule 26 (factor -> REG ( expresion , expresion ) .)
    MAYORIGUAL      reduce using rule 26 (factor -> REG ( expresion , expresion ) .)
    >               reduce using rule 26 (factor -> REG ( expresion , expresion ) .)
    MENORIGUAL      reduce using rule 26 (factor -> REG ( expresion , expresion ) .)
    <               reduce using rule 26 (factor -> REG ( expresion , expresion ) .)
    #               reduce using rule 26 (factor -> REG ( expresion , expresion ) .)
    =               reduce using rule 26 (factor -> REG ( expresion , expresion ) .)
    DOBLEPUNTO      reduce using rule 26 (factor -> REG ( expresion , expresion ) .)
    END             reduce using rule 26 (factor -> REG ( expresion , expresion ) .)
    ELSIF           reduce using rule 26 (factor -> REG ( expresion , expresion ) .)
    ELSE            reduce using rule 26 (factor -> REG ( expresion , expresion ) .)
    |               reduce using rule 26 (factor -> REG ( expresion , expresion ) .)
    THEN            reduce using rule 26 (factor -> REG ( expresion , expresion ) .)
    DO              reduce using rule 26 (factor -> REG ( expresion , expresion ) .)


state 189

    (28) factor -> MUX ( expresion , expresion : . expresion , expresion , expresion , expresion )
    (42) expresion -> . termino
    (43) expresion -> . expresion - termino
    (44) expresion -> . expresion + termino
    (36) termino -> . factor
    (37) termino -> . termino simbolosProd factor
    (24) factor -> . SR ( expresion , expresion )
    (25) factor -> . LATCH ( expresion , expresion )
    (26) factor -> . REG ( expresion , expresion )
    (27) factor -> . REG ( expresion )
    (28) factor -> . MUX ( expresion , expresion : expresion , expresion , expresion , expresion )
    (29) factor -> . MUX ( expresion : expresion , expresion )
    (30) factor -> . ( expresion )
    (31) factor -> . ~ factor
    (32) factor -> . FLECHAARRIBA factor
    (33) factor -> . INTEGER
    (34) factor -> . LOGICVALUE
    (35) factor -> . ID selector
    SR              shift and go to state 55
    LATCH           shift and go to state 57
    REG             shift and go to state 58
    MUX             shift and go to state 59
    (               shift and go to state 56
    ~               shift and go to state 60
    FLECHAARRIBA    shift and go to state 61
    INTEGER         shift and go to state 62
    LOGICVALUE      shift and go to state 63
    ID              shift and go to state 51

    expresion                      shift and go to state 211
    termino                        shift and go to state 53
    factor                         shift and go to state 54

state 190

    (29) factor -> MUX ( expresion : expresion , . expresion )
    (42) expresion -> . termino
    (43) expresion -> . expresion - termino
    (44) expresion -> . expresion + termino
    (36) termino -> . factor
    (37) termino -> . termino simbolosProd factor
    (24) factor -> . SR ( expresion , expresion )
    (25) factor -> . LATCH ( expresion , expresion )
    (26) factor -> . REG ( expresion , expresion )
    (27) factor -> . REG ( expresion )
    (28) factor -> . MUX ( expresion , expresion : expresion , expresion , expresion , expresion )
    (29) factor -> . MUX ( expresion : expresion , expresion )
    (30) factor -> . ( expresion )
    (31) factor -> . ~ factor
    (32) factor -> . FLECHAARRIBA factor
    (33) factor -> . INTEGER
    (34) factor -> . LOGICVALUE
    (35) factor -> . ID selector
    SR              shift and go to state 55
    LATCH           shift and go to state 57
    REG             shift and go to state 58
    MUX             shift and go to state 59
    (               shift and go to state 56
    ~               shift and go to state 60
    FLECHAARRIBA    shift and go to state 61
    INTEGER         shift and go to state 62
    LOGICVALUE      shift and go to state 63
    ID              shift and go to state 51

    expresion                      shift and go to state 212
    termino                        shift and go to state 53
    factor                         shift and go to state 54

state 191

    (103) declaracionTipo -> TYPE ID simboloPor listaIdParentesis ; declaracionConstanteCONST tipoFormalIN tipoFormlINOUT declaracionVariableOUT declaracionVariableVAR . sentenciaSecuenciaBEGIN END ID
    (92) sentenciaSecuenciaBEGIN -> . empty
    (93) sentenciaSecuenciaBEGIN -> . BEGIN sentenciaSecuencia
    (121) empty -> .
    BEGIN           shift and go to state 104
    END             reduce using rule 121 (empty -> .)

    sentenciaSecuenciaBEGIN        shift and go to state 213
    empty                          shift and go to state 103

state 192

    (119) tipoFormlBuslistaIdR -> tipoFormlBuslistaIdR listaId . : tipoFormalBus ;
    (15) listaId -> listaId . , ID
    :               shift and go to state 214
    ,               shift and go to state 50


state 193

    (118) tipoFormlBuslistaIdR -> listaId : . tipoFormalBus ;
    (101) tipoFormalBus -> . expresionCorcheteO OC
    (102) tipoFormalBus -> . expresionCorcheteO TS
    (95) expresionCorcheteO -> . empty
    (96) expresionCorcheteO -> . expresionCorcheteOR
    (121) empty -> .
    (97) expresionCorcheteOR -> . [ expresionOpcional ]
    (98) expresionCorcheteOR -> . expresionCorcheteOR [ expresionOpcional ]
    OC              reduce using rule 121 (empty -> .)
    TS              reduce using rule 121 (empty -> .)
    [               shift and go to state 199

    tipoFormalBus                  shift and go to state 215
    expresionCorcheteO             shift and go to state 216
    empty                          shift and go to state 197
    expresionCorcheteOR            shift and go to state 198

state 194

    (113) tipoFormallistaIdR -> tipoFormallistaIdR listaId : . tipoFormal ;
    (94) tipoFormal -> . expresionCorcheteO BIT
    (95) expresionCorcheteO -> . empty
    (96) expresionCorcheteO -> . expresionCorcheteOR
    (121) empty -> .
    (97) expresionCorcheteOR -> . [ expresionOpcional ]
    (98) expresionCorcheteOR -> . expresionCorcheteOR [ expresionOpcional ]
    BIT             reduce using rule 121 (empty -> .)
    [               shift and go to state 199

    tipoFormal                     shift and go to state 217
    expresionCorcheteO             shift and go to state 196
    empty                          shift and go to state 197
    expresionCorcheteOR            shift and go to state 198

state 195

    (112) tipoFormallistaIdR -> listaId : tipoFormal . ;
    ;               shift and go to state 218


state 196

    (94) tipoFormal -> expresionCorcheteO . BIT
    BIT             shift and go to state 219


state 197

    (95) expresionCorcheteO -> empty .
    BIT             reduce using rule 95 (expresionCorcheteO -> empty .)
    OC              reduce using rule 95 (expresionCorcheteO -> empty .)
    TS              reduce using rule 95 (expresionCorcheteO -> empty .)


state 198

    (96) expresionCorcheteO -> expresionCorcheteOR .
    (98) expresionCorcheteOR -> expresionCorcheteOR . [ expresionOpcional ]
    BIT             reduce using rule 96 (expresionCorcheteO -> expresionCorcheteOR .)
    OC              reduce using rule 96 (expresionCorcheteO -> expresionCorcheteOR .)
    TS              reduce using rule 96 (expresionCorcheteO -> expresionCorcheteOR .)
    [               shift and go to state 220


state 199

    (97) expresionCorcheteOR -> [ . expresionOpcional ]
    (99) expresionOpcional -> . empty
    (100) expresionOpcional -> . expresion
    (121) empty -> .
    (42) expresion -> . termino
    (43) expresion -> . expresion - termino
    (44) expresion -> . expresion + termino
    (36) termino -> . factor
    (37) termino -> . termino simbolosProd factor
    (24) factor -> . SR ( expresion , expresion )
    (25) factor -> . LATCH ( expresion , expresion )
    (26) factor -> . REG ( expresion , expresion )
    (27) factor -> . REG ( expresion )
    (28) factor -> . MUX ( expresion , expresion : expresion , expresion , expresion , expresion )
    (29) factor -> . MUX ( expresion : expresion , expresion )
    (30) factor -> . ( expresion )
    (31) factor -> . ~ factor
    (32) factor -> . FLECHAARRIBA factor
    (33) factor -> . INTEGER
    (34) factor -> . LOGICVALUE
    (35) factor -> . ID selector
    ]               reduce using rule 121 (empty -> .)
    SR              shift and go to state 55
    LATCH           shift and go to state 57
    REG             shift and go to state 58
    MUX             shift and go to state 59
    (               shift and go to state 56
    ~               shift and go to state 60
    FLECHAARRIBA    shift and go to state 61
    INTEGER         shift and go to state 62
    LOGICVALUE      shift and go to state 63
    ID              shift and go to state 51

    expresionOpcional              shift and go to state 221
    empty                          shift and go to state 222
    expresion                      shift and go to state 223
    termino                        shift and go to state 53
    factor                         shift and go to state 54

state 200

    (61) sentenciaPara -> FOR ID DOSPUNTOSIGUAL expresion . DOBLEPUNTO expresion DO sentenciaSecuencia END
    (43) expresion -> expresion . - termino
    (44) expresion -> expresion . + termino
    DOBLEPUNTO      shift and go to state 224
    -               shift and go to state 86
    +               shift and go to state 87


state 201

    (120) asignacionUnidad -> ID selector ( listaExpresiones . )
    (10) listaExpresiones -> listaExpresiones . , expresion
    )               shift and go to state 225
    ,               shift and go to state 160


state 202

    (45) asignacion -> ID selector DOSPUNTOSIGUAL condicion . | expresion
    |               shift and go to state 226


state 203

    (46) asignacion -> ID selector DOSPUNTOSIGUAL expresion .
    (47) condicion -> expresion .
    (43) expresion -> expresion . - termino
    (44) expresion -> expresion . + termino
    ;               reduce using rule 46 (asignacion -> ID selector DOSPUNTOSIGUAL expresion .)
    END             reduce using rule 46 (asignacion -> ID selector DOSPUNTOSIGUAL expresion .)
    ELSIF           reduce using rule 46 (asignacion -> ID selector DOSPUNTOSIGUAL expresion .)
    ELSE            reduce using rule 46 (asignacion -> ID selector DOSPUNTOSIGUAL expresion .)
    |               reduce using rule 47 (condicion -> expresion .)
    -               shift and go to state 86
    +               shift and go to state 87


state 204

    (54) sentenciaSi -> IF relacion THEN sentenciaSecuencia . sentenciaSiSino sentenciaSiEntonces END
    (68) sentenciaSecuencia -> sentenciaSecuencia . ; sentencia
    (55) sentenciaSiSino -> . empty
    (56) sentenciaSiSino -> . sentenciaSiSinoR
    (121) empty -> .
    (57) sentenciaSiSinoR -> . ELSIF relacion THEN sentenciaSecuencia
    (58) sentenciaSiSinoR -> . sentenciaSiSinoR ELSIF relacion THEN sentenciaSecuencia
    ;               shift and go to state 153
    ELSE            reduce using rule 121 (empty -> .)
    END             reduce using rule 121 (empty -> .)
    ELSIF           shift and go to state 230

    sentenciaSiSino                shift and go to state 227
    empty                          shift and go to state 228
    sentenciaSiSinoR               shift and go to state 229

state 205

    (48) relacion -> expresion MAYORIGUAL expresion .
    (43) expresion -> expresion . - termino
    (44) expresion -> expresion . + termino
    THEN            reduce using rule 48 (relacion -> expresion MAYORIGUAL expresion .)
    -               shift and go to state 86
    +               shift and go to state 87


state 206

    (49) relacion -> expresion > expresion .
    (43) expresion -> expresion . - termino
    (44) expresion -> expresion . + termino
    THEN            reduce using rule 49 (relacion -> expresion > expresion .)
    -               shift and go to state 86
    +               shift and go to state 87


state 207

    (50) relacion -> expresion MENORIGUAL expresion .
    (43) expresion -> expresion . - termino
    (44) expresion -> expresion . + termino
    THEN            reduce using rule 50 (relacion -> expresion MENORIGUAL expresion .)
    -               shift and go to state 86
    +               shift and go to state 87


state 208

    (51) relacion -> expresion < expresion .
    (43) expresion -> expresion . - termino
    (44) expresion -> expresion . + termino
    THEN            reduce using rule 51 (relacion -> expresion < expresion .)
    -               shift and go to state 86
    +               shift and go to state 87


state 209

    (52) relacion -> expresion # expresion .
    (43) expresion -> expresion . - termino
    (44) expresion -> expresion . + termino
    THEN            reduce using rule 52 (relacion -> expresion # expresion .)
    -               shift and go to state 86
    +               shift and go to state 87


state 210

    (53) relacion -> expresion = expresion .
    (43) expresion -> expresion . - termino
    (44) expresion -> expresion . + termino
    THEN            reduce using rule 53 (relacion -> expresion = expresion .)
    -               shift and go to state 86
    +               shift and go to state 87


state 211

    (28) factor -> MUX ( expresion , expresion : expresion . , expresion , expresion , expresion )
    (43) expresion -> expresion . - termino
    (44) expresion -> expresion . + termino
    ,               shift and go to state 231
    -               shift and go to state 86
    +               shift and go to state 87


state 212

    (29) factor -> MUX ( expresion : expresion , expresion . )
    (43) expresion -> expresion . - termino
    (44) expresion -> expresion . + termino
    )               shift and go to state 232
    -               shift and go to state 86
    +               shift and go to state 87


state 213

    (103) declaracionTipo -> TYPE ID simboloPor listaIdParentesis ; declaracionConstanteCONST tipoFormalIN tipoFormlINOUT declaracionVariableOUT declaracionVariableVAR sentenciaSecuenciaBEGIN . END ID
    END             shift and go to state 233


state 214

    (119) tipoFormlBuslistaIdR -> tipoFormlBuslistaIdR listaId : . tipoFormalBus ;
    (101) tipoFormalBus -> . expresionCorcheteO OC
    (102) tipoFormalBus -> . expresionCorcheteO TS
    (95) expresionCorcheteO -> . empty
    (96) expresionCorcheteO -> . expresionCorcheteOR
    (121) empty -> .
    (97) expresionCorcheteOR -> . [ expresionOpcional ]
    (98) expresionCorcheteOR -> . expresionCorcheteOR [ expresionOpcional ]
    OC              reduce using rule 121 (empty -> .)
    TS              reduce using rule 121 (empty -> .)
    [               shift and go to state 199

    tipoFormalBus                  shift and go to state 234
    expresionCorcheteO             shift and go to state 216
    empty                          shift and go to state 197
    expresionCorcheteOR            shift and go to state 198

state 215

    (118) tipoFormlBuslistaIdR -> listaId : tipoFormalBus . ;
    ;               shift and go to state 235


state 216

    (101) tipoFormalBus -> expresionCorcheteO . OC
    (102) tipoFormalBus -> expresionCorcheteO . TS
    OC              shift and go to state 236
    TS              shift and go to state 237


state 217

    (113) tipoFormallistaIdR -> tipoFormallistaIdR listaId : tipoFormal . ;
    ;               shift and go to state 238


state 218

    (112) tipoFormallistaIdR -> listaId : tipoFormal ; .
    ID              reduce using rule 112 (tipoFormallistaIdR -> listaId : tipoFormal ; .)
    INOUT           reduce using rule 112 (tipoFormallistaIdR -> listaId : tipoFormal ; .)
    OUT             reduce using rule 112 (tipoFormallistaIdR -> listaId : tipoFormal ; .)
    VAR             reduce using rule 112 (tipoFormallistaIdR -> listaId : tipoFormal ; .)
    BEGIN           reduce using rule 112 (tipoFormallistaIdR -> listaId : tipoFormal ; .)
    END             reduce using rule 112 (tipoFormallistaIdR -> listaId : tipoFormal ; .)


state 219

    (94) tipoFormal -> expresionCorcheteO BIT .
    ;               reduce using rule 94 (tipoFormal -> expresionCorcheteO BIT .)


state 220

    (98) expresionCorcheteOR -> expresionCorcheteOR [ . expresionOpcional ]
    (99) expresionOpcional -> . empty
    (100) expresionOpcional -> . expresion
    (121) empty -> .
    (42) expresion -> . termino
    (43) expresion -> . expresion - termino
    (44) expresion -> . expresion + termino
    (36) termino -> . factor
    (37) termino -> . termino simbolosProd factor
    (24) factor -> . SR ( expresion , expresion )
    (25) factor -> . LATCH ( expresion , expresion )
    (26) factor -> . REG ( expresion , expresion )
    (27) factor -> . REG ( expresion )
    (28) factor -> . MUX ( expresion , expresion : expresion , expresion , expresion , expresion )
    (29) factor -> . MUX ( expresion : expresion , expresion )
    (30) factor -> . ( expresion )
    (31) factor -> . ~ factor
    (32) factor -> . FLECHAARRIBA factor
    (33) factor -> . INTEGER
    (34) factor -> . LOGICVALUE
    (35) factor -> . ID selector
    ]               reduce using rule 121 (empty -> .)
    SR              shift and go to state 55
    LATCH           shift and go to state 57
    REG             shift and go to state 58
    MUX             shift and go to state 59
    (               shift and go to state 56
    ~               shift and go to state 60
    FLECHAARRIBA    shift and go to state 61
    INTEGER         shift and go to state 62
    LOGICVALUE      shift and go to state 63
    ID              shift and go to state 51

    expresionOpcional              shift and go to state 239
    empty                          shift and go to state 222
    expresion                      shift and go to state 223
    termino                        shift and go to state 53
    factor                         shift and go to state 54

state 221

    (97) expresionCorcheteOR -> [ expresionOpcional . ]
    ]               shift and go to state 240


state 222

    (99) expresionOpcional -> empty .
    ]               reduce using rule 99 (expresionOpcional -> empty .)


state 223

    (100) expresionOpcional -> expresion .
    (43) expresion -> expresion . - termino
    (44) expresion -> expresion . + termino
    ]               reduce using rule 100 (expresionOpcional -> expresion .)
    -               shift and go to state 86
    +               shift and go to state 87


state 224

    (61) sentenciaPara -> FOR ID DOSPUNTOSIGUAL expresion DOBLEPUNTO . expresion DO sentenciaSecuencia END
    (42) expresion -> . termino
    (43) expresion -> . expresion - termino
    (44) expresion -> . expresion + termino
    (36) termino -> . factor
    (37) termino -> . termino simbolosProd factor
    (24) factor -> . SR ( expresion , expresion )
    (25) factor -> . LATCH ( expresion , expresion )
    (26) factor -> . REG ( expresion , expresion )
    (27) factor -> . REG ( expresion )
    (28) factor -> . MUX ( expresion , expresion : expresion , expresion , expresion , expresion )
    (29) factor -> . MUX ( expresion : expresion , expresion )
    (30) factor -> . ( expresion )
    (31) factor -> . ~ factor
    (32) factor -> . FLECHAARRIBA factor
    (33) factor -> . INTEGER
    (34) factor -> . LOGICVALUE
    (35) factor -> . ID selector
    SR              shift and go to state 55
    LATCH           shift and go to state 57
    REG             shift and go to state 58
    MUX             shift and go to state 59
    (               shift and go to state 56
    ~               shift and go to state 60
    FLECHAARRIBA    shift and go to state 61
    INTEGER         shift and go to state 62
    LOGICVALUE      shift and go to state 63
    ID              shift and go to state 51

    expresion                      shift and go to state 241
    termino                        shift and go to state 53
    factor                         shift and go to state 54

state 225

    (120) asignacionUnidad -> ID selector ( listaExpresiones ) .
    ;               reduce using rule 120 (asignacionUnidad -> ID selector ( listaExpresiones ) .)
    END             reduce using rule 120 (asignacionUnidad -> ID selector ( listaExpresiones ) .)
    ELSIF           reduce using rule 120 (asignacionUnidad -> ID selector ( listaExpresiones ) .)
    ELSE            reduce using rule 120 (asignacionUnidad -> ID selector ( listaExpresiones ) .)


state 226

    (45) asignacion -> ID selector DOSPUNTOSIGUAL condicion | . expresion
    (42) expresion -> . termino
    (43) expresion -> . expresion - termino
    (44) expresion -> . expresion + termino
    (36) termino -> . factor
    (37) termino -> . termino simbolosProd factor
    (24) factor -> . SR ( expresion , expresion )
    (25) factor -> . LATCH ( expresion , expresion )
    (26) factor -> . REG ( expresion , expresion )
    (27) factor -> . REG ( expresion )
    (28) factor -> . MUX ( expresion , expresion : expresion , expresion , expresion , expresion )
    (29) factor -> . MUX ( expresion : expresion , expresion )
    (30) factor -> . ( expresion )
    (31) factor -> . ~ factor
    (32) factor -> . FLECHAARRIBA factor
    (33) factor -> . INTEGER
    (34) factor -> . LOGICVALUE
    (35) factor -> . ID selector
    SR              shift and go to state 55
    LATCH           shift and go to state 57
    REG             shift and go to state 58
    MUX             shift and go to state 59
    (               shift and go to state 56
    ~               shift and go to state 60
    FLECHAARRIBA    shift and go to state 61
    INTEGER         shift and go to state 62
    LOGICVALUE      shift and go to state 63
    ID              shift and go to state 51

    expresion                      shift and go to state 242
    termino                        shift and go to state 53
    factor                         shift and go to state 54

state 227

    (54) sentenciaSi -> IF relacion THEN sentenciaSecuencia sentenciaSiSino . sentenciaSiEntonces END
    (59) sentenciaSiEntonces -> . empty
    (60) sentenciaSiEntonces -> . ELSE sentenciaSecuencia
    (121) empty -> .
    ELSE            shift and go to state 245
    END             reduce using rule 121 (empty -> .)

    sentenciaSiEntonces            shift and go to state 243
    empty                          shift and go to state 244

state 228

    (55) sentenciaSiSino -> empty .
    ELSE            reduce using rule 55 (sentenciaSiSino -> empty .)
    END             reduce using rule 55 (sentenciaSiSino -> empty .)


state 229

    (56) sentenciaSiSino -> sentenciaSiSinoR .
    (58) sentenciaSiSinoR -> sentenciaSiSinoR . ELSIF relacion THEN sentenciaSecuencia
    ELSE            reduce using rule 56 (sentenciaSiSino -> sentenciaSiSinoR .)
    END             reduce using rule 56 (sentenciaSiSino -> sentenciaSiSinoR .)
    ELSIF           shift and go to state 246


state 230

    (57) sentenciaSiSinoR -> ELSIF . relacion THEN sentenciaSecuencia
    (48) relacion -> . expresion MAYORIGUAL expresion
    (49) relacion -> . expresion > expresion
    (50) relacion -> . expresion MENORIGUAL expresion
    (51) relacion -> . expresion < expresion
    (52) relacion -> . expresion # expresion
    (53) relacion -> . expresion = expresion
    (42) expresion -> . termino
    (43) expresion -> . expresion - termino
    (44) expresion -> . expresion + termino
    (36) termino -> . factor
    (37) termino -> . termino simbolosProd factor
    (24) factor -> . SR ( expresion , expresion )
    (25) factor -> . LATCH ( expresion , expresion )
    (26) factor -> . REG ( expresion , expresion )
    (27) factor -> . REG ( expresion )
    (28) factor -> . MUX ( expresion , expresion : expresion , expresion , expresion , expresion )
    (29) factor -> . MUX ( expresion : expresion , expresion )
    (30) factor -> . ( expresion )
    (31) factor -> . ~ factor
    (32) factor -> . FLECHAARRIBA factor
    (33) factor -> . INTEGER
    (34) factor -> . LOGICVALUE
    (35) factor -> . ID selector
    SR              shift and go to state 55
    LATCH           shift and go to state 57
    REG             shift and go to state 58
    MUX             shift and go to state 59
    (               shift and go to state 56
    ~               shift and go to state 60
    FLECHAARRIBA    shift and go to state 61
    INTEGER         shift and go to state 62
    LOGICVALUE      shift and go to state 63
    ID              shift and go to state 51

    relacion                       shift and go to state 247
    expresion                      shift and go to state 157
    termino                        shift and go to state 53
    factor                         shift and go to state 54

state 231

    (28) factor -> MUX ( expresion , expresion : expresion , . expresion , expresion , expresion )
    (42) expresion -> . termino
    (43) expresion -> . expresion - termino
    (44) expresion -> . expresion + termino
    (36) termino -> . factor
    (37) termino -> . termino simbolosProd factor
    (24) factor -> . SR ( expresion , expresion )
    (25) factor -> . LATCH ( expresion , expresion )
    (26) factor -> . REG ( expresion , expresion )
    (27) factor -> . REG ( expresion )
    (28) factor -> . MUX ( expresion , expresion : expresion , expresion , expresion , expresion )
    (29) factor -> . MUX ( expresion : expresion , expresion )
    (30) factor -> . ( expresion )
    (31) factor -> . ~ factor
    (32) factor -> . FLECHAARRIBA factor
    (33) factor -> . INTEGER
    (34) factor -> . LOGICVALUE
    (35) factor -> . ID selector
    SR              shift and go to state 55
    LATCH           shift and go to state 57
    REG             shift and go to state 58
    MUX             shift and go to state 59
    (               shift and go to state 56
    ~               shift and go to state 60
    FLECHAARRIBA    shift and go to state 61
    INTEGER         shift and go to state 62
    LOGICVALUE      shift and go to state 63
    ID              shift and go to state 51

    expresion                      shift and go to state 248
    termino                        shift and go to state 53
    factor                         shift and go to state 54

state 232

    (29) factor -> MUX ( expresion : expresion , expresion ) .
    MOD             reduce using rule 29 (factor -> MUX ( expresion : expresion , expresion ) .)
    DIV             reduce using rule 29 (factor -> MUX ( expresion : expresion , expresion ) .)
    /               reduce using rule 29 (factor -> MUX ( expresion : expresion , expresion ) .)
    *               reduce using rule 29 (factor -> MUX ( expresion : expresion , expresion ) .)
    ;               reduce using rule 29 (factor -> MUX ( expresion : expresion , expresion ) .)
    -               reduce using rule 29 (factor -> MUX ( expresion : expresion , expresion ) .)
    +               reduce using rule 29 (factor -> MUX ( expresion : expresion , expresion ) .)
    )               reduce using rule 29 (factor -> MUX ( expresion : expresion , expresion ) .)
    ]               reduce using rule 29 (factor -> MUX ( expresion : expresion , expresion ) .)
    ,               reduce using rule 29 (factor -> MUX ( expresion : expresion , expresion ) .)
    :               reduce using rule 29 (factor -> MUX ( expresion : expresion , expresion ) .)
    MAYORIGUAL      reduce using rule 29 (factor -> MUX ( expresion : expresion , expresion ) .)
    >               reduce using rule 29 (factor -> MUX ( expresion : expresion , expresion ) .)
    MENORIGUAL      reduce using rule 29 (factor -> MUX ( expresion : expresion , expresion ) .)
    <               reduce using rule 29 (factor -> MUX ( expresion : expresion , expresion ) .)
    #               reduce using rule 29 (factor -> MUX ( expresion : expresion , expresion ) .)
    =               reduce using rule 29 (factor -> MUX ( expresion : expresion , expresion ) .)
    DOBLEPUNTO      reduce using rule 29 (factor -> MUX ( expresion : expresion , expresion ) .)
    END             reduce using rule 29 (factor -> MUX ( expresion : expresion , expresion ) .)
    ELSIF           reduce using rule 29 (factor -> MUX ( expresion : expresion , expresion ) .)
    ELSE            reduce using rule 29 (factor -> MUX ( expresion : expresion , expresion ) .)
    |               reduce using rule 29 (factor -> MUX ( expresion : expresion , expresion ) .)
    THEN            reduce using rule 29 (factor -> MUX ( expresion : expresion , expresion ) .)
    DO              reduce using rule 29 (factor -> MUX ( expresion : expresion , expresion ) .)


state 233

    (103) declaracionTipo -> TYPE ID simboloPor listaIdParentesis ; declaracionConstanteCONST tipoFormalIN tipoFormlINOUT declaracionVariableOUT declaracionVariableVAR sentenciaSecuenciaBEGIN END . ID
    ID              shift and go to state 249


state 234

    (119) tipoFormlBuslistaIdR -> tipoFormlBuslistaIdR listaId : tipoFormalBus . ;
    ;               shift and go to state 250


state 235

    (118) tipoFormlBuslistaIdR -> listaId : tipoFormalBus ; .
    ID              reduce using rule 118 (tipoFormlBuslistaIdR -> listaId : tipoFormalBus ; .)
    OUT             reduce using rule 118 (tipoFormlBuslistaIdR -> listaId : tipoFormalBus ; .)
    VAR             reduce using rule 118 (tipoFormlBuslistaIdR -> listaId : tipoFormalBus ; .)
    BEGIN           reduce using rule 118 (tipoFormlBuslistaIdR -> listaId : tipoFormalBus ; .)
    END             reduce using rule 118 (tipoFormlBuslistaIdR -> listaId : tipoFormalBus ; .)


state 236

    (101) tipoFormalBus -> expresionCorcheteO OC .
    ;               reduce using rule 101 (tipoFormalBus -> expresionCorcheteO OC .)


state 237

    (102) tipoFormalBus -> expresionCorcheteO TS .
    ;               reduce using rule 102 (tipoFormalBus -> expresionCorcheteO TS .)


state 238

    (113) tipoFormallistaIdR -> tipoFormallistaIdR listaId : tipoFormal ; .
    ID              reduce using rule 113 (tipoFormallistaIdR -> tipoFormallistaIdR listaId : tipoFormal ; .)
    INOUT           reduce using rule 113 (tipoFormallistaIdR -> tipoFormallistaIdR listaId : tipoFormal ; .)
    OUT             reduce using rule 113 (tipoFormallistaIdR -> tipoFormallistaIdR listaId : tipoFormal ; .)
    VAR             reduce using rule 113 (tipoFormallistaIdR -> tipoFormallistaIdR listaId : tipoFormal ; .)
    BEGIN           reduce using rule 113 (tipoFormallistaIdR -> tipoFormallistaIdR listaId : tipoFormal ; .)
    END             reduce using rule 113 (tipoFormallistaIdR -> tipoFormallistaIdR listaId : tipoFormal ; .)


state 239

    (98) expresionCorcheteOR -> expresionCorcheteOR [ expresionOpcional . ]
    ]               shift and go to state 251


state 240

    (97) expresionCorcheteOR -> [ expresionOpcional ] .
    [               reduce using rule 97 (expresionCorcheteOR -> [ expresionOpcional ] .)
    BIT             reduce using rule 97 (expresionCorcheteOR -> [ expresionOpcional ] .)
    OC              reduce using rule 97 (expresionCorcheteOR -> [ expresionOpcional ] .)
    TS              reduce using rule 97 (expresionCorcheteOR -> [ expresionOpcional ] .)


state 241

    (61) sentenciaPara -> FOR ID DOSPUNTOSIGUAL expresion DOBLEPUNTO expresion . DO sentenciaSecuencia END
    (43) expresion -> expresion . - termino
    (44) expresion -> expresion . + termino
    DO              shift and go to state 252
    -               shift and go to state 86
    +               shift and go to state 87


state 242

    (45) asignacion -> ID selector DOSPUNTOSIGUAL condicion | expresion .
    (43) expresion -> expresion . - termino
    (44) expresion -> expresion . + termino
    ;               reduce using rule 45 (asignacion -> ID selector DOSPUNTOSIGUAL condicion | expresion .)
    END             reduce using rule 45 (asignacion -> ID selector DOSPUNTOSIGUAL condicion | expresion .)
    ELSIF           reduce using rule 45 (asignacion -> ID selector DOSPUNTOSIGUAL condicion | expresion .)
    ELSE            reduce using rule 45 (asignacion -> ID selector DOSPUNTOSIGUAL condicion | expresion .)
    -               shift and go to state 86
    +               shift and go to state 87


state 243

    (54) sentenciaSi -> IF relacion THEN sentenciaSecuencia sentenciaSiSino sentenciaSiEntonces . END
    END             shift and go to state 253


state 244

    (59) sentenciaSiEntonces -> empty .
    END             reduce using rule 59 (sentenciaSiEntonces -> empty .)


state 245

    (60) sentenciaSiEntonces -> ELSE . sentenciaSecuencia
    (67) sentenciaSecuencia -> . sentencia
    (68) sentenciaSecuencia -> . sentenciaSecuencia ; sentencia
    (62) sentencia -> . empty
    (63) sentencia -> . sentenciaPara
    (64) sentencia -> . sentenciaSi
    (65) sentencia -> . asignacionUnidad
    (66) sentencia -> . asignacion
    (121) empty -> .
    (61) sentenciaPara -> . FOR ID DOSPUNTOSIGUAL expresion DOBLEPUNTO expresion DO sentenciaSecuencia END
    (54) sentenciaSi -> . IF relacion THEN sentenciaSecuencia sentenciaSiSino sentenciaSiEntonces END
    (120) asignacionUnidad -> . ID selector ( listaExpresiones )
    (45) asignacion -> . ID selector DOSPUNTOSIGUAL condicion | expresion
    (46) asignacion -> . ID selector DOSPUNTOSIGUAL expresion
    ;               reduce using rule 121 (empty -> .)
    END             reduce using rule 121 (empty -> .)
    FOR             shift and go to state 132
    IF              shift and go to state 134
    ID              shift and go to state 133

    sentenciaSecuencia             shift and go to state 254
    sentencia                      shift and go to state 126
    empty                          shift and go to state 127
    sentenciaPara                  shift and go to state 128
    sentenciaSi                    shift and go to state 129
    asignacionUnidad               shift and go to state 130
    asignacion                     shift and go to state 131

state 246

    (58) sentenciaSiSinoR -> sentenciaSiSinoR ELSIF . relacion THEN sentenciaSecuencia
    (48) relacion -> . expresion MAYORIGUAL expresion
    (49) relacion -> . expresion > expresion
    (50) relacion -> . expresion MENORIGUAL expresion
    (51) relacion -> . expresion < expresion
    (52) relacion -> . expresion # expresion
    (53) relacion -> . expresion = expresion
    (42) expresion -> . termino
    (43) expresion -> . expresion - termino
    (44) expresion -> . expresion + termino
    (36) termino -> . factor
    (37) termino -> . termino simbolosProd factor
    (24) factor -> . SR ( expresion , expresion )
    (25) factor -> . LATCH ( expresion , expresion )
    (26) factor -> . REG ( expresion , expresion )
    (27) factor -> . REG ( expresion )
    (28) factor -> . MUX ( expresion , expresion : expresion , expresion , expresion , expresion )
    (29) factor -> . MUX ( expresion : expresion , expresion )
    (30) factor -> . ( expresion )
    (31) factor -> . ~ factor
    (32) factor -> . FLECHAARRIBA factor
    (33) factor -> . INTEGER
    (34) factor -> . LOGICVALUE
    (35) factor -> . ID selector
    SR              shift and go to state 55
    LATCH           shift and go to state 57
    REG             shift and go to state 58
    MUX             shift and go to state 59
    (               shift and go to state 56
    ~               shift and go to state 60
    FLECHAARRIBA    shift and go to state 61
    INTEGER         shift and go to state 62
    LOGICVALUE      shift and go to state 63
    ID              shift and go to state 51

    relacion                       shift and go to state 255
    expresion                      shift and go to state 157
    termino                        shift and go to state 53
    factor                         shift and go to state 54

state 247

    (57) sentenciaSiSinoR -> ELSIF relacion . THEN sentenciaSecuencia
    THEN            shift and go to state 256


state 248

    (28) factor -> MUX ( expresion , expresion : expresion , expresion . , expresion , expresion )
    (43) expresion -> expresion . - termino
    (44) expresion -> expresion . + termino
    ,               shift and go to state 257
    -               shift and go to state 86
    +               shift and go to state 87


state 249

    (103) declaracionTipo -> TYPE ID simboloPor listaIdParentesis ; declaracionConstanteCONST tipoFormalIN tipoFormlINOUT declaracionVariableOUT declaracionVariableVAR sentenciaSecuenciaBEGIN END ID .
    ;               reduce using rule 103 (declaracionTipo -> TYPE ID simboloPor listaIdParentesis ; declaracionConstanteCONST tipoFormalIN tipoFormlINOUT declaracionVariableOUT declaracionVariableVAR sentenciaSecuenciaBEGIN END ID .)


state 250

    (119) tipoFormlBuslistaIdR -> tipoFormlBuslistaIdR listaId : tipoFormalBus ; .
    ID              reduce using rule 119 (tipoFormlBuslistaIdR -> tipoFormlBuslistaIdR listaId : tipoFormalBus ; .)
    OUT             reduce using rule 119 (tipoFormlBuslistaIdR -> tipoFormlBuslistaIdR listaId : tipoFormalBus ; .)
    VAR             reduce using rule 119 (tipoFormlBuslistaIdR -> tipoFormlBuslistaIdR listaId : tipoFormalBus ; .)
    BEGIN           reduce using rule 119 (tipoFormlBuslistaIdR -> tipoFormlBuslistaIdR listaId : tipoFormalBus ; .)
    END             reduce using rule 119 (tipoFormlBuslistaIdR -> tipoFormlBuslistaIdR listaId : tipoFormalBus ; .)


state 251

    (98) expresionCorcheteOR -> expresionCorcheteOR [ expresionOpcional ] .
    [               reduce using rule 98 (expresionCorcheteOR -> expresionCorcheteOR [ expresionOpcional ] .)
    BIT             reduce using rule 98 (expresionCorcheteOR -> expresionCorcheteOR [ expresionOpcional ] .)
    OC              reduce using rule 98 (expresionCorcheteOR -> expresionCorcheteOR [ expresionOpcional ] .)
    TS              reduce using rule 98 (expresionCorcheteOR -> expresionCorcheteOR [ expresionOpcional ] .)


state 252

    (61) sentenciaPara -> FOR ID DOSPUNTOSIGUAL expresion DOBLEPUNTO expresion DO . sentenciaSecuencia END
    (67) sentenciaSecuencia -> . sentencia
    (68) sentenciaSecuencia -> . sentenciaSecuencia ; sentencia
    (62) sentencia -> . empty
    (63) sentencia -> . sentenciaPara
    (64) sentencia -> . sentenciaSi
    (65) sentencia -> . asignacionUnidad
    (66) sentencia -> . asignacion
    (121) empty -> .
    (61) sentenciaPara -> . FOR ID DOSPUNTOSIGUAL expresion DOBLEPUNTO expresion DO sentenciaSecuencia END
    (54) sentenciaSi -> . IF relacion THEN sentenciaSecuencia sentenciaSiSino sentenciaSiEntonces END
    (120) asignacionUnidad -> . ID selector ( listaExpresiones )
    (45) asignacion -> . ID selector DOSPUNTOSIGUAL condicion | expresion
    (46) asignacion -> . ID selector DOSPUNTOSIGUAL expresion
    END             reduce using rule 121 (empty -> .)
    ;               reduce using rule 121 (empty -> .)
    FOR             shift and go to state 132
    IF              shift and go to state 134
    ID              shift and go to state 133

    sentenciaSecuencia             shift and go to state 258
    sentencia                      shift and go to state 126
    empty                          shift and go to state 127
    sentenciaPara                  shift and go to state 128
    sentenciaSi                    shift and go to state 129
    asignacionUnidad               shift and go to state 130
    asignacion                     shift and go to state 131

state 253

    (54) sentenciaSi -> IF relacion THEN sentenciaSecuencia sentenciaSiSino sentenciaSiEntonces END .
    ;               reduce using rule 54 (sentenciaSi -> IF relacion THEN sentenciaSecuencia sentenciaSiSino sentenciaSiEntonces END .)
    END             reduce using rule 54 (sentenciaSi -> IF relacion THEN sentenciaSecuencia sentenciaSiSino sentenciaSiEntonces END .)
    ELSIF           reduce using rule 54 (sentenciaSi -> IF relacion THEN sentenciaSecuencia sentenciaSiSino sentenciaSiEntonces END .)
    ELSE            reduce using rule 54 (sentenciaSi -> IF relacion THEN sentenciaSecuencia sentenciaSiSino sentenciaSiEntonces END .)


state 254

    (60) sentenciaSiEntonces -> ELSE sentenciaSecuencia .
    (68) sentenciaSecuencia -> sentenciaSecuencia . ; sentencia
    END             reduce using rule 60 (sentenciaSiEntonces -> ELSE sentenciaSecuencia .)
    ;               shift and go to state 153


state 255

    (58) sentenciaSiSinoR -> sentenciaSiSinoR ELSIF relacion . THEN sentenciaSecuencia
    THEN            shift and go to state 259


state 256

    (57) sentenciaSiSinoR -> ELSIF relacion THEN . sentenciaSecuencia
    (67) sentenciaSecuencia -> . sentencia
    (68) sentenciaSecuencia -> . sentenciaSecuencia ; sentencia
    (62) sentencia -> . empty
    (63) sentencia -> . sentenciaPara
    (64) sentencia -> . sentenciaSi
    (65) sentencia -> . asignacionUnidad
    (66) sentencia -> . asignacion
    (121) empty -> .
    (61) sentenciaPara -> . FOR ID DOSPUNTOSIGUAL expresion DOBLEPUNTO expresion DO sentenciaSecuencia END
    (54) sentenciaSi -> . IF relacion THEN sentenciaSecuencia sentenciaSiSino sentenciaSiEntonces END
    (120) asignacionUnidad -> . ID selector ( listaExpresiones )
    (45) asignacion -> . ID selector DOSPUNTOSIGUAL condicion | expresion
    (46) asignacion -> . ID selector DOSPUNTOSIGUAL expresion
    ;               reduce using rule 121 (empty -> .)
    ELSIF           reduce using rule 121 (empty -> .)
    ELSE            reduce using rule 121 (empty -> .)
    END             reduce using rule 121 (empty -> .)
    FOR             shift and go to state 132
    IF              shift and go to state 134
    ID              shift and go to state 133

    sentenciaSecuencia             shift and go to state 260
    sentencia                      shift and go to state 126
    empty                          shift and go to state 127
    sentenciaPara                  shift and go to state 128
    sentenciaSi                    shift and go to state 129
    asignacionUnidad               shift and go to state 130
    asignacion                     shift and go to state 131

state 257

    (28) factor -> MUX ( expresion , expresion : expresion , expresion , . expresion , expresion )
    (42) expresion -> . termino
    (43) expresion -> . expresion - termino
    (44) expresion -> . expresion + termino
    (36) termino -> . factor
    (37) termino -> . termino simbolosProd factor
    (24) factor -> . SR ( expresion , expresion )
    (25) factor -> . LATCH ( expresion , expresion )
    (26) factor -> . REG ( expresion , expresion )
    (27) factor -> . REG ( expresion )
    (28) factor -> . MUX ( expresion , expresion : expresion , expresion , expresion , expresion )
    (29) factor -> . MUX ( expresion : expresion , expresion )
    (30) factor -> . ( expresion )
    (31) factor -> . ~ factor
    (32) factor -> . FLECHAARRIBA factor
    (33) factor -> . INTEGER
    (34) factor -> . LOGICVALUE
    (35) factor -> . ID selector
    SR              shift and go to state 55
    LATCH           shift and go to state 57
    REG             shift and go to state 58
    MUX             shift and go to state 59
    (               shift and go to state 56
    ~               shift and go to state 60
    FLECHAARRIBA    shift and go to state 61
    INTEGER         shift and go to state 62
    LOGICVALUE      shift and go to state 63
    ID              shift and go to state 51

    expresion                      shift and go to state 261
    termino                        shift and go to state 53
    factor                         shift and go to state 54

state 258

    (61) sentenciaPara -> FOR ID DOSPUNTOSIGUAL expresion DOBLEPUNTO expresion DO sentenciaSecuencia . END
    (68) sentenciaSecuencia -> sentenciaSecuencia . ; sentencia
    END             shift and go to state 262
    ;               shift and go to state 153


state 259

    (58) sentenciaSiSinoR -> sentenciaSiSinoR ELSIF relacion THEN . sentenciaSecuencia
    (67) sentenciaSecuencia -> . sentencia
    (68) sentenciaSecuencia -> . sentenciaSecuencia ; sentencia
    (62) sentencia -> . empty
    (63) sentencia -> . sentenciaPara
    (64) sentencia -> . sentenciaSi
    (65) sentencia -> . asignacionUnidad
    (66) sentencia -> . asignacion
    (121) empty -> .
    (61) sentenciaPara -> . FOR ID DOSPUNTOSIGUAL expresion DOBLEPUNTO expresion DO sentenciaSecuencia END
    (54) sentenciaSi -> . IF relacion THEN sentenciaSecuencia sentenciaSiSino sentenciaSiEntonces END
    (120) asignacionUnidad -> . ID selector ( listaExpresiones )
    (45) asignacion -> . ID selector DOSPUNTOSIGUAL condicion | expresion
    (46) asignacion -> . ID selector DOSPUNTOSIGUAL expresion
    ;               reduce using rule 121 (empty -> .)
    ELSIF           reduce using rule 121 (empty -> .)
    ELSE            reduce using rule 121 (empty -> .)
    END             reduce using rule 121 (empty -> .)
    FOR             shift and go to state 132
    IF              shift and go to state 134
    ID              shift and go to state 133

    sentenciaSecuencia             shift and go to state 263
    sentencia                      shift and go to state 126
    empty                          shift and go to state 127
    sentenciaPara                  shift and go to state 128
    sentenciaSi                    shift and go to state 129
    asignacionUnidad               shift and go to state 130
    asignacion                     shift and go to state 131

state 260

    (57) sentenciaSiSinoR -> ELSIF relacion THEN sentenciaSecuencia .
    (68) sentenciaSecuencia -> sentenciaSecuencia . ; sentencia
    ELSIF           reduce using rule 57 (sentenciaSiSinoR -> ELSIF relacion THEN sentenciaSecuencia .)
    ELSE            reduce using rule 57 (sentenciaSiSinoR -> ELSIF relacion THEN sentenciaSecuencia .)
    END             reduce using rule 57 (sentenciaSiSinoR -> ELSIF relacion THEN sentenciaSecuencia .)
    ;               shift and go to state 153


state 261

    (28) factor -> MUX ( expresion , expresion : expresion , expresion , expresion . , expresion )
    (43) expresion -> expresion . - termino
    (44) expresion -> expresion . + termino
    ,               shift and go to state 264
    -               shift and go to state 86
    +               shift and go to state 87


state 262

    (61) sentenciaPara -> FOR ID DOSPUNTOSIGUAL expresion DOBLEPUNTO expresion DO sentenciaSecuencia END .
    ;               reduce using rule 61 (sentenciaPara -> FOR ID DOSPUNTOSIGUAL expresion DOBLEPUNTO expresion DO sentenciaSecuencia END .)
    END             reduce using rule 61 (sentenciaPara -> FOR ID DOSPUNTOSIGUAL expresion DOBLEPUNTO expresion DO sentenciaSecuencia END .)
    ELSIF           reduce using rule 61 (sentenciaPara -> FOR ID DOSPUNTOSIGUAL expresion DOBLEPUNTO expresion DO sentenciaSecuencia END .)
    ELSE            reduce using rule 61 (sentenciaPara -> FOR ID DOSPUNTOSIGUAL expresion DOBLEPUNTO expresion DO sentenciaSecuencia END .)


state 263

    (58) sentenciaSiSinoR -> sentenciaSiSinoR ELSIF relacion THEN sentenciaSecuencia .
    (68) sentenciaSecuencia -> sentenciaSecuencia . ; sentencia
    ELSIF           reduce using rule 58 (sentenciaSiSinoR -> sentenciaSiSinoR ELSIF relacion THEN sentenciaSecuencia .)
    ELSE            reduce using rule 58 (sentenciaSiSinoR -> sentenciaSiSinoR ELSIF relacion THEN sentenciaSecuencia .)
    END             reduce using rule 58 (sentenciaSiSinoR -> sentenciaSiSinoR ELSIF relacion THEN sentenciaSecuencia .)
    ;               shift and go to state 153


state 264

    (28) factor -> MUX ( expresion , expresion : expresion , expresion , expresion , . expresion )
    (42) expresion -> . termino
    (43) expresion -> . expresion - termino
    (44) expresion -> . expresion + termino
    (36) termino -> . factor
    (37) termino -> . termino simbolosProd factor
    (24) factor -> . SR ( expresion , expresion )
    (25) factor -> . LATCH ( expresion , expresion )
    (26) factor -> . REG ( expresion , expresion )
    (27) factor -> . REG ( expresion )
    (28) factor -> . MUX ( expresion , expresion : expresion , expresion , expresion , expresion )
    (29) factor -> . MUX ( expresion : expresion , expresion )
    (30) factor -> . ( expresion )
    (31) factor -> . ~ factor
    (32) factor -> . FLECHAARRIBA factor
    (33) factor -> . INTEGER
    (34) factor -> . LOGICVALUE
    (35) factor -> . ID selector
    SR              shift and go to state 55
    LATCH           shift and go to state 57
    REG             shift and go to state 58
    MUX             shift and go to state 59
    (               shift and go to state 56
    ~               shift and go to state 60
    FLECHAARRIBA    shift and go to state 61
    INTEGER         shift and go to state 62
    LOGICVALUE      shift and go to state 63
    ID              shift and go to state 51

    expresion                      shift and go to state 265
    termino                        shift and go to state 53
    factor                         shift and go to state 54

state 265

    (28) factor -> MUX ( expresion , expresion : expresion , expresion , expresion , expresion . )
    (43) expresion -> expresion . - termino
    (44) expresion -> expresion . + termino
    )               shift and go to state 266
    -               shift and go to state 86
    +               shift and go to state 87


state 266

    (28) factor -> MUX ( expresion , expresion : expresion , expresion , expresion , expresion ) .
    MOD             reduce using rule 28 (factor -> MUX ( expresion , expresion : expresion , expresion , expresion , expresion ) .)
    DIV             reduce using rule 28 (factor -> MUX ( expresion , expresion : expresion , expresion , expresion , expresion ) .)
    /               reduce using rule 28 (factor -> MUX ( expresion , expresion : expresion , expresion , expresion , expresion ) .)
    *               reduce using rule 28 (factor -> MUX ( expresion , expresion : expresion , expresion , expresion , expresion ) .)
    ;               reduce using rule 28 (factor -> MUX ( expresion , expresion : expresion , expresion , expresion , expresion ) .)
    -               reduce using rule 28 (factor -> MUX ( expresion , expresion : expresion , expresion , expresion , expresion ) .)
    +               reduce using rule 28 (factor -> MUX ( expresion , expresion : expresion , expresion , expresion , expresion ) .)
    )               reduce using rule 28 (factor -> MUX ( expresion , expresion : expresion , expresion , expresion , expresion ) .)
    ]               reduce using rule 28 (factor -> MUX ( expresion , expresion : expresion , expresion , expresion , expresion ) .)
    ,               reduce using rule 28 (factor -> MUX ( expresion , expresion : expresion , expresion , expresion , expresion ) .)
    :               reduce using rule 28 (factor -> MUX ( expresion , expresion : expresion , expresion , expresion , expresion ) .)
    MAYORIGUAL      reduce using rule 28 (factor -> MUX ( expresion , expresion : expresion , expresion , expresion , expresion ) .)
    >               reduce using rule 28 (factor -> MUX ( expresion , expresion : expresion , expresion , expresion , expresion ) .)
    MENORIGUAL      reduce using rule 28 (factor -> MUX ( expresion , expresion : expresion , expresion , expresion , expresion ) .)
    <               reduce using rule 28 (factor -> MUX ( expresion , expresion : expresion , expresion , expresion , expresion ) .)
    #               reduce using rule 28 (factor -> MUX ( expresion , expresion : expresion , expresion , expresion , expresion ) .)
    =               reduce using rule 28 (factor -> MUX ( expresion , expresion : expresion , expresion , expresion , expresion ) .)
    DOBLEPUNTO      reduce using rule 28 (factor -> MUX ( expresion , expresion : expresion , expresion , expresion , expresion ) .)
    END             reduce using rule 28 (factor -> MUX ( expresion , expresion : expresion , expresion , expresion , expresion ) .)
    ELSIF           reduce using rule 28 (factor -> MUX ( expresion , expresion : expresion , expresion , expresion , expresion ) .)
    ELSE            reduce using rule 28 (factor -> MUX ( expresion , expresion : expresion , expresion , expresion , expresion ) .)
    |               reduce using rule 28 (factor -> MUX ( expresion , expresion : expresion , expresion , expresion , expresion ) .)
    THEN            reduce using rule 28 (factor -> MUX ( expresion , expresion : expresion , expresion , expresion , expresion ) .)
    DO              reduce using rule 28 (factor -> MUX ( expresion , expresion : expresion , expresion , expresion , expresion ) .)
