Grammar:

Rule 0     S' -> lola
Rule 1     lola -> modulo
Rule 2     lola -> lola modulo
Rule 3     modulo -> MODULE ID ; declaracionTipoPuntoComa declaracionConstanteCONST declaracionVariableIN declaracionVariableINOUT declaracionVariableOUT declaracionVariableVAR sentenciaSecuenciaBEGIN END ID .
Rule 4     tipoSimple -> ID conjuntoExpresiones
Rule 5     tipoSimple -> tipoBasico
Rule 6     conjuntoExpresiones -> ( listaExpresiones )
Rule 7     conjuntoExpresiones -> empty
Rule 8     tipoBasico -> OC
Rule 9     tipoBasico -> TS
Rule 10    tipoBasico -> BIT
Rule 11    listaExpresiones -> expresion
Rule 12    listaExpresiones -> listaExpresiones , expresion
Rule 13    tipo -> expresionCorchete tipoSimple
Rule 14    expresionCorchete -> empty
Rule 15    expresionCorchete -> expresionCorcheteR
Rule 16    expresionCorcheteR -> [ expresion ]
Rule 17    expresionCorcheteR -> expresionCorcheteR [ expresion ]
Rule 18    declaracionConstante -> ID DOSPUNTOSIGUAL expresion ;
Rule 19    declaracionVariable -> listaId : tipo ;
Rule 20    listaId -> ID IDComa
Rule 21    IDComa -> empty
Rule 22    IDComa -> IDComaR
Rule 23    IDComaR -> , ID
Rule 24    IDComaR -> IDComaR , ID
Rule 25    selector -> empty
Rule 26    selector -> selectorR
Rule 27    selectorR -> selectorRR
Rule 28    selectorR -> selectorR selectorRR
Rule 29    selectorRR -> [ expresion ]
Rule 30    selectorRR -> . INTEGER
Rule 31    selectorRR -> . ID
Rule 32    factor -> SR ( expresion , expresion )
Rule 33    factor -> LATCH ( expresion , expresion )
Rule 34    factor -> REG ( expresionComaO expresion )
Rule 35    factor -> MUX ( expresion , expresion : expresion , expresion , expresion , expresion )
Rule 36    factor -> MUX ( expresion : expresion , expresion )
Rule 37    factor -> ( expresion )
Rule 38    factor -> ~ factor
Rule 39    factor -> FLECHAARRIBA factor
Rule 40    factor -> INTEGER
Rule 41    factor -> LOGICVALUE
Rule 42    factor -> ID selector
Rule 43    expresionComaO -> empty
Rule 44    expresionComaO -> expresion ,
Rule 45    termino -> factor
Rule 46    termino -> termino simbolosProd factor
Rule 47    simbolosProd -> MOD
Rule 48    simbolosProd -> DIV
Rule 49    simbolosProd -> /
Rule 50    simbolosProd -> *
Rule 51    expresion -> termino terminoMasMenos
Rule 52    terminoMasMenos -> empty
Rule 53    terminoMasMenos -> terminoMasMenosR
Rule 54    terminoMasMenosR -> simbolosMasMenos termino
Rule 55    terminoMasMenosR -> terminoMasMenosR simbolosMasMenos termino
Rule 56    simbolosMasMenos -> -  [precedence=left, level=1]
Rule 57    simbolosMasMenos -> +  [precedence=left, level=1]
Rule 58    asignacion -> ID selector DOSPUNTOSIGUAL condicion | expresion
Rule 59    asignacion -> ID selector DOSPUNTOSIGUAL expresion
Rule 60    condicion -> expresion
Rule 61    relacion -> expresion MAYORIGUAL expresion
Rule 62    relacion -> expresion > expresion
Rule 63    relacion -> expresion MENORIGUAL expresion
Rule 64    relacion -> expresion < expresion
Rule 65    relacion -> expresion # expresion
Rule 66    relacion -> expresion = expresion
Rule 67    sentenciaSi -> IF relacion THEN sentenciaSecuencia sentenciaSiSino sentenciaSiEntonces END
Rule 68    sentenciaSiSino -> empty
Rule 69    sentenciaSiSino -> sentenciaSiSinoR
Rule 70    sentenciaSiSinoR -> ELSIF relacion THEN sentenciaSecuencia
Rule 71    sentenciaSiSinoR -> sentenciaSiSinoR ELSIF relacion THEN sentenciaSecuencia
Rule 72    sentenciaSiEntonces -> empty
Rule 73    sentenciaSiEntonces -> ELSE sentenciaSecuencia
Rule 74    sentenciaPara -> FOR ID DOSPUNTOSIGUAL expresion DOBLEPUNTO expresion DO sentenciaSecuencia END
Rule 75    sentencia -> empty
Rule 76    sentencia -> sentenciaPara
Rule 77    sentencia -> sentenciaSi
Rule 78    sentencia -> asignacionUnidad
Rule 79    sentencia -> asignacion
Rule 80    sentenciaSecuencia -> sentencia sentenciaPuntoComa
Rule 81    sentenciaPuntoComa -> empty
Rule 82    sentenciaPuntoComa -> sentenciaPuntoComaR
Rule 83    sentenciaPuntoComaR -> ; sentencia
Rule 84    sentenciaPuntoComaR -> sentenciaPuntoComaR ; sentencia
Rule 85    declaracionTipoPuntoComa -> empty
Rule 86    declaracionTipoPuntoComa -> declaracionTipoPuntoComaR
Rule 87    declaracionTipoPuntoComaR -> declaracionTipo ;
Rule 88    declaracionTipoPuntoComaR -> declaracionTipoPuntoComaR declaracionTipo ;
Rule 89    declaracionConstanteCONST -> empty
Rule 90    declaracionConstanteCONST -> CONST declaracionConstanteRecursivo
Rule 91    declaracionConstanteRecursivo -> empty
Rule 92    declaracionConstanteRecursivo -> declaracionConstanteRecursivoR
Rule 93    declaracionConstanteRecursivoR -> declaracionConstante
Rule 94    declaracionConstanteRecursivoR -> declaracionConstanteRecursivoR declaracionConstante
Rule 95    declaracionVariableIN -> empty
Rule 96    declaracionVariableIN -> IN declaracionVariableRecursivo
Rule 97    declaracionVariableINOUT -> empty
Rule 98    declaracionVariableINOUT -> INOUT declaracionVariableRecursivo
Rule 99    declaracionVariableOUT -> empty
Rule 100   declaracionVariableOUT -> OUT declaracionVariableRecursivo
Rule 101   declaracionVariableVAR -> empty
Rule 102   declaracionVariableVAR -> VAR declaracionVariableRecursivo
Rule 103   sentenciaSecuenciaBEGIN -> empty
Rule 104   sentenciaSecuenciaBEGIN -> BEGIN sentenciaSecuencia
Rule 105   declaracionVariableRecursivo -> empty
Rule 106   declaracionVariableRecursivo -> declaracionVariableRecursivoR
Rule 107   declaracionVariableRecursivoR -> declaracionVariable
Rule 108   declaracionVariableRecursivoR -> declaracionVariableRecursivoR declaracionVariable
Rule 109   tipoFormal -> expresionCorcheteO BIT
Rule 110   expresionCorcheteO -> empty
Rule 111   expresionCorcheteO -> expresionCorcheteOR
Rule 112   expresionCorcheteOR -> [ expresionOpcional ]
Rule 113   expresionCorcheteOR -> expresionCorcheteOR [ expresionOpcional ]
Rule 114   expresionOpcional -> empty
Rule 115   expresionOpcional -> expresion
Rule 116   tipoFormalBus -> expresionCorcheteO OC
Rule 117   tipoFormalBus -> expresionCorcheteO TS
Rule 118   declaracionTipo -> TYPE ID simboloPor listaIdParentesis ; declaracionConstanteCONST tipoFormalIN tipoFormlINOUT declaracionVariableOUT declaracionVariableVAR sentenciaSecuenciaBEGIN END ID
Rule 119   simboloPor -> empty
Rule 120   simboloPor -> *
Rule 121   listaIdParentesis -> empty
Rule 122   listaIdParentesis -> ( listaId )
Rule 123   tipoFormalIN -> empty
Rule 124   tipoFormalIN -> IN tipoFormallistaId
Rule 125   tipoFormallistaId -> empty
Rule 126   tipoFormallistaId -> tipoFormallistaIdR
Rule 127   tipoFormallistaIdR -> listaId : tipoFormal ;
Rule 128   tipoFormallistaIdR -> tipoFormallistaIdR listaId : tipoFormal ;
Rule 129   tipoFormlINOUT -> empty
Rule 130   tipoFormlINOUT -> INOUT tipoFormlBuslistaId
Rule 131   tipoFormlBuslistaId -> empty
Rule 132   tipoFormlBuslistaId -> tipoFormlBuslistaIdR
Rule 133   tipoFormlBuslistaIdR -> listaId : tipoFormalBus ;
Rule 134   tipoFormlBuslistaIdR -> tipoFormlBuslistaIdR listaId : tipoFormalBus ;
Rule 135   asignacionUnidad -> ID selector ( listaExpresiones )
Rule 136   empty -> <empty>

Terminals, with rules where they appear:

#                    : 65
(                    : 6 32 33 34 35 36 37 122 135
)                    : 6 32 33 34 35 36 37 122 135
*                    : 50 120
+                    : 57
,                    : 12 23 24 32 33 35 35 35 35 36 44
-                    : 56
.                    : 3 30 31
/                    : 49
:                    : 19 35 36 127 128 133 134
;                    : 3 18 19 83 84 87 88 118 127 128 133 134
<                    : 64
=                    : 66
>                    : 62
BEGIN                : 104
BIT                  : 10 109
CONST                : 90
DIV                  : 48
DO                   : 74
DOBLEPUNTO           : 74
DOSPUNTOSIGUAL       : 18 58 59 74
ELSE                 : 73
ELSIF                : 70 71
END                  : 3 67 74 118
FLECHAARRIBA         : 39
FOR                  : 74
ID                   : 3 3 4 18 20 23 24 31 42 58 59 74 118 118 135
IF                   : 67
IN                   : 96 124
INOUT                : 98 130
INTEGER              : 30 40
LATCH                : 33
LOGICVALUE           : 41
MAYORIGUAL           : 61
MENORIGUAL           : 63
MOD                  : 47
MODULE               : 3
MUX                  : 35 36
OC                   : 8 116
OUT                  : 100
REG                  : 34
SR                   : 32
THEN                 : 67 70 71
TS                   : 9 117
TYPE                 : 118
VAR                  : 102
[                    : 16 17 29 112 113
]                    : 16 17 29 112 113
error                : 
|                    : 58
~                    : 38

Nonterminals, with rules where they appear:

IDComa               : 20
IDComaR              : 22 24
asignacion           : 79
asignacionUnidad     : 78
condicion            : 58
conjuntoExpresiones  : 4
declaracionConstante : 93 94
declaracionConstanteCONST : 3 118
declaracionConstanteRecursivo : 90
declaracionConstanteRecursivoR : 92 94
declaracionTipo      : 87 88
declaracionTipoPuntoComa : 3
declaracionTipoPuntoComaR : 86 88
declaracionVariable  : 107 108
declaracionVariableIN : 3
declaracionVariableINOUT : 3
declaracionVariableOUT : 3 118
declaracionVariableRecursivo : 96 98 100 102
declaracionVariableRecursivoR : 106 108
declaracionVariableVAR : 3 118
empty                : 7 14 21 25 43 52 68 72 75 81 85 89 91 95 97 99 101 103 105 110 114 119 121 123 125 129 131
expresion            : 11 12 16 17 18 29 32 32 33 33 34 35 35 35 35 35 35 36 36 36 37 44 58 59 60 61 61 62 62 63 63 64 64 65 65 66 66 74 74 115
expresionComaO       : 34
expresionCorchete    : 13
expresionCorcheteO   : 109 116 117
expresionCorcheteOR  : 111 113
expresionCorcheteR   : 15 17
expresionOpcional    : 112 113
factor               : 38 39 45 46
listaExpresiones     : 6 12 135
listaId              : 19 122 127 128 133 134
listaIdParentesis    : 118
lola                 : 2 0
modulo               : 1 2
relacion             : 67 70 71
selector             : 42 58 59 135
selectorR            : 26 28
selectorRR           : 27 28
sentencia            : 80 83 84
sentenciaPara        : 76
sentenciaPuntoComa   : 80
sentenciaPuntoComaR  : 82 84
sentenciaSecuencia   : 67 70 71 73 74 104
sentenciaSecuenciaBEGIN : 3 118
sentenciaSi          : 77
sentenciaSiEntonces  : 67
sentenciaSiSino      : 67
sentenciaSiSinoR     : 69 71
simboloPor           : 118
simbolosMasMenos     : 54 55
simbolosProd         : 46
termino              : 46 51 54 55
terminoMasMenos      : 51
terminoMasMenosR     : 53 55
tipo                 : 19
tipoBasico           : 5
tipoFormal           : 127 128
tipoFormalBus        : 133 134
tipoFormalIN         : 118
tipoFormallistaId    : 124
tipoFormallistaIdR   : 126 128
tipoFormlBuslistaId  : 130
tipoFormlBuslistaIdR : 132 134
tipoFormlINOUT       : 118
tipoSimple           : 13


state 0

    (0) S' -> . lola
    (1) lola -> . modulo
    (2) lola -> . lola modulo
    (3) modulo -> . MODULE ID ; declaracionTipoPuntoComa declaracionConstanteCONST declaracionVariableIN declaracionVariableINOUT declaracionVariableOUT declaracionVariableVAR sentenciaSecuenciaBEGIN END ID .
    MODULE          shift and go to state 3

    lola                           shift and go to state 1
    modulo                         shift and go to state 2

state 1

    (0) S' -> lola .
    (2) lola -> lola . modulo
    (3) modulo -> . MODULE ID ; declaracionTipoPuntoComa declaracionConstanteCONST declaracionVariableIN declaracionVariableINOUT declaracionVariableOUT declaracionVariableVAR sentenciaSecuenciaBEGIN END ID .
    MODULE          shift and go to state 3

    modulo                         shift and go to state 4

state 2

    (1) lola -> modulo .
    MODULE          reduce using rule 1 (lola -> modulo .)
    $end            reduce using rule 1 (lola -> modulo .)


state 3

    (3) modulo -> MODULE . ID ; declaracionTipoPuntoComa declaracionConstanteCONST declaracionVariableIN declaracionVariableINOUT declaracionVariableOUT declaracionVariableVAR sentenciaSecuenciaBEGIN END ID .
    ID              shift and go to state 5


state 4

    (2) lola -> lola modulo .
    MODULE          reduce using rule 2 (lola -> lola modulo .)
    $end            reduce using rule 2 (lola -> lola modulo .)


state 5

    (3) modulo -> MODULE ID . ; declaracionTipoPuntoComa declaracionConstanteCONST declaracionVariableIN declaracionVariableINOUT declaracionVariableOUT declaracionVariableVAR sentenciaSecuenciaBEGIN END ID .
    ;               shift and go to state 6


state 6

    (3) modulo -> MODULE ID ; . declaracionTipoPuntoComa declaracionConstanteCONST declaracionVariableIN declaracionVariableINOUT declaracionVariableOUT declaracionVariableVAR sentenciaSecuenciaBEGIN END ID .
    (85) declaracionTipoPuntoComa -> . empty
    (86) declaracionTipoPuntoComa -> . declaracionTipoPuntoComaR
    (136) empty -> .
    (87) declaracionTipoPuntoComaR -> . declaracionTipo ;
    (88) declaracionTipoPuntoComaR -> . declaracionTipoPuntoComaR declaracionTipo ;
    (118) declaracionTipo -> . TYPE ID simboloPor listaIdParentesis ; declaracionConstanteCONST tipoFormalIN tipoFormlINOUT declaracionVariableOUT declaracionVariableVAR sentenciaSecuenciaBEGIN END ID
    CONST           reduce using rule 136 (empty -> .)
    IN              reduce using rule 136 (empty -> .)
    INOUT           reduce using rule 136 (empty -> .)
    OUT             reduce using rule 136 (empty -> .)
    VAR             reduce using rule 136 (empty -> .)
    BEGIN           reduce using rule 136 (empty -> .)
    END             reduce using rule 136 (empty -> .)
    TYPE            shift and go to state 11

    declaracionTipoPuntoComa       shift and go to state 7
    empty                          shift and go to state 8
    declaracionTipoPuntoComaR      shift and go to state 9
    declaracionTipo                shift and go to state 10

state 7

    (3) modulo -> MODULE ID ; declaracionTipoPuntoComa . declaracionConstanteCONST declaracionVariableIN declaracionVariableINOUT declaracionVariableOUT declaracionVariableVAR sentenciaSecuenciaBEGIN END ID .
    (89) declaracionConstanteCONST -> . empty
    (90) declaracionConstanteCONST -> . CONST declaracionConstanteRecursivo
    (136) empty -> .
    CONST           shift and go to state 14
    IN              reduce using rule 136 (empty -> .)
    INOUT           reduce using rule 136 (empty -> .)
    OUT             reduce using rule 136 (empty -> .)
    VAR             reduce using rule 136 (empty -> .)
    BEGIN           reduce using rule 136 (empty -> .)
    END             reduce using rule 136 (empty -> .)

    declaracionConstanteCONST      shift and go to state 12
    empty                          shift and go to state 13

state 8

    (85) declaracionTipoPuntoComa -> empty .
    CONST           reduce using rule 85 (declaracionTipoPuntoComa -> empty .)
    IN              reduce using rule 85 (declaracionTipoPuntoComa -> empty .)
    INOUT           reduce using rule 85 (declaracionTipoPuntoComa -> empty .)
    OUT             reduce using rule 85 (declaracionTipoPuntoComa -> empty .)
    VAR             reduce using rule 85 (declaracionTipoPuntoComa -> empty .)
    BEGIN           reduce using rule 85 (declaracionTipoPuntoComa -> empty .)
    END             reduce using rule 85 (declaracionTipoPuntoComa -> empty .)


state 9

    (86) declaracionTipoPuntoComa -> declaracionTipoPuntoComaR .
    (88) declaracionTipoPuntoComaR -> declaracionTipoPuntoComaR . declaracionTipo ;
    (118) declaracionTipo -> . TYPE ID simboloPor listaIdParentesis ; declaracionConstanteCONST tipoFormalIN tipoFormlINOUT declaracionVariableOUT declaracionVariableVAR sentenciaSecuenciaBEGIN END ID
    CONST           reduce using rule 86 (declaracionTipoPuntoComa -> declaracionTipoPuntoComaR .)
    IN              reduce using rule 86 (declaracionTipoPuntoComa -> declaracionTipoPuntoComaR .)
    INOUT           reduce using rule 86 (declaracionTipoPuntoComa -> declaracionTipoPuntoComaR .)
    OUT             reduce using rule 86 (declaracionTipoPuntoComa -> declaracionTipoPuntoComaR .)
    VAR             reduce using rule 86 (declaracionTipoPuntoComa -> declaracionTipoPuntoComaR .)
    BEGIN           reduce using rule 86 (declaracionTipoPuntoComa -> declaracionTipoPuntoComaR .)
    END             reduce using rule 86 (declaracionTipoPuntoComa -> declaracionTipoPuntoComaR .)
    TYPE            shift and go to state 11

    declaracionTipo                shift and go to state 15

state 10

    (87) declaracionTipoPuntoComaR -> declaracionTipo . ;
    ;               shift and go to state 16


state 11

    (118) declaracionTipo -> TYPE . ID simboloPor listaIdParentesis ; declaracionConstanteCONST tipoFormalIN tipoFormlINOUT declaracionVariableOUT declaracionVariableVAR sentenciaSecuenciaBEGIN END ID
    ID              shift and go to state 17


state 12

    (3) modulo -> MODULE ID ; declaracionTipoPuntoComa declaracionConstanteCONST . declaracionVariableIN declaracionVariableINOUT declaracionVariableOUT declaracionVariableVAR sentenciaSecuenciaBEGIN END ID .
    (95) declaracionVariableIN -> . empty
    (96) declaracionVariableIN -> . IN declaracionVariableRecursivo
    (136) empty -> .
    IN              shift and go to state 20
    INOUT           reduce using rule 136 (empty -> .)
    OUT             reduce using rule 136 (empty -> .)
    VAR             reduce using rule 136 (empty -> .)
    BEGIN           reduce using rule 136 (empty -> .)
    END             reduce using rule 136 (empty -> .)

    declaracionVariableIN          shift and go to state 18
    empty                          shift and go to state 19

state 13

    (89) declaracionConstanteCONST -> empty .
    IN              reduce using rule 89 (declaracionConstanteCONST -> empty .)
    INOUT           reduce using rule 89 (declaracionConstanteCONST -> empty .)
    OUT             reduce using rule 89 (declaracionConstanteCONST -> empty .)
    VAR             reduce using rule 89 (declaracionConstanteCONST -> empty .)
    BEGIN           reduce using rule 89 (declaracionConstanteCONST -> empty .)
    END             reduce using rule 89 (declaracionConstanteCONST -> empty .)


state 14

    (90) declaracionConstanteCONST -> CONST . declaracionConstanteRecursivo
    (91) declaracionConstanteRecursivo -> . empty
    (92) declaracionConstanteRecursivo -> . declaracionConstanteRecursivoR
    (136) empty -> .
    (93) declaracionConstanteRecursivoR -> . declaracionConstante
    (94) declaracionConstanteRecursivoR -> . declaracionConstanteRecursivoR declaracionConstante
    (18) declaracionConstante -> . ID DOSPUNTOSIGUAL expresion ;
    IN              reduce using rule 136 (empty -> .)
    INOUT           reduce using rule 136 (empty -> .)
    OUT             reduce using rule 136 (empty -> .)
    VAR             reduce using rule 136 (empty -> .)
    BEGIN           reduce using rule 136 (empty -> .)
    END             reduce using rule 136 (empty -> .)
    ID              shift and go to state 25

    declaracionConstanteRecursivo  shift and go to state 21
    empty                          shift and go to state 22
    declaracionConstanteRecursivoR shift and go to state 23
    declaracionConstante           shift and go to state 24

state 15

    (88) declaracionTipoPuntoComaR -> declaracionTipoPuntoComaR declaracionTipo . ;
    ;               shift and go to state 26


state 16

    (87) declaracionTipoPuntoComaR -> declaracionTipo ; .
    TYPE            reduce using rule 87 (declaracionTipoPuntoComaR -> declaracionTipo ; .)
    CONST           reduce using rule 87 (declaracionTipoPuntoComaR -> declaracionTipo ; .)
    IN              reduce using rule 87 (declaracionTipoPuntoComaR -> declaracionTipo ; .)
    INOUT           reduce using rule 87 (declaracionTipoPuntoComaR -> declaracionTipo ; .)
    OUT             reduce using rule 87 (declaracionTipoPuntoComaR -> declaracionTipo ; .)
    VAR             reduce using rule 87 (declaracionTipoPuntoComaR -> declaracionTipo ; .)
    BEGIN           reduce using rule 87 (declaracionTipoPuntoComaR -> declaracionTipo ; .)
    END             reduce using rule 87 (declaracionTipoPuntoComaR -> declaracionTipo ; .)


state 17

    (118) declaracionTipo -> TYPE ID . simboloPor listaIdParentesis ; declaracionConstanteCONST tipoFormalIN tipoFormlINOUT declaracionVariableOUT declaracionVariableVAR sentenciaSecuenciaBEGIN END ID
    (119) simboloPor -> . empty
    (120) simboloPor -> . *
    (136) empty -> .
    *               shift and go to state 29
    (               reduce using rule 136 (empty -> .)
    ;               reduce using rule 136 (empty -> .)

    simboloPor                     shift and go to state 27
    empty                          shift and go to state 28

state 18

    (3) modulo -> MODULE ID ; declaracionTipoPuntoComa declaracionConstanteCONST declaracionVariableIN . declaracionVariableINOUT declaracionVariableOUT declaracionVariableVAR sentenciaSecuenciaBEGIN END ID .
    (97) declaracionVariableINOUT -> . empty
    (98) declaracionVariableINOUT -> . INOUT declaracionVariableRecursivo
    (136) empty -> .
    INOUT           shift and go to state 32
    OUT             reduce using rule 136 (empty -> .)
    VAR             reduce using rule 136 (empty -> .)
    BEGIN           reduce using rule 136 (empty -> .)
    END             reduce using rule 136 (empty -> .)

    declaracionVariableINOUT       shift and go to state 30
    empty                          shift and go to state 31

state 19

    (95) declaracionVariableIN -> empty .
    INOUT           reduce using rule 95 (declaracionVariableIN -> empty .)
    OUT             reduce using rule 95 (declaracionVariableIN -> empty .)
    VAR             reduce using rule 95 (declaracionVariableIN -> empty .)
    BEGIN           reduce using rule 95 (declaracionVariableIN -> empty .)
    END             reduce using rule 95 (declaracionVariableIN -> empty .)


state 20

    (96) declaracionVariableIN -> IN . declaracionVariableRecursivo
    (105) declaracionVariableRecursivo -> . empty
    (106) declaracionVariableRecursivo -> . declaracionVariableRecursivoR
    (136) empty -> .
    (107) declaracionVariableRecursivoR -> . declaracionVariable
    (108) declaracionVariableRecursivoR -> . declaracionVariableRecursivoR declaracionVariable
    (19) declaracionVariable -> . listaId : tipo ;
    (20) listaId -> . ID IDComa
    INOUT           reduce using rule 136 (empty -> .)
    OUT             reduce using rule 136 (empty -> .)
    VAR             reduce using rule 136 (empty -> .)
    BEGIN           reduce using rule 136 (empty -> .)
    END             reduce using rule 136 (empty -> .)
    ID              shift and go to state 38

    declaracionVariableRecursivo   shift and go to state 33
    empty                          shift and go to state 34
    declaracionVariableRecursivoR  shift and go to state 35
    declaracionVariable            shift and go to state 36
    listaId                        shift and go to state 37

state 21

    (90) declaracionConstanteCONST -> CONST declaracionConstanteRecursivo .
    IN              reduce using rule 90 (declaracionConstanteCONST -> CONST declaracionConstanteRecursivo .)
    INOUT           reduce using rule 90 (declaracionConstanteCONST -> CONST declaracionConstanteRecursivo .)
    OUT             reduce using rule 90 (declaracionConstanteCONST -> CONST declaracionConstanteRecursivo .)
    VAR             reduce using rule 90 (declaracionConstanteCONST -> CONST declaracionConstanteRecursivo .)
    BEGIN           reduce using rule 90 (declaracionConstanteCONST -> CONST declaracionConstanteRecursivo .)
    END             reduce using rule 90 (declaracionConstanteCONST -> CONST declaracionConstanteRecursivo .)


state 22

    (91) declaracionConstanteRecursivo -> empty .
    IN              reduce using rule 91 (declaracionConstanteRecursivo -> empty .)
    INOUT           reduce using rule 91 (declaracionConstanteRecursivo -> empty .)
    OUT             reduce using rule 91 (declaracionConstanteRecursivo -> empty .)
    VAR             reduce using rule 91 (declaracionConstanteRecursivo -> empty .)
    BEGIN           reduce using rule 91 (declaracionConstanteRecursivo -> empty .)
    END             reduce using rule 91 (declaracionConstanteRecursivo -> empty .)


state 23

    (92) declaracionConstanteRecursivo -> declaracionConstanteRecursivoR .
    (94) declaracionConstanteRecursivoR -> declaracionConstanteRecursivoR . declaracionConstante
    (18) declaracionConstante -> . ID DOSPUNTOSIGUAL expresion ;
    IN              reduce using rule 92 (declaracionConstanteRecursivo -> declaracionConstanteRecursivoR .)
    INOUT           reduce using rule 92 (declaracionConstanteRecursivo -> declaracionConstanteRecursivoR .)
    OUT             reduce using rule 92 (declaracionConstanteRecursivo -> declaracionConstanteRecursivoR .)
    VAR             reduce using rule 92 (declaracionConstanteRecursivo -> declaracionConstanteRecursivoR .)
    BEGIN           reduce using rule 92 (declaracionConstanteRecursivo -> declaracionConstanteRecursivoR .)
    END             reduce using rule 92 (declaracionConstanteRecursivo -> declaracionConstanteRecursivoR .)
    ID              shift and go to state 25

    declaracionConstante           shift and go to state 39

state 24

    (93) declaracionConstanteRecursivoR -> declaracionConstante .
    ID              reduce using rule 93 (declaracionConstanteRecursivoR -> declaracionConstante .)
    IN              reduce using rule 93 (declaracionConstanteRecursivoR -> declaracionConstante .)
    INOUT           reduce using rule 93 (declaracionConstanteRecursivoR -> declaracionConstante .)
    OUT             reduce using rule 93 (declaracionConstanteRecursivoR -> declaracionConstante .)
    VAR             reduce using rule 93 (declaracionConstanteRecursivoR -> declaracionConstante .)
    BEGIN           reduce using rule 93 (declaracionConstanteRecursivoR -> declaracionConstante .)
    END             reduce using rule 93 (declaracionConstanteRecursivoR -> declaracionConstante .)


state 25

    (18) declaracionConstante -> ID . DOSPUNTOSIGUAL expresion ;
    DOSPUNTOSIGUAL  shift and go to state 40


state 26

    (88) declaracionTipoPuntoComaR -> declaracionTipoPuntoComaR declaracionTipo ; .
    TYPE            reduce using rule 88 (declaracionTipoPuntoComaR -> declaracionTipoPuntoComaR declaracionTipo ; .)
    CONST           reduce using rule 88 (declaracionTipoPuntoComaR -> declaracionTipoPuntoComaR declaracionTipo ; .)
    IN              reduce using rule 88 (declaracionTipoPuntoComaR -> declaracionTipoPuntoComaR declaracionTipo ; .)
    INOUT           reduce using rule 88 (declaracionTipoPuntoComaR -> declaracionTipoPuntoComaR declaracionTipo ; .)
    OUT             reduce using rule 88 (declaracionTipoPuntoComaR -> declaracionTipoPuntoComaR declaracionTipo ; .)
    VAR             reduce using rule 88 (declaracionTipoPuntoComaR -> declaracionTipoPuntoComaR declaracionTipo ; .)
    BEGIN           reduce using rule 88 (declaracionTipoPuntoComaR -> declaracionTipoPuntoComaR declaracionTipo ; .)
    END             reduce using rule 88 (declaracionTipoPuntoComaR -> declaracionTipoPuntoComaR declaracionTipo ; .)


state 27

    (118) declaracionTipo -> TYPE ID simboloPor . listaIdParentesis ; declaracionConstanteCONST tipoFormalIN tipoFormlINOUT declaracionVariableOUT declaracionVariableVAR sentenciaSecuenciaBEGIN END ID
    (121) listaIdParentesis -> . empty
    (122) listaIdParentesis -> . ( listaId )
    (136) empty -> .
    (               shift and go to state 43
    ;               reduce using rule 136 (empty -> .)

    listaIdParentesis              shift and go to state 41
    empty                          shift and go to state 42

state 28

    (119) simboloPor -> empty .
    (               reduce using rule 119 (simboloPor -> empty .)
    ;               reduce using rule 119 (simboloPor -> empty .)


state 29

    (120) simboloPor -> * .
    (               reduce using rule 120 (simboloPor -> * .)
    ;               reduce using rule 120 (simboloPor -> * .)


state 30

    (3) modulo -> MODULE ID ; declaracionTipoPuntoComa declaracionConstanteCONST declaracionVariableIN declaracionVariableINOUT . declaracionVariableOUT declaracionVariableVAR sentenciaSecuenciaBEGIN END ID .
    (99) declaracionVariableOUT -> . empty
    (100) declaracionVariableOUT -> . OUT declaracionVariableRecursivo
    (136) empty -> .
    OUT             shift and go to state 46
    VAR             reduce using rule 136 (empty -> .)
    BEGIN           reduce using rule 136 (empty -> .)
    END             reduce using rule 136 (empty -> .)

    declaracionVariableOUT         shift and go to state 44
    empty                          shift and go to state 45

state 31

    (97) declaracionVariableINOUT -> empty .
    OUT             reduce using rule 97 (declaracionVariableINOUT -> empty .)
    VAR             reduce using rule 97 (declaracionVariableINOUT -> empty .)
    BEGIN           reduce using rule 97 (declaracionVariableINOUT -> empty .)
    END             reduce using rule 97 (declaracionVariableINOUT -> empty .)


state 32

    (98) declaracionVariableINOUT -> INOUT . declaracionVariableRecursivo
    (105) declaracionVariableRecursivo -> . empty
    (106) declaracionVariableRecursivo -> . declaracionVariableRecursivoR
    (136) empty -> .
    (107) declaracionVariableRecursivoR -> . declaracionVariable
    (108) declaracionVariableRecursivoR -> . declaracionVariableRecursivoR declaracionVariable
    (19) declaracionVariable -> . listaId : tipo ;
    (20) listaId -> . ID IDComa
    OUT             reduce using rule 136 (empty -> .)
    VAR             reduce using rule 136 (empty -> .)
    BEGIN           reduce using rule 136 (empty -> .)
    END             reduce using rule 136 (empty -> .)
    ID              shift and go to state 38

    declaracionVariableRecursivo   shift and go to state 47
    empty                          shift and go to state 34
    declaracionVariableRecursivoR  shift and go to state 35
    declaracionVariable            shift and go to state 36
    listaId                        shift and go to state 37

state 33

    (96) declaracionVariableIN -> IN declaracionVariableRecursivo .
    INOUT           reduce using rule 96 (declaracionVariableIN -> IN declaracionVariableRecursivo .)
    OUT             reduce using rule 96 (declaracionVariableIN -> IN declaracionVariableRecursivo .)
    VAR             reduce using rule 96 (declaracionVariableIN -> IN declaracionVariableRecursivo .)
    BEGIN           reduce using rule 96 (declaracionVariableIN -> IN declaracionVariableRecursivo .)
    END             reduce using rule 96 (declaracionVariableIN -> IN declaracionVariableRecursivo .)


state 34

    (105) declaracionVariableRecursivo -> empty .
    INOUT           reduce using rule 105 (declaracionVariableRecursivo -> empty .)
    OUT             reduce using rule 105 (declaracionVariableRecursivo -> empty .)
    VAR             reduce using rule 105 (declaracionVariableRecursivo -> empty .)
    BEGIN           reduce using rule 105 (declaracionVariableRecursivo -> empty .)
    END             reduce using rule 105 (declaracionVariableRecursivo -> empty .)


state 35

    (106) declaracionVariableRecursivo -> declaracionVariableRecursivoR .
    (108) declaracionVariableRecursivoR -> declaracionVariableRecursivoR . declaracionVariable
    (19) declaracionVariable -> . listaId : tipo ;
    (20) listaId -> . ID IDComa
    INOUT           reduce using rule 106 (declaracionVariableRecursivo -> declaracionVariableRecursivoR .)
    OUT             reduce using rule 106 (declaracionVariableRecursivo -> declaracionVariableRecursivoR .)
    VAR             reduce using rule 106 (declaracionVariableRecursivo -> declaracionVariableRecursivoR .)
    BEGIN           reduce using rule 106 (declaracionVariableRecursivo -> declaracionVariableRecursivoR .)
    END             reduce using rule 106 (declaracionVariableRecursivo -> declaracionVariableRecursivoR .)
    ID              shift and go to state 38

    declaracionVariable            shift and go to state 48
    listaId                        shift and go to state 37

state 36

    (107) declaracionVariableRecursivoR -> declaracionVariable .
    ID              reduce using rule 107 (declaracionVariableRecursivoR -> declaracionVariable .)
    INOUT           reduce using rule 107 (declaracionVariableRecursivoR -> declaracionVariable .)
    OUT             reduce using rule 107 (declaracionVariableRecursivoR -> declaracionVariable .)
    VAR             reduce using rule 107 (declaracionVariableRecursivoR -> declaracionVariable .)
    BEGIN           reduce using rule 107 (declaracionVariableRecursivoR -> declaracionVariable .)
    END             reduce using rule 107 (declaracionVariableRecursivoR -> declaracionVariable .)


state 37

    (19) declaracionVariable -> listaId . : tipo ;
    :               shift and go to state 49


state 38

    (20) listaId -> ID . IDComa
    (21) IDComa -> . empty
    (22) IDComa -> . IDComaR
    (136) empty -> .
    (23) IDComaR -> . , ID
    (24) IDComaR -> . IDComaR , ID
    :               reduce using rule 136 (empty -> .)
    )               reduce using rule 136 (empty -> .)
    ,               shift and go to state 53

    IDComa                         shift and go to state 50
    empty                          shift and go to state 51
    IDComaR                        shift and go to state 52

state 39

    (94) declaracionConstanteRecursivoR -> declaracionConstanteRecursivoR declaracionConstante .
    ID              reduce using rule 94 (declaracionConstanteRecursivoR -> declaracionConstanteRecursivoR declaracionConstante .)
    IN              reduce using rule 94 (declaracionConstanteRecursivoR -> declaracionConstanteRecursivoR declaracionConstante .)
    INOUT           reduce using rule 94 (declaracionConstanteRecursivoR -> declaracionConstanteRecursivoR declaracionConstante .)
    OUT             reduce using rule 94 (declaracionConstanteRecursivoR -> declaracionConstanteRecursivoR declaracionConstante .)
    VAR             reduce using rule 94 (declaracionConstanteRecursivoR -> declaracionConstanteRecursivoR declaracionConstante .)
    BEGIN           reduce using rule 94 (declaracionConstanteRecursivoR -> declaracionConstanteRecursivoR declaracionConstante .)
    END             reduce using rule 94 (declaracionConstanteRecursivoR -> declaracionConstanteRecursivoR declaracionConstante .)


state 40

    (18) declaracionConstante -> ID DOSPUNTOSIGUAL . expresion ;
    (51) expresion -> . termino terminoMasMenos
    (45) termino -> . factor
    (46) termino -> . termino simbolosProd factor
    (32) factor -> . SR ( expresion , expresion )
    (33) factor -> . LATCH ( expresion , expresion )
    (34) factor -> . REG ( expresionComaO expresion )
    (35) factor -> . MUX ( expresion , expresion : expresion , expresion , expresion , expresion )
    (36) factor -> . MUX ( expresion : expresion , expresion )
    (37) factor -> . ( expresion )
    (38) factor -> . ~ factor
    (39) factor -> . FLECHAARRIBA factor
    (40) factor -> . INTEGER
    (41) factor -> . LOGICVALUE
    (42) factor -> . ID selector
    SR              shift and go to state 58
    LATCH           shift and go to state 60
    REG             shift and go to state 61
    MUX             shift and go to state 62
    (               shift and go to state 59
    ~               shift and go to state 63
    FLECHAARRIBA    shift and go to state 64
    INTEGER         shift and go to state 65
    LOGICVALUE      shift and go to state 66
    ID              shift and go to state 54

    expresion                      shift and go to state 55
    termino                        shift and go to state 56
    factor                         shift and go to state 57

state 41

    (118) declaracionTipo -> TYPE ID simboloPor listaIdParentesis . ; declaracionConstanteCONST tipoFormalIN tipoFormlINOUT declaracionVariableOUT declaracionVariableVAR sentenciaSecuenciaBEGIN END ID
    ;               shift and go to state 67


state 42

    (121) listaIdParentesis -> empty .
    ;               reduce using rule 121 (listaIdParentesis -> empty .)


state 43

    (122) listaIdParentesis -> ( . listaId )
    (20) listaId -> . ID IDComa
    ID              shift and go to state 38

    listaId                        shift and go to state 68

state 44

    (3) modulo -> MODULE ID ; declaracionTipoPuntoComa declaracionConstanteCONST declaracionVariableIN declaracionVariableINOUT declaracionVariableOUT . declaracionVariableVAR sentenciaSecuenciaBEGIN END ID .
    (101) declaracionVariableVAR -> . empty
    (102) declaracionVariableVAR -> . VAR declaracionVariableRecursivo
    (136) empty -> .
    VAR             shift and go to state 71
    BEGIN           reduce using rule 136 (empty -> .)
    END             reduce using rule 136 (empty -> .)

    declaracionVariableVAR         shift and go to state 69
    empty                          shift and go to state 70

state 45

    (99) declaracionVariableOUT -> empty .
    VAR             reduce using rule 99 (declaracionVariableOUT -> empty .)
    BEGIN           reduce using rule 99 (declaracionVariableOUT -> empty .)
    END             reduce using rule 99 (declaracionVariableOUT -> empty .)


state 46

    (100) declaracionVariableOUT -> OUT . declaracionVariableRecursivo
    (105) declaracionVariableRecursivo -> . empty
    (106) declaracionVariableRecursivo -> . declaracionVariableRecursivoR
    (136) empty -> .
    (107) declaracionVariableRecursivoR -> . declaracionVariable
    (108) declaracionVariableRecursivoR -> . declaracionVariableRecursivoR declaracionVariable
    (19) declaracionVariable -> . listaId : tipo ;
    (20) listaId -> . ID IDComa
    VAR             reduce using rule 136 (empty -> .)
    BEGIN           reduce using rule 136 (empty -> .)
    END             reduce using rule 136 (empty -> .)
    ID              shift and go to state 38

    declaracionVariableRecursivo   shift and go to state 72
    empty                          shift and go to state 34
    declaracionVariableRecursivoR  shift and go to state 35
    declaracionVariable            shift and go to state 36
    listaId                        shift and go to state 37

state 47

    (98) declaracionVariableINOUT -> INOUT declaracionVariableRecursivo .
    OUT             reduce using rule 98 (declaracionVariableINOUT -> INOUT declaracionVariableRecursivo .)
    VAR             reduce using rule 98 (declaracionVariableINOUT -> INOUT declaracionVariableRecursivo .)
    BEGIN           reduce using rule 98 (declaracionVariableINOUT -> INOUT declaracionVariableRecursivo .)
    END             reduce using rule 98 (declaracionVariableINOUT -> INOUT declaracionVariableRecursivo .)


state 48

    (108) declaracionVariableRecursivoR -> declaracionVariableRecursivoR declaracionVariable .
    ID              reduce using rule 108 (declaracionVariableRecursivoR -> declaracionVariableRecursivoR declaracionVariable .)
    INOUT           reduce using rule 108 (declaracionVariableRecursivoR -> declaracionVariableRecursivoR declaracionVariable .)
    OUT             reduce using rule 108 (declaracionVariableRecursivoR -> declaracionVariableRecursivoR declaracionVariable .)
    VAR             reduce using rule 108 (declaracionVariableRecursivoR -> declaracionVariableRecursivoR declaracionVariable .)
    BEGIN           reduce using rule 108 (declaracionVariableRecursivoR -> declaracionVariableRecursivoR declaracionVariable .)
    END             reduce using rule 108 (declaracionVariableRecursivoR -> declaracionVariableRecursivoR declaracionVariable .)


state 49

    (19) declaracionVariable -> listaId : . tipo ;
    (13) tipo -> . expresionCorchete tipoSimple
    (14) expresionCorchete -> . empty
    (15) expresionCorchete -> . expresionCorcheteR
    (136) empty -> .
    (16) expresionCorcheteR -> . [ expresion ]
    (17) expresionCorcheteR -> . expresionCorcheteR [ expresion ]
    ID              reduce using rule 136 (empty -> .)
    OC              reduce using rule 136 (empty -> .)
    TS              reduce using rule 136 (empty -> .)
    BIT             reduce using rule 136 (empty -> .)
    [               shift and go to state 77

    tipo                           shift and go to state 73
    expresionCorchete              shift and go to state 74
    empty                          shift and go to state 75
    expresionCorcheteR             shift and go to state 76

state 50

    (20) listaId -> ID IDComa .
    :               reduce using rule 20 (listaId -> ID IDComa .)
    )               reduce using rule 20 (listaId -> ID IDComa .)


state 51

    (21) IDComa -> empty .
    :               reduce using rule 21 (IDComa -> empty .)
    )               reduce using rule 21 (IDComa -> empty .)


state 52

    (22) IDComa -> IDComaR .
    (24) IDComaR -> IDComaR . , ID
    :               reduce using rule 22 (IDComa -> IDComaR .)
    )               reduce using rule 22 (IDComa -> IDComaR .)
    ,               shift and go to state 78


state 53

    (23) IDComaR -> , . ID
    ID              shift and go to state 79


state 54

    (42) factor -> ID . selector
    (25) selector -> . empty
    (26) selector -> . selectorR
    (136) empty -> .
    (27) selectorR -> . selectorRR
    (28) selectorR -> . selectorR selectorRR
    (29) selectorRR -> . [ expresion ]
    (30) selectorRR -> . . INTEGER
    (31) selectorRR -> . . ID
    MOD             reduce using rule 136 (empty -> .)
    DIV             reduce using rule 136 (empty -> .)
    /               reduce using rule 136 (empty -> .)
    *               reduce using rule 136 (empty -> .)
    -               reduce using rule 136 (empty -> .)
    +               reduce using rule 136 (empty -> .)
    ;               reduce using rule 136 (empty -> .)
    )               reduce using rule 136 (empty -> .)
    ]               reduce using rule 136 (empty -> .)
    ,               reduce using rule 136 (empty -> .)
    :               reduce using rule 136 (empty -> .)
    MAYORIGUAL      reduce using rule 136 (empty -> .)
    >               reduce using rule 136 (empty -> .)
    MENORIGUAL      reduce using rule 136 (empty -> .)
    <               reduce using rule 136 (empty -> .)
    #               reduce using rule 136 (empty -> .)
    =               reduce using rule 136 (empty -> .)
    DOBLEPUNTO      reduce using rule 136 (empty -> .)
    END             reduce using rule 136 (empty -> .)
    ELSIF           reduce using rule 136 (empty -> .)
    ELSE            reduce using rule 136 (empty -> .)
    |               reduce using rule 136 (empty -> .)
    THEN            reduce using rule 136 (empty -> .)
    DO              reduce using rule 136 (empty -> .)
    [               shift and go to state 84
    .               shift and go to state 85

    selector                       shift and go to state 80
    empty                          shift and go to state 81
    selectorR                      shift and go to state 82
    selectorRR                     shift and go to state 83

state 55

    (18) declaracionConstante -> ID DOSPUNTOSIGUAL expresion . ;
    ;               shift and go to state 86


state 56

    (51) expresion -> termino . terminoMasMenos
    (46) termino -> termino . simbolosProd factor
    (52) terminoMasMenos -> . empty
    (53) terminoMasMenos -> . terminoMasMenosR
    (47) simbolosProd -> . MOD
    (48) simbolosProd -> . DIV
    (49) simbolosProd -> . /
    (50) simbolosProd -> . *
    (136) empty -> .
    (54) terminoMasMenosR -> . simbolosMasMenos termino
    (55) terminoMasMenosR -> . terminoMasMenosR simbolosMasMenos termino
    (56) simbolosMasMenos -> . -
    (57) simbolosMasMenos -> . +
    MOD             shift and go to state 91
    DIV             shift and go to state 92
    /               shift and go to state 93
    *               shift and go to state 94
    ;               reduce using rule 136 (empty -> .)
    )               reduce using rule 136 (empty -> .)
    ]               reduce using rule 136 (empty -> .)
    ,               reduce using rule 136 (empty -> .)
    :               reduce using rule 136 (empty -> .)
    MAYORIGUAL      reduce using rule 136 (empty -> .)
    >               reduce using rule 136 (empty -> .)
    MENORIGUAL      reduce using rule 136 (empty -> .)
    <               reduce using rule 136 (empty -> .)
    #               reduce using rule 136 (empty -> .)
    =               reduce using rule 136 (empty -> .)
    DOBLEPUNTO      reduce using rule 136 (empty -> .)
    END             reduce using rule 136 (empty -> .)
    ELSIF           reduce using rule 136 (empty -> .)
    ELSE            reduce using rule 136 (empty -> .)
    |               reduce using rule 136 (empty -> .)
    THEN            reduce using rule 136 (empty -> .)
    DO              reduce using rule 136 (empty -> .)
    -               shift and go to state 96
    +               shift and go to state 97

    terminoMasMenos                shift and go to state 87
    simbolosProd                   shift and go to state 88
    empty                          shift and go to state 89
    terminoMasMenosR               shift and go to state 90
    simbolosMasMenos               shift and go to state 95

state 57

    (45) termino -> factor .
    MOD             reduce using rule 45 (termino -> factor .)
    DIV             reduce using rule 45 (termino -> factor .)
    /               reduce using rule 45 (termino -> factor .)
    *               reduce using rule 45 (termino -> factor .)
    -               reduce using rule 45 (termino -> factor .)
    +               reduce using rule 45 (termino -> factor .)
    ;               reduce using rule 45 (termino -> factor .)
    )               reduce using rule 45 (termino -> factor .)
    ]               reduce using rule 45 (termino -> factor .)
    ,               reduce using rule 45 (termino -> factor .)
    :               reduce using rule 45 (termino -> factor .)
    MAYORIGUAL      reduce using rule 45 (termino -> factor .)
    >               reduce using rule 45 (termino -> factor .)
    MENORIGUAL      reduce using rule 45 (termino -> factor .)
    <               reduce using rule 45 (termino -> factor .)
    #               reduce using rule 45 (termino -> factor .)
    =               reduce using rule 45 (termino -> factor .)
    DOBLEPUNTO      reduce using rule 45 (termino -> factor .)
    END             reduce using rule 45 (termino -> factor .)
    ELSIF           reduce using rule 45 (termino -> factor .)
    ELSE            reduce using rule 45 (termino -> factor .)
    |               reduce using rule 45 (termino -> factor .)
    THEN            reduce using rule 45 (termino -> factor .)
    DO              reduce using rule 45 (termino -> factor .)


state 58

    (32) factor -> SR . ( expresion , expresion )
    (               shift and go to state 98


state 59

    (37) factor -> ( . expresion )
    (51) expresion -> . termino terminoMasMenos
    (45) termino -> . factor
    (46) termino -> . termino simbolosProd factor
    (32) factor -> . SR ( expresion , expresion )
    (33) factor -> . LATCH ( expresion , expresion )
    (34) factor -> . REG ( expresionComaO expresion )
    (35) factor -> . MUX ( expresion , expresion : expresion , expresion , expresion , expresion )
    (36) factor -> . MUX ( expresion : expresion , expresion )
    (37) factor -> . ( expresion )
    (38) factor -> . ~ factor
    (39) factor -> . FLECHAARRIBA factor
    (40) factor -> . INTEGER
    (41) factor -> . LOGICVALUE
    (42) factor -> . ID selector
    SR              shift and go to state 58
    LATCH           shift and go to state 60
    REG             shift and go to state 61
    MUX             shift and go to state 62
    (               shift and go to state 59
    ~               shift and go to state 63
    FLECHAARRIBA    shift and go to state 64
    INTEGER         shift and go to state 65
    LOGICVALUE      shift and go to state 66
    ID              shift and go to state 54

    expresion                      shift and go to state 99
    termino                        shift and go to state 56
    factor                         shift and go to state 57

state 60

    (33) factor -> LATCH . ( expresion , expresion )
    (               shift and go to state 100


state 61

    (34) factor -> REG . ( expresionComaO expresion )
    (               shift and go to state 101


state 62

    (35) factor -> MUX . ( expresion , expresion : expresion , expresion , expresion , expresion )
    (36) factor -> MUX . ( expresion : expresion , expresion )
    (               shift and go to state 102


state 63

    (38) factor -> ~ . factor
    (32) factor -> . SR ( expresion , expresion )
    (33) factor -> . LATCH ( expresion , expresion )
    (34) factor -> . REG ( expresionComaO expresion )
    (35) factor -> . MUX ( expresion , expresion : expresion , expresion , expresion , expresion )
    (36) factor -> . MUX ( expresion : expresion , expresion )
    (37) factor -> . ( expresion )
    (38) factor -> . ~ factor
    (39) factor -> . FLECHAARRIBA factor
    (40) factor -> . INTEGER
    (41) factor -> . LOGICVALUE
    (42) factor -> . ID selector
    SR              shift and go to state 58
    LATCH           shift and go to state 60
    REG             shift and go to state 61
    MUX             shift and go to state 62
    (               shift and go to state 59
    ~               shift and go to state 63
    FLECHAARRIBA    shift and go to state 64
    INTEGER         shift and go to state 65
    LOGICVALUE      shift and go to state 66
    ID              shift and go to state 54

    factor                         shift and go to state 103

state 64

    (39) factor -> FLECHAARRIBA . factor
    (32) factor -> . SR ( expresion , expresion )
    (33) factor -> . LATCH ( expresion , expresion )
    (34) factor -> . REG ( expresionComaO expresion )
    (35) factor -> . MUX ( expresion , expresion : expresion , expresion , expresion , expresion )
    (36) factor -> . MUX ( expresion : expresion , expresion )
    (37) factor -> . ( expresion )
    (38) factor -> . ~ factor
    (39) factor -> . FLECHAARRIBA factor
    (40) factor -> . INTEGER
    (41) factor -> . LOGICVALUE
    (42) factor -> . ID selector
    SR              shift and go to state 58
    LATCH           shift and go to state 60
    REG             shift and go to state 61
    MUX             shift and go to state 62
    (               shift and go to state 59
    ~               shift and go to state 63
    FLECHAARRIBA    shift and go to state 64
    INTEGER         shift and go to state 65
    LOGICVALUE      shift and go to state 66
    ID              shift and go to state 54

    factor                         shift and go to state 104

state 65

    (40) factor -> INTEGER .
    MOD             reduce using rule 40 (factor -> INTEGER .)
    DIV             reduce using rule 40 (factor -> INTEGER .)
    /               reduce using rule 40 (factor -> INTEGER .)
    *               reduce using rule 40 (factor -> INTEGER .)
    -               reduce using rule 40 (factor -> INTEGER .)
    +               reduce using rule 40 (factor -> INTEGER .)
    ;               reduce using rule 40 (factor -> INTEGER .)
    )               reduce using rule 40 (factor -> INTEGER .)
    ]               reduce using rule 40 (factor -> INTEGER .)
    ,               reduce using rule 40 (factor -> INTEGER .)
    :               reduce using rule 40 (factor -> INTEGER .)
    MAYORIGUAL      reduce using rule 40 (factor -> INTEGER .)
    >               reduce using rule 40 (factor -> INTEGER .)
    MENORIGUAL      reduce using rule 40 (factor -> INTEGER .)
    <               reduce using rule 40 (factor -> INTEGER .)
    #               reduce using rule 40 (factor -> INTEGER .)
    =               reduce using rule 40 (factor -> INTEGER .)
    DOBLEPUNTO      reduce using rule 40 (factor -> INTEGER .)
    END             reduce using rule 40 (factor -> INTEGER .)
    ELSIF           reduce using rule 40 (factor -> INTEGER .)
    ELSE            reduce using rule 40 (factor -> INTEGER .)
    |               reduce using rule 40 (factor -> INTEGER .)
    THEN            reduce using rule 40 (factor -> INTEGER .)
    DO              reduce using rule 40 (factor -> INTEGER .)


state 66

    (41) factor -> LOGICVALUE .
    MOD             reduce using rule 41 (factor -> LOGICVALUE .)
    DIV             reduce using rule 41 (factor -> LOGICVALUE .)
    /               reduce using rule 41 (factor -> LOGICVALUE .)
    *               reduce using rule 41 (factor -> LOGICVALUE .)
    -               reduce using rule 41 (factor -> LOGICVALUE .)
    +               reduce using rule 41 (factor -> LOGICVALUE .)
    ;               reduce using rule 41 (factor -> LOGICVALUE .)
    )               reduce using rule 41 (factor -> LOGICVALUE .)
    ]               reduce using rule 41 (factor -> LOGICVALUE .)
    ,               reduce using rule 41 (factor -> LOGICVALUE .)
    :               reduce using rule 41 (factor -> LOGICVALUE .)
    MAYORIGUAL      reduce using rule 41 (factor -> LOGICVALUE .)
    >               reduce using rule 41 (factor -> LOGICVALUE .)
    MENORIGUAL      reduce using rule 41 (factor -> LOGICVALUE .)
    <               reduce using rule 41 (factor -> LOGICVALUE .)
    #               reduce using rule 41 (factor -> LOGICVALUE .)
    =               reduce using rule 41 (factor -> LOGICVALUE .)
    DOBLEPUNTO      reduce using rule 41 (factor -> LOGICVALUE .)
    END             reduce using rule 41 (factor -> LOGICVALUE .)
    ELSIF           reduce using rule 41 (factor -> LOGICVALUE .)
    ELSE            reduce using rule 41 (factor -> LOGICVALUE .)
    |               reduce using rule 41 (factor -> LOGICVALUE .)
    THEN            reduce using rule 41 (factor -> LOGICVALUE .)
    DO              reduce using rule 41 (factor -> LOGICVALUE .)


state 67

    (118) declaracionTipo -> TYPE ID simboloPor listaIdParentesis ; . declaracionConstanteCONST tipoFormalIN tipoFormlINOUT declaracionVariableOUT declaracionVariableVAR sentenciaSecuenciaBEGIN END ID
    (89) declaracionConstanteCONST -> . empty
    (90) declaracionConstanteCONST -> . CONST declaracionConstanteRecursivo
    (136) empty -> .
    CONST           shift and go to state 14
    IN              reduce using rule 136 (empty -> .)
    INOUT           reduce using rule 136 (empty -> .)
    OUT             reduce using rule 136 (empty -> .)
    VAR             reduce using rule 136 (empty -> .)
    BEGIN           reduce using rule 136 (empty -> .)
    END             reduce using rule 136 (empty -> .)

    declaracionConstanteCONST      shift and go to state 105
    empty                          shift and go to state 13

state 68

    (122) listaIdParentesis -> ( listaId . )
    )               shift and go to state 106


state 69

    (3) modulo -> MODULE ID ; declaracionTipoPuntoComa declaracionConstanteCONST declaracionVariableIN declaracionVariableINOUT declaracionVariableOUT declaracionVariableVAR . sentenciaSecuenciaBEGIN END ID .
    (103) sentenciaSecuenciaBEGIN -> . empty
    (104) sentenciaSecuenciaBEGIN -> . BEGIN sentenciaSecuencia
    (136) empty -> .
    BEGIN           shift and go to state 109
    END             reduce using rule 136 (empty -> .)

    sentenciaSecuenciaBEGIN        shift and go to state 107
    empty                          shift and go to state 108

state 70

    (101) declaracionVariableVAR -> empty .
    BEGIN           reduce using rule 101 (declaracionVariableVAR -> empty .)
    END             reduce using rule 101 (declaracionVariableVAR -> empty .)


state 71

    (102) declaracionVariableVAR -> VAR . declaracionVariableRecursivo
    (105) declaracionVariableRecursivo -> . empty
    (106) declaracionVariableRecursivo -> . declaracionVariableRecursivoR
    (136) empty -> .
    (107) declaracionVariableRecursivoR -> . declaracionVariable
    (108) declaracionVariableRecursivoR -> . declaracionVariableRecursivoR declaracionVariable
    (19) declaracionVariable -> . listaId : tipo ;
    (20) listaId -> . ID IDComa
    BEGIN           reduce using rule 136 (empty -> .)
    END             reduce using rule 136 (empty -> .)
    ID              shift and go to state 38

    declaracionVariableRecursivo   shift and go to state 110
    empty                          shift and go to state 34
    declaracionVariableRecursivoR  shift and go to state 35
    declaracionVariable            shift and go to state 36
    listaId                        shift and go to state 37

state 72

    (100) declaracionVariableOUT -> OUT declaracionVariableRecursivo .
    VAR             reduce using rule 100 (declaracionVariableOUT -> OUT declaracionVariableRecursivo .)
    BEGIN           reduce using rule 100 (declaracionVariableOUT -> OUT declaracionVariableRecursivo .)
    END             reduce using rule 100 (declaracionVariableOUT -> OUT declaracionVariableRecursivo .)


state 73

    (19) declaracionVariable -> listaId : tipo . ;
    ;               shift and go to state 111


state 74

    (13) tipo -> expresionCorchete . tipoSimple
    (4) tipoSimple -> . ID conjuntoExpresiones
    (5) tipoSimple -> . tipoBasico
    (8) tipoBasico -> . OC
    (9) tipoBasico -> . TS
    (10) tipoBasico -> . BIT
    ID              shift and go to state 113
    OC              shift and go to state 115
    TS              shift and go to state 116
    BIT             shift and go to state 117

    tipoSimple                     shift and go to state 112
    tipoBasico                     shift and go to state 114

state 75

    (14) expresionCorchete -> empty .
    ID              reduce using rule 14 (expresionCorchete -> empty .)
    OC              reduce using rule 14 (expresionCorchete -> empty .)
    TS              reduce using rule 14 (expresionCorchete -> empty .)
    BIT             reduce using rule 14 (expresionCorchete -> empty .)


state 76

    (15) expresionCorchete -> expresionCorcheteR .
    (17) expresionCorcheteR -> expresionCorcheteR . [ expresion ]
    ID              reduce using rule 15 (expresionCorchete -> expresionCorcheteR .)
    OC              reduce using rule 15 (expresionCorchete -> expresionCorcheteR .)
    TS              reduce using rule 15 (expresionCorchete -> expresionCorcheteR .)
    BIT             reduce using rule 15 (expresionCorchete -> expresionCorcheteR .)
    [               shift and go to state 118


state 77

    (16) expresionCorcheteR -> [ . expresion ]
    (51) expresion -> . termino terminoMasMenos
    (45) termino -> . factor
    (46) termino -> . termino simbolosProd factor
    (32) factor -> . SR ( expresion , expresion )
    (33) factor -> . LATCH ( expresion , expresion )
    (34) factor -> . REG ( expresionComaO expresion )
    (35) factor -> . MUX ( expresion , expresion : expresion , expresion , expresion , expresion )
    (36) factor -> . MUX ( expresion : expresion , expresion )
    (37) factor -> . ( expresion )
    (38) factor -> . ~ factor
    (39) factor -> . FLECHAARRIBA factor
    (40) factor -> . INTEGER
    (41) factor -> . LOGICVALUE
    (42) factor -> . ID selector
    SR              shift and go to state 58
    LATCH           shift and go to state 60
    REG             shift and go to state 61
    MUX             shift and go to state 62
    (               shift and go to state 59
    ~               shift and go to state 63
    FLECHAARRIBA    shift and go to state 64
    INTEGER         shift and go to state 65
    LOGICVALUE      shift and go to state 66
    ID              shift and go to state 54

    expresion                      shift and go to state 119
    termino                        shift and go to state 56
    factor                         shift and go to state 57

state 78

    (24) IDComaR -> IDComaR , . ID
    ID              shift and go to state 120


state 79

    (23) IDComaR -> , ID .
    ,               reduce using rule 23 (IDComaR -> , ID .)
    :               reduce using rule 23 (IDComaR -> , ID .)
    )               reduce using rule 23 (IDComaR -> , ID .)


state 80

    (42) factor -> ID selector .
    MOD             reduce using rule 42 (factor -> ID selector .)
    DIV             reduce using rule 42 (factor -> ID selector .)
    /               reduce using rule 42 (factor -> ID selector .)
    *               reduce using rule 42 (factor -> ID selector .)
    -               reduce using rule 42 (factor -> ID selector .)
    +               reduce using rule 42 (factor -> ID selector .)
    ;               reduce using rule 42 (factor -> ID selector .)
    )               reduce using rule 42 (factor -> ID selector .)
    ]               reduce using rule 42 (factor -> ID selector .)
    ,               reduce using rule 42 (factor -> ID selector .)
    :               reduce using rule 42 (factor -> ID selector .)
    MAYORIGUAL      reduce using rule 42 (factor -> ID selector .)
    >               reduce using rule 42 (factor -> ID selector .)
    MENORIGUAL      reduce using rule 42 (factor -> ID selector .)
    <               reduce using rule 42 (factor -> ID selector .)
    #               reduce using rule 42 (factor -> ID selector .)
    =               reduce using rule 42 (factor -> ID selector .)
    DOBLEPUNTO      reduce using rule 42 (factor -> ID selector .)
    END             reduce using rule 42 (factor -> ID selector .)
    ELSIF           reduce using rule 42 (factor -> ID selector .)
    ELSE            reduce using rule 42 (factor -> ID selector .)
    |               reduce using rule 42 (factor -> ID selector .)
    THEN            reduce using rule 42 (factor -> ID selector .)
    DO              reduce using rule 42 (factor -> ID selector .)


state 81

    (25) selector -> empty .
    MOD             reduce using rule 25 (selector -> empty .)
    DIV             reduce using rule 25 (selector -> empty .)
    /               reduce using rule 25 (selector -> empty .)
    *               reduce using rule 25 (selector -> empty .)
    -               reduce using rule 25 (selector -> empty .)
    +               reduce using rule 25 (selector -> empty .)
    ;               reduce using rule 25 (selector -> empty .)
    )               reduce using rule 25 (selector -> empty .)
    ]               reduce using rule 25 (selector -> empty .)
    ,               reduce using rule 25 (selector -> empty .)
    :               reduce using rule 25 (selector -> empty .)
    MAYORIGUAL      reduce using rule 25 (selector -> empty .)
    >               reduce using rule 25 (selector -> empty .)
    MENORIGUAL      reduce using rule 25 (selector -> empty .)
    <               reduce using rule 25 (selector -> empty .)
    #               reduce using rule 25 (selector -> empty .)
    =               reduce using rule 25 (selector -> empty .)
    DOBLEPUNTO      reduce using rule 25 (selector -> empty .)
    END             reduce using rule 25 (selector -> empty .)
    ELSIF           reduce using rule 25 (selector -> empty .)
    ELSE            reduce using rule 25 (selector -> empty .)
    |               reduce using rule 25 (selector -> empty .)
    THEN            reduce using rule 25 (selector -> empty .)
    DO              reduce using rule 25 (selector -> empty .)
    (               reduce using rule 25 (selector -> empty .)
    DOSPUNTOSIGUAL  reduce using rule 25 (selector -> empty .)


state 82

    (26) selector -> selectorR .
    (28) selectorR -> selectorR . selectorRR
    (29) selectorRR -> . [ expresion ]
    (30) selectorRR -> . . INTEGER
    (31) selectorRR -> . . ID
    MOD             reduce using rule 26 (selector -> selectorR .)
    DIV             reduce using rule 26 (selector -> selectorR .)
    /               reduce using rule 26 (selector -> selectorR .)
    *               reduce using rule 26 (selector -> selectorR .)
    -               reduce using rule 26 (selector -> selectorR .)
    +               reduce using rule 26 (selector -> selectorR .)
    ;               reduce using rule 26 (selector -> selectorR .)
    )               reduce using rule 26 (selector -> selectorR .)
    ]               reduce using rule 26 (selector -> selectorR .)
    ,               reduce using rule 26 (selector -> selectorR .)
    :               reduce using rule 26 (selector -> selectorR .)
    MAYORIGUAL      reduce using rule 26 (selector -> selectorR .)
    >               reduce using rule 26 (selector -> selectorR .)
    MENORIGUAL      reduce using rule 26 (selector -> selectorR .)
    <               reduce using rule 26 (selector -> selectorR .)
    #               reduce using rule 26 (selector -> selectorR .)
    =               reduce using rule 26 (selector -> selectorR .)
    DOBLEPUNTO      reduce using rule 26 (selector -> selectorR .)
    END             reduce using rule 26 (selector -> selectorR .)
    ELSIF           reduce using rule 26 (selector -> selectorR .)
    ELSE            reduce using rule 26 (selector -> selectorR .)
    |               reduce using rule 26 (selector -> selectorR .)
    THEN            reduce using rule 26 (selector -> selectorR .)
    DO              reduce using rule 26 (selector -> selectorR .)
    (               reduce using rule 26 (selector -> selectorR .)
    DOSPUNTOSIGUAL  reduce using rule 26 (selector -> selectorR .)
    [               shift and go to state 84
    .               shift and go to state 85

    selectorRR                     shift and go to state 121

state 83

    (27) selectorR -> selectorRR .
    [               reduce using rule 27 (selectorR -> selectorRR .)
    .               reduce using rule 27 (selectorR -> selectorRR .)
    MOD             reduce using rule 27 (selectorR -> selectorRR .)
    DIV             reduce using rule 27 (selectorR -> selectorRR .)
    /               reduce using rule 27 (selectorR -> selectorRR .)
    *               reduce using rule 27 (selectorR -> selectorRR .)
    -               reduce using rule 27 (selectorR -> selectorRR .)
    +               reduce using rule 27 (selectorR -> selectorRR .)
    ;               reduce using rule 27 (selectorR -> selectorRR .)
    )               reduce using rule 27 (selectorR -> selectorRR .)
    ]               reduce using rule 27 (selectorR -> selectorRR .)
    ,               reduce using rule 27 (selectorR -> selectorRR .)
    :               reduce using rule 27 (selectorR -> selectorRR .)
    MAYORIGUAL      reduce using rule 27 (selectorR -> selectorRR .)
    >               reduce using rule 27 (selectorR -> selectorRR .)
    MENORIGUAL      reduce using rule 27 (selectorR -> selectorRR .)
    <               reduce using rule 27 (selectorR -> selectorRR .)
    #               reduce using rule 27 (selectorR -> selectorRR .)
    =               reduce using rule 27 (selectorR -> selectorRR .)
    DOBLEPUNTO      reduce using rule 27 (selectorR -> selectorRR .)
    END             reduce using rule 27 (selectorR -> selectorRR .)
    ELSIF           reduce using rule 27 (selectorR -> selectorRR .)
    ELSE            reduce using rule 27 (selectorR -> selectorRR .)
    |               reduce using rule 27 (selectorR -> selectorRR .)
    THEN            reduce using rule 27 (selectorR -> selectorRR .)
    DO              reduce using rule 27 (selectorR -> selectorRR .)
    (               reduce using rule 27 (selectorR -> selectorRR .)
    DOSPUNTOSIGUAL  reduce using rule 27 (selectorR -> selectorRR .)


state 84

    (29) selectorRR -> [ . expresion ]
    (51) expresion -> . termino terminoMasMenos
    (45) termino -> . factor
    (46) termino -> . termino simbolosProd factor
    (32) factor -> . SR ( expresion , expresion )
    (33) factor -> . LATCH ( expresion , expresion )
    (34) factor -> . REG ( expresionComaO expresion )
    (35) factor -> . MUX ( expresion , expresion : expresion , expresion , expresion , expresion )
    (36) factor -> . MUX ( expresion : expresion , expresion )
    (37) factor -> . ( expresion )
    (38) factor -> . ~ factor
    (39) factor -> . FLECHAARRIBA factor
    (40) factor -> . INTEGER
    (41) factor -> . LOGICVALUE
    (42) factor -> . ID selector
    SR              shift and go to state 58
    LATCH           shift and go to state 60
    REG             shift and go to state 61
    MUX             shift and go to state 62
    (               shift and go to state 59
    ~               shift and go to state 63
    FLECHAARRIBA    shift and go to state 64
    INTEGER         shift and go to state 65
    LOGICVALUE      shift and go to state 66
    ID              shift and go to state 54

    expresion                      shift and go to state 122
    termino                        shift and go to state 56
    factor                         shift and go to state 57

state 85

    (30) selectorRR -> . . INTEGER
    (31) selectorRR -> . . ID
    INTEGER         shift and go to state 123
    ID              shift and go to state 124


state 86

    (18) declaracionConstante -> ID DOSPUNTOSIGUAL expresion ; .
    ID              reduce using rule 18 (declaracionConstante -> ID DOSPUNTOSIGUAL expresion ; .)
    IN              reduce using rule 18 (declaracionConstante -> ID DOSPUNTOSIGUAL expresion ; .)
    INOUT           reduce using rule 18 (declaracionConstante -> ID DOSPUNTOSIGUAL expresion ; .)
    OUT             reduce using rule 18 (declaracionConstante -> ID DOSPUNTOSIGUAL expresion ; .)
    VAR             reduce using rule 18 (declaracionConstante -> ID DOSPUNTOSIGUAL expresion ; .)
    BEGIN           reduce using rule 18 (declaracionConstante -> ID DOSPUNTOSIGUAL expresion ; .)
    END             reduce using rule 18 (declaracionConstante -> ID DOSPUNTOSIGUAL expresion ; .)


state 87

    (51) expresion -> termino terminoMasMenos .
    ;               reduce using rule 51 (expresion -> termino terminoMasMenos .)
    )               reduce using rule 51 (expresion -> termino terminoMasMenos .)
    ]               reduce using rule 51 (expresion -> termino terminoMasMenos .)
    ,               reduce using rule 51 (expresion -> termino terminoMasMenos .)
    :               reduce using rule 51 (expresion -> termino terminoMasMenos .)
    MAYORIGUAL      reduce using rule 51 (expresion -> termino terminoMasMenos .)
    >               reduce using rule 51 (expresion -> termino terminoMasMenos .)
    MENORIGUAL      reduce using rule 51 (expresion -> termino terminoMasMenos .)
    <               reduce using rule 51 (expresion -> termino terminoMasMenos .)
    #               reduce using rule 51 (expresion -> termino terminoMasMenos .)
    =               reduce using rule 51 (expresion -> termino terminoMasMenos .)
    DOBLEPUNTO      reduce using rule 51 (expresion -> termino terminoMasMenos .)
    END             reduce using rule 51 (expresion -> termino terminoMasMenos .)
    ELSIF           reduce using rule 51 (expresion -> termino terminoMasMenos .)
    ELSE            reduce using rule 51 (expresion -> termino terminoMasMenos .)
    |               reduce using rule 51 (expresion -> termino terminoMasMenos .)
    THEN            reduce using rule 51 (expresion -> termino terminoMasMenos .)
    DO              reduce using rule 51 (expresion -> termino terminoMasMenos .)


state 88

    (46) termino -> termino simbolosProd . factor
    (32) factor -> . SR ( expresion , expresion )
    (33) factor -> . LATCH ( expresion , expresion )
    (34) factor -> . REG ( expresionComaO expresion )
    (35) factor -> . MUX ( expresion , expresion : expresion , expresion , expresion , expresion )
    (36) factor -> . MUX ( expresion : expresion , expresion )
    (37) factor -> . ( expresion )
    (38) factor -> . ~ factor
    (39) factor -> . FLECHAARRIBA factor
    (40) factor -> . INTEGER
    (41) factor -> . LOGICVALUE
    (42) factor -> . ID selector
    SR              shift and go to state 58
    LATCH           shift and go to state 60
    REG             shift and go to state 61
    MUX             shift and go to state 62
    (               shift and go to state 59
    ~               shift and go to state 63
    FLECHAARRIBA    shift and go to state 64
    INTEGER         shift and go to state 65
    LOGICVALUE      shift and go to state 66
    ID              shift and go to state 54

    factor                         shift and go to state 125

state 89

    (52) terminoMasMenos -> empty .
    ;               reduce using rule 52 (terminoMasMenos -> empty .)
    )               reduce using rule 52 (terminoMasMenos -> empty .)
    ]               reduce using rule 52 (terminoMasMenos -> empty .)
    ,               reduce using rule 52 (terminoMasMenos -> empty .)
    :               reduce using rule 52 (terminoMasMenos -> empty .)
    MAYORIGUAL      reduce using rule 52 (terminoMasMenos -> empty .)
    >               reduce using rule 52 (terminoMasMenos -> empty .)
    MENORIGUAL      reduce using rule 52 (terminoMasMenos -> empty .)
    <               reduce using rule 52 (terminoMasMenos -> empty .)
    #               reduce using rule 52 (terminoMasMenos -> empty .)
    =               reduce using rule 52 (terminoMasMenos -> empty .)
    DOBLEPUNTO      reduce using rule 52 (terminoMasMenos -> empty .)
    END             reduce using rule 52 (terminoMasMenos -> empty .)
    ELSIF           reduce using rule 52 (terminoMasMenos -> empty .)
    ELSE            reduce using rule 52 (terminoMasMenos -> empty .)
    |               reduce using rule 52 (terminoMasMenos -> empty .)
    THEN            reduce using rule 52 (terminoMasMenos -> empty .)
    DO              reduce using rule 52 (terminoMasMenos -> empty .)


state 90

    (53) terminoMasMenos -> terminoMasMenosR .
    (55) terminoMasMenosR -> terminoMasMenosR . simbolosMasMenos termino
    (56) simbolosMasMenos -> . -
    (57) simbolosMasMenos -> . +
    ;               reduce using rule 53 (terminoMasMenos -> terminoMasMenosR .)
    )               reduce using rule 53 (terminoMasMenos -> terminoMasMenosR .)
    ]               reduce using rule 53 (terminoMasMenos -> terminoMasMenosR .)
    ,               reduce using rule 53 (terminoMasMenos -> terminoMasMenosR .)
    :               reduce using rule 53 (terminoMasMenos -> terminoMasMenosR .)
    MAYORIGUAL      reduce using rule 53 (terminoMasMenos -> terminoMasMenosR .)
    >               reduce using rule 53 (terminoMasMenos -> terminoMasMenosR .)
    MENORIGUAL      reduce using rule 53 (terminoMasMenos -> terminoMasMenosR .)
    <               reduce using rule 53 (terminoMasMenos -> terminoMasMenosR .)
    #               reduce using rule 53 (terminoMasMenos -> terminoMasMenosR .)
    =               reduce using rule 53 (terminoMasMenos -> terminoMasMenosR .)
    DOBLEPUNTO      reduce using rule 53 (terminoMasMenos -> terminoMasMenosR .)
    END             reduce using rule 53 (terminoMasMenos -> terminoMasMenosR .)
    ELSIF           reduce using rule 53 (terminoMasMenos -> terminoMasMenosR .)
    ELSE            reduce using rule 53 (terminoMasMenos -> terminoMasMenosR .)
    |               reduce using rule 53 (terminoMasMenos -> terminoMasMenosR .)
    THEN            reduce using rule 53 (terminoMasMenos -> terminoMasMenosR .)
    DO              reduce using rule 53 (terminoMasMenos -> terminoMasMenosR .)
    -               shift and go to state 96
    +               shift and go to state 97

    simbolosMasMenos               shift and go to state 126

state 91

    (47) simbolosProd -> MOD .
    SR              reduce using rule 47 (simbolosProd -> MOD .)
    LATCH           reduce using rule 47 (simbolosProd -> MOD .)
    REG             reduce using rule 47 (simbolosProd -> MOD .)
    MUX             reduce using rule 47 (simbolosProd -> MOD .)
    (               reduce using rule 47 (simbolosProd -> MOD .)
    ~               reduce using rule 47 (simbolosProd -> MOD .)
    FLECHAARRIBA    reduce using rule 47 (simbolosProd -> MOD .)
    INTEGER         reduce using rule 47 (simbolosProd -> MOD .)
    LOGICVALUE      reduce using rule 47 (simbolosProd -> MOD .)
    ID              reduce using rule 47 (simbolosProd -> MOD .)


state 92

    (48) simbolosProd -> DIV .
    SR              reduce using rule 48 (simbolosProd -> DIV .)
    LATCH           reduce using rule 48 (simbolosProd -> DIV .)
    REG             reduce using rule 48 (simbolosProd -> DIV .)
    MUX             reduce using rule 48 (simbolosProd -> DIV .)
    (               reduce using rule 48 (simbolosProd -> DIV .)
    ~               reduce using rule 48 (simbolosProd -> DIV .)
    FLECHAARRIBA    reduce using rule 48 (simbolosProd -> DIV .)
    INTEGER         reduce using rule 48 (simbolosProd -> DIV .)
    LOGICVALUE      reduce using rule 48 (simbolosProd -> DIV .)
    ID              reduce using rule 48 (simbolosProd -> DIV .)


state 93

    (49) simbolosProd -> / .
    SR              reduce using rule 49 (simbolosProd -> / .)
    LATCH           reduce using rule 49 (simbolosProd -> / .)
    REG             reduce using rule 49 (simbolosProd -> / .)
    MUX             reduce using rule 49 (simbolosProd -> / .)
    (               reduce using rule 49 (simbolosProd -> / .)
    ~               reduce using rule 49 (simbolosProd -> / .)
    FLECHAARRIBA    reduce using rule 49 (simbolosProd -> / .)
    INTEGER         reduce using rule 49 (simbolosProd -> / .)
    LOGICVALUE      reduce using rule 49 (simbolosProd -> / .)
    ID              reduce using rule 49 (simbolosProd -> / .)


state 94

    (50) simbolosProd -> * .
    SR              reduce using rule 50 (simbolosProd -> * .)
    LATCH           reduce using rule 50 (simbolosProd -> * .)
    REG             reduce using rule 50 (simbolosProd -> * .)
    MUX             reduce using rule 50 (simbolosProd -> * .)
    (               reduce using rule 50 (simbolosProd -> * .)
    ~               reduce using rule 50 (simbolosProd -> * .)
    FLECHAARRIBA    reduce using rule 50 (simbolosProd -> * .)
    INTEGER         reduce using rule 50 (simbolosProd -> * .)
    LOGICVALUE      reduce using rule 50 (simbolosProd -> * .)
    ID              reduce using rule 50 (simbolosProd -> * .)


state 95

    (54) terminoMasMenosR -> simbolosMasMenos . termino
    (45) termino -> . factor
    (46) termino -> . termino simbolosProd factor
    (32) factor -> . SR ( expresion , expresion )
    (33) factor -> . LATCH ( expresion , expresion )
    (34) factor -> . REG ( expresionComaO expresion )
    (35) factor -> . MUX ( expresion , expresion : expresion , expresion , expresion , expresion )
    (36) factor -> . MUX ( expresion : expresion , expresion )
    (37) factor -> . ( expresion )
    (38) factor -> . ~ factor
    (39) factor -> . FLECHAARRIBA factor
    (40) factor -> . INTEGER
    (41) factor -> . LOGICVALUE
    (42) factor -> . ID selector
    SR              shift and go to state 58
    LATCH           shift and go to state 60
    REG             shift and go to state 61
    MUX             shift and go to state 62
    (               shift and go to state 59
    ~               shift and go to state 63
    FLECHAARRIBA    shift and go to state 64
    INTEGER         shift and go to state 65
    LOGICVALUE      shift and go to state 66
    ID              shift and go to state 54

    termino                        shift and go to state 127
    factor                         shift and go to state 57

state 96

    (56) simbolosMasMenos -> - .
    SR              reduce using rule 56 (simbolosMasMenos -> - .)
    LATCH           reduce using rule 56 (simbolosMasMenos -> - .)
    REG             reduce using rule 56 (simbolosMasMenos -> - .)
    MUX             reduce using rule 56 (simbolosMasMenos -> - .)
    (               reduce using rule 56 (simbolosMasMenos -> - .)
    ~               reduce using rule 56 (simbolosMasMenos -> - .)
    FLECHAARRIBA    reduce using rule 56 (simbolosMasMenos -> - .)
    INTEGER         reduce using rule 56 (simbolosMasMenos -> - .)
    LOGICVALUE      reduce using rule 56 (simbolosMasMenos -> - .)
    ID              reduce using rule 56 (simbolosMasMenos -> - .)


state 97

    (57) simbolosMasMenos -> + .
    SR              reduce using rule 57 (simbolosMasMenos -> + .)
    LATCH           reduce using rule 57 (simbolosMasMenos -> + .)
    REG             reduce using rule 57 (simbolosMasMenos -> + .)
    MUX             reduce using rule 57 (simbolosMasMenos -> + .)
    (               reduce using rule 57 (simbolosMasMenos -> + .)
    ~               reduce using rule 57 (simbolosMasMenos -> + .)
    FLECHAARRIBA    reduce using rule 57 (simbolosMasMenos -> + .)
    INTEGER         reduce using rule 57 (simbolosMasMenos -> + .)
    LOGICVALUE      reduce using rule 57 (simbolosMasMenos -> + .)
    ID              reduce using rule 57 (simbolosMasMenos -> + .)


state 98

    (32) factor -> SR ( . expresion , expresion )
    (51) expresion -> . termino terminoMasMenos
    (45) termino -> . factor
    (46) termino -> . termino simbolosProd factor
    (32) factor -> . SR ( expresion , expresion )
    (33) factor -> . LATCH ( expresion , expresion )
    (34) factor -> . REG ( expresionComaO expresion )
    (35) factor -> . MUX ( expresion , expresion : expresion , expresion , expresion , expresion )
    (36) factor -> . MUX ( expresion : expresion , expresion )
    (37) factor -> . ( expresion )
    (38) factor -> . ~ factor
    (39) factor -> . FLECHAARRIBA factor
    (40) factor -> . INTEGER
    (41) factor -> . LOGICVALUE
    (42) factor -> . ID selector
    SR              shift and go to state 58
    LATCH           shift and go to state 60
    REG             shift and go to state 61
    MUX             shift and go to state 62
    (               shift and go to state 59
    ~               shift and go to state 63
    FLECHAARRIBA    shift and go to state 64
    INTEGER         shift and go to state 65
    LOGICVALUE      shift and go to state 66
    ID              shift and go to state 54

    expresion                      shift and go to state 128
    termino                        shift and go to state 56
    factor                         shift and go to state 57

state 99

    (37) factor -> ( expresion . )
    )               shift and go to state 129


state 100

    (33) factor -> LATCH ( . expresion , expresion )
    (51) expresion -> . termino terminoMasMenos
    (45) termino -> . factor
    (46) termino -> . termino simbolosProd factor
    (32) factor -> . SR ( expresion , expresion )
    (33) factor -> . LATCH ( expresion , expresion )
    (34) factor -> . REG ( expresionComaO expresion )
    (35) factor -> . MUX ( expresion , expresion : expresion , expresion , expresion , expresion )
    (36) factor -> . MUX ( expresion : expresion , expresion )
    (37) factor -> . ( expresion )
    (38) factor -> . ~ factor
    (39) factor -> . FLECHAARRIBA factor
    (40) factor -> . INTEGER
    (41) factor -> . LOGICVALUE
    (42) factor -> . ID selector
    SR              shift and go to state 58
    LATCH           shift and go to state 60
    REG             shift and go to state 61
    MUX             shift and go to state 62
    (               shift and go to state 59
    ~               shift and go to state 63
    FLECHAARRIBA    shift and go to state 64
    INTEGER         shift and go to state 65
    LOGICVALUE      shift and go to state 66
    ID              shift and go to state 54

    expresion                      shift and go to state 130
    termino                        shift and go to state 56
    factor                         shift and go to state 57

state 101

    (34) factor -> REG ( . expresionComaO expresion )
    (43) expresionComaO -> . empty
    (44) expresionComaO -> . expresion ,
    (136) empty -> .
    (51) expresion -> . termino terminoMasMenos
    (45) termino -> . factor
    (46) termino -> . termino simbolosProd factor
    (32) factor -> . SR ( expresion , expresion )
    (33) factor -> . LATCH ( expresion , expresion )
    (34) factor -> . REG ( expresionComaO expresion )
    (35) factor -> . MUX ( expresion , expresion : expresion , expresion , expresion , expresion )
    (36) factor -> . MUX ( expresion : expresion , expresion )
    (37) factor -> . ( expresion )
    (38) factor -> . ~ factor
    (39) factor -> . FLECHAARRIBA factor
    (40) factor -> . INTEGER
    (41) factor -> . LOGICVALUE
    (42) factor -> . ID selector
  ! shift/reduce conflict for SR resolved as shift
  ! shift/reduce conflict for LATCH resolved as shift
  ! shift/reduce conflict for REG resolved as shift
  ! shift/reduce conflict for MUX resolved as shift
  ! shift/reduce conflict for ( resolved as shift
  ! shift/reduce conflict for ~ resolved as shift
  ! shift/reduce conflict for FLECHAARRIBA resolved as shift
  ! shift/reduce conflict for INTEGER resolved as shift
  ! shift/reduce conflict for LOGICVALUE resolved as shift
  ! shift/reduce conflict for ID resolved as shift
    SR              shift and go to state 58
    LATCH           shift and go to state 60
    REG             shift and go to state 61
    MUX             shift and go to state 62
    (               shift and go to state 59
    ~               shift and go to state 63
    FLECHAARRIBA    shift and go to state 64
    INTEGER         shift and go to state 65
    LOGICVALUE      shift and go to state 66
    ID              shift and go to state 54

    expresionComaO                 shift and go to state 131
    expresion                      shift and go to state 132
    empty                          shift and go to state 133
    termino                        shift and go to state 56
    factor                         shift and go to state 57

state 102

    (35) factor -> MUX ( . expresion , expresion : expresion , expresion , expresion , expresion )
    (36) factor -> MUX ( . expresion : expresion , expresion )
    (51) expresion -> . termino terminoMasMenos
    (45) termino -> . factor
    (46) termino -> . termino simbolosProd factor
    (32) factor -> . SR ( expresion , expresion )
    (33) factor -> . LATCH ( expresion , expresion )
    (34) factor -> . REG ( expresionComaO expresion )
    (35) factor -> . MUX ( expresion , expresion : expresion , expresion , expresion , expresion )
    (36) factor -> . MUX ( expresion : expresion , expresion )
    (37) factor -> . ( expresion )
    (38) factor -> . ~ factor
    (39) factor -> . FLECHAARRIBA factor
    (40) factor -> . INTEGER
    (41) factor -> . LOGICVALUE
    (42) factor -> . ID selector
    SR              shift and go to state 58
    LATCH           shift and go to state 60
    REG             shift and go to state 61
    MUX             shift and go to state 62
    (               shift and go to state 59
    ~               shift and go to state 63
    FLECHAARRIBA    shift and go to state 64
    INTEGER         shift and go to state 65
    LOGICVALUE      shift and go to state 66
    ID              shift and go to state 54

    expresion                      shift and go to state 134
    termino                        shift and go to state 56
    factor                         shift and go to state 57

state 103

    (38) factor -> ~ factor .
    MOD             reduce using rule 38 (factor -> ~ factor .)
    DIV             reduce using rule 38 (factor -> ~ factor .)
    /               reduce using rule 38 (factor -> ~ factor .)
    *               reduce using rule 38 (factor -> ~ factor .)
    -               reduce using rule 38 (factor -> ~ factor .)
    +               reduce using rule 38 (factor -> ~ factor .)
    ;               reduce using rule 38 (factor -> ~ factor .)
    )               reduce using rule 38 (factor -> ~ factor .)
    ]               reduce using rule 38 (factor -> ~ factor .)
    ,               reduce using rule 38 (factor -> ~ factor .)
    :               reduce using rule 38 (factor -> ~ factor .)
    MAYORIGUAL      reduce using rule 38 (factor -> ~ factor .)
    >               reduce using rule 38 (factor -> ~ factor .)
    MENORIGUAL      reduce using rule 38 (factor -> ~ factor .)
    <               reduce using rule 38 (factor -> ~ factor .)
    #               reduce using rule 38 (factor -> ~ factor .)
    =               reduce using rule 38 (factor -> ~ factor .)
    DOBLEPUNTO      reduce using rule 38 (factor -> ~ factor .)
    END             reduce using rule 38 (factor -> ~ factor .)
    ELSIF           reduce using rule 38 (factor -> ~ factor .)
    ELSE            reduce using rule 38 (factor -> ~ factor .)
    |               reduce using rule 38 (factor -> ~ factor .)
    THEN            reduce using rule 38 (factor -> ~ factor .)
    DO              reduce using rule 38 (factor -> ~ factor .)


state 104

    (39) factor -> FLECHAARRIBA factor .
    MOD             reduce using rule 39 (factor -> FLECHAARRIBA factor .)
    DIV             reduce using rule 39 (factor -> FLECHAARRIBA factor .)
    /               reduce using rule 39 (factor -> FLECHAARRIBA factor .)
    *               reduce using rule 39 (factor -> FLECHAARRIBA factor .)
    -               reduce using rule 39 (factor -> FLECHAARRIBA factor .)
    +               reduce using rule 39 (factor -> FLECHAARRIBA factor .)
    ;               reduce using rule 39 (factor -> FLECHAARRIBA factor .)
    )               reduce using rule 39 (factor -> FLECHAARRIBA factor .)
    ]               reduce using rule 39 (factor -> FLECHAARRIBA factor .)
    ,               reduce using rule 39 (factor -> FLECHAARRIBA factor .)
    :               reduce using rule 39 (factor -> FLECHAARRIBA factor .)
    MAYORIGUAL      reduce using rule 39 (factor -> FLECHAARRIBA factor .)
    >               reduce using rule 39 (factor -> FLECHAARRIBA factor .)
    MENORIGUAL      reduce using rule 39 (factor -> FLECHAARRIBA factor .)
    <               reduce using rule 39 (factor -> FLECHAARRIBA factor .)
    #               reduce using rule 39 (factor -> FLECHAARRIBA factor .)
    =               reduce using rule 39 (factor -> FLECHAARRIBA factor .)
    DOBLEPUNTO      reduce using rule 39 (factor -> FLECHAARRIBA factor .)
    END             reduce using rule 39 (factor -> FLECHAARRIBA factor .)
    ELSIF           reduce using rule 39 (factor -> FLECHAARRIBA factor .)
    ELSE            reduce using rule 39 (factor -> FLECHAARRIBA factor .)
    |               reduce using rule 39 (factor -> FLECHAARRIBA factor .)
    THEN            reduce using rule 39 (factor -> FLECHAARRIBA factor .)
    DO              reduce using rule 39 (factor -> FLECHAARRIBA factor .)


state 105

    (118) declaracionTipo -> TYPE ID simboloPor listaIdParentesis ; declaracionConstanteCONST . tipoFormalIN tipoFormlINOUT declaracionVariableOUT declaracionVariableVAR sentenciaSecuenciaBEGIN END ID
    (123) tipoFormalIN -> . empty
    (124) tipoFormalIN -> . IN tipoFormallistaId
    (136) empty -> .
    IN              shift and go to state 137
    INOUT           reduce using rule 136 (empty -> .)
    OUT             reduce using rule 136 (empty -> .)
    VAR             reduce using rule 136 (empty -> .)
    BEGIN           reduce using rule 136 (empty -> .)
    END             reduce using rule 136 (empty -> .)

    tipoFormalIN                   shift and go to state 135
    empty                          shift and go to state 136

state 106

    (122) listaIdParentesis -> ( listaId ) .
    ;               reduce using rule 122 (listaIdParentesis -> ( listaId ) .)


state 107

    (3) modulo -> MODULE ID ; declaracionTipoPuntoComa declaracionConstanteCONST declaracionVariableIN declaracionVariableINOUT declaracionVariableOUT declaracionVariableVAR sentenciaSecuenciaBEGIN . END ID .
    END             shift and go to state 138


state 108

    (103) sentenciaSecuenciaBEGIN -> empty .
    END             reduce using rule 103 (sentenciaSecuenciaBEGIN -> empty .)


state 109

    (104) sentenciaSecuenciaBEGIN -> BEGIN . sentenciaSecuencia
    (80) sentenciaSecuencia -> . sentencia sentenciaPuntoComa
    (75) sentencia -> . empty
    (76) sentencia -> . sentenciaPara
    (77) sentencia -> . sentenciaSi
    (78) sentencia -> . asignacionUnidad
    (79) sentencia -> . asignacion
    (136) empty -> .
    (74) sentenciaPara -> . FOR ID DOSPUNTOSIGUAL expresion DOBLEPUNTO expresion DO sentenciaSecuencia END
    (67) sentenciaSi -> . IF relacion THEN sentenciaSecuencia sentenciaSiSino sentenciaSiEntonces END
    (135) asignacionUnidad -> . ID selector ( listaExpresiones )
    (58) asignacion -> . ID selector DOSPUNTOSIGUAL condicion | expresion
    (59) asignacion -> . ID selector DOSPUNTOSIGUAL expresion
    ;               reduce using rule 136 (empty -> .)
    END             reduce using rule 136 (empty -> .)
    FOR             shift and go to state 146
    IF              shift and go to state 148
    ID              shift and go to state 147

    sentenciaSecuencia             shift and go to state 139
    sentencia                      shift and go to state 140
    empty                          shift and go to state 141
    sentenciaPara                  shift and go to state 142
    sentenciaSi                    shift and go to state 143
    asignacionUnidad               shift and go to state 144
    asignacion                     shift and go to state 145

state 110

    (102) declaracionVariableVAR -> VAR declaracionVariableRecursivo .
    BEGIN           reduce using rule 102 (declaracionVariableVAR -> VAR declaracionVariableRecursivo .)
    END             reduce using rule 102 (declaracionVariableVAR -> VAR declaracionVariableRecursivo .)


state 111

    (19) declaracionVariable -> listaId : tipo ; .
    ID              reduce using rule 19 (declaracionVariable -> listaId : tipo ; .)
    INOUT           reduce using rule 19 (declaracionVariable -> listaId : tipo ; .)
    OUT             reduce using rule 19 (declaracionVariable -> listaId : tipo ; .)
    VAR             reduce using rule 19 (declaracionVariable -> listaId : tipo ; .)
    BEGIN           reduce using rule 19 (declaracionVariable -> listaId : tipo ; .)
    END             reduce using rule 19 (declaracionVariable -> listaId : tipo ; .)


state 112

    (13) tipo -> expresionCorchete tipoSimple .
    ;               reduce using rule 13 (tipo -> expresionCorchete tipoSimple .)


state 113

    (4) tipoSimple -> ID . conjuntoExpresiones
    (6) conjuntoExpresiones -> . ( listaExpresiones )
    (7) conjuntoExpresiones -> . empty
    (136) empty -> .
    (               shift and go to state 150
    ;               reduce using rule 136 (empty -> .)

    conjuntoExpresiones            shift and go to state 149
    empty                          shift and go to state 151

state 114

    (5) tipoSimple -> tipoBasico .
    ;               reduce using rule 5 (tipoSimple -> tipoBasico .)


state 115

    (8) tipoBasico -> OC .
    ;               reduce using rule 8 (tipoBasico -> OC .)


state 116

    (9) tipoBasico -> TS .
    ;               reduce using rule 9 (tipoBasico -> TS .)


state 117

    (10) tipoBasico -> BIT .
    ;               reduce using rule 10 (tipoBasico -> BIT .)


state 118

    (17) expresionCorcheteR -> expresionCorcheteR [ . expresion ]
    (51) expresion -> . termino terminoMasMenos
    (45) termino -> . factor
    (46) termino -> . termino simbolosProd factor
    (32) factor -> . SR ( expresion , expresion )
    (33) factor -> . LATCH ( expresion , expresion )
    (34) factor -> . REG ( expresionComaO expresion )
    (35) factor -> . MUX ( expresion , expresion : expresion , expresion , expresion , expresion )
    (36) factor -> . MUX ( expresion : expresion , expresion )
    (37) factor -> . ( expresion )
    (38) factor -> . ~ factor
    (39) factor -> . FLECHAARRIBA factor
    (40) factor -> . INTEGER
    (41) factor -> . LOGICVALUE
    (42) factor -> . ID selector
    SR              shift and go to state 58
    LATCH           shift and go to state 60
    REG             shift and go to state 61
    MUX             shift and go to state 62
    (               shift and go to state 59
    ~               shift and go to state 63
    FLECHAARRIBA    shift and go to state 64
    INTEGER         shift and go to state 65
    LOGICVALUE      shift and go to state 66
    ID              shift and go to state 54

    expresion                      shift and go to state 152
    termino                        shift and go to state 56
    factor                         shift and go to state 57

state 119

    (16) expresionCorcheteR -> [ expresion . ]
    ]               shift and go to state 153


state 120

    (24) IDComaR -> IDComaR , ID .
    ,               reduce using rule 24 (IDComaR -> IDComaR , ID .)
    :               reduce using rule 24 (IDComaR -> IDComaR , ID .)
    )               reduce using rule 24 (IDComaR -> IDComaR , ID .)


state 121

    (28) selectorR -> selectorR selectorRR .
    [               reduce using rule 28 (selectorR -> selectorR selectorRR .)
    .               reduce using rule 28 (selectorR -> selectorR selectorRR .)
    MOD             reduce using rule 28 (selectorR -> selectorR selectorRR .)
    DIV             reduce using rule 28 (selectorR -> selectorR selectorRR .)
    /               reduce using rule 28 (selectorR -> selectorR selectorRR .)
    *               reduce using rule 28 (selectorR -> selectorR selectorRR .)
    -               reduce using rule 28 (selectorR -> selectorR selectorRR .)
    +               reduce using rule 28 (selectorR -> selectorR selectorRR .)
    ;               reduce using rule 28 (selectorR -> selectorR selectorRR .)
    )               reduce using rule 28 (selectorR -> selectorR selectorRR .)
    ]               reduce using rule 28 (selectorR -> selectorR selectorRR .)
    ,               reduce using rule 28 (selectorR -> selectorR selectorRR .)
    :               reduce using rule 28 (selectorR -> selectorR selectorRR .)
    MAYORIGUAL      reduce using rule 28 (selectorR -> selectorR selectorRR .)
    >               reduce using rule 28 (selectorR -> selectorR selectorRR .)
    MENORIGUAL      reduce using rule 28 (selectorR -> selectorR selectorRR .)
    <               reduce using rule 28 (selectorR -> selectorR selectorRR .)
    #               reduce using rule 28 (selectorR -> selectorR selectorRR .)
    =               reduce using rule 28 (selectorR -> selectorR selectorRR .)
    DOBLEPUNTO      reduce using rule 28 (selectorR -> selectorR selectorRR .)
    END             reduce using rule 28 (selectorR -> selectorR selectorRR .)
    ELSIF           reduce using rule 28 (selectorR -> selectorR selectorRR .)
    ELSE            reduce using rule 28 (selectorR -> selectorR selectorRR .)
    |               reduce using rule 28 (selectorR -> selectorR selectorRR .)
    THEN            reduce using rule 28 (selectorR -> selectorR selectorRR .)
    DO              reduce using rule 28 (selectorR -> selectorR selectorRR .)
    (               reduce using rule 28 (selectorR -> selectorR selectorRR .)
    DOSPUNTOSIGUAL  reduce using rule 28 (selectorR -> selectorR selectorRR .)


state 122

    (29) selectorRR -> [ expresion . ]
    ]               shift and go to state 154


state 123

    (30) selectorRR -> . INTEGER .
    [               reduce using rule 30 (selectorRR -> . INTEGER .)
    .               reduce using rule 30 (selectorRR -> . INTEGER .)
    MOD             reduce using rule 30 (selectorRR -> . INTEGER .)
    DIV             reduce using rule 30 (selectorRR -> . INTEGER .)
    /               reduce using rule 30 (selectorRR -> . INTEGER .)
    *               reduce using rule 30 (selectorRR -> . INTEGER .)
    -               reduce using rule 30 (selectorRR -> . INTEGER .)
    +               reduce using rule 30 (selectorRR -> . INTEGER .)
    ;               reduce using rule 30 (selectorRR -> . INTEGER .)
    )               reduce using rule 30 (selectorRR -> . INTEGER .)
    ]               reduce using rule 30 (selectorRR -> . INTEGER .)
    ,               reduce using rule 30 (selectorRR -> . INTEGER .)
    :               reduce using rule 30 (selectorRR -> . INTEGER .)
    MAYORIGUAL      reduce using rule 30 (selectorRR -> . INTEGER .)
    >               reduce using rule 30 (selectorRR -> . INTEGER .)
    MENORIGUAL      reduce using rule 30 (selectorRR -> . INTEGER .)
    <               reduce using rule 30 (selectorRR -> . INTEGER .)
    #               reduce using rule 30 (selectorRR -> . INTEGER .)
    =               reduce using rule 30 (selectorRR -> . INTEGER .)
    DOBLEPUNTO      reduce using rule 30 (selectorRR -> . INTEGER .)
    END             reduce using rule 30 (selectorRR -> . INTEGER .)
    ELSIF           reduce using rule 30 (selectorRR -> . INTEGER .)
    ELSE            reduce using rule 30 (selectorRR -> . INTEGER .)
    |               reduce using rule 30 (selectorRR -> . INTEGER .)
    THEN            reduce using rule 30 (selectorRR -> . INTEGER .)
    DO              reduce using rule 30 (selectorRR -> . INTEGER .)
    (               reduce using rule 30 (selectorRR -> . INTEGER .)
    DOSPUNTOSIGUAL  reduce using rule 30 (selectorRR -> . INTEGER .)


state 124

    (31) selectorRR -> . ID .
    [               reduce using rule 31 (selectorRR -> . ID .)
    .               reduce using rule 31 (selectorRR -> . ID .)
    MOD             reduce using rule 31 (selectorRR -> . ID .)
    DIV             reduce using rule 31 (selectorRR -> . ID .)
    /               reduce using rule 31 (selectorRR -> . ID .)
    *               reduce using rule 31 (selectorRR -> . ID .)
    -               reduce using rule 31 (selectorRR -> . ID .)
    +               reduce using rule 31 (selectorRR -> . ID .)
    ;               reduce using rule 31 (selectorRR -> . ID .)
    )               reduce using rule 31 (selectorRR -> . ID .)
    ]               reduce using rule 31 (selectorRR -> . ID .)
    ,               reduce using rule 31 (selectorRR -> . ID .)
    :               reduce using rule 31 (selectorRR -> . ID .)
    MAYORIGUAL      reduce using rule 31 (selectorRR -> . ID .)
    >               reduce using rule 31 (selectorRR -> . ID .)
    MENORIGUAL      reduce using rule 31 (selectorRR -> . ID .)
    <               reduce using rule 31 (selectorRR -> . ID .)
    #               reduce using rule 31 (selectorRR -> . ID .)
    =               reduce using rule 31 (selectorRR -> . ID .)
    DOBLEPUNTO      reduce using rule 31 (selectorRR -> . ID .)
    END             reduce using rule 31 (selectorRR -> . ID .)
    ELSIF           reduce using rule 31 (selectorRR -> . ID .)
    ELSE            reduce using rule 31 (selectorRR -> . ID .)
    |               reduce using rule 31 (selectorRR -> . ID .)
    THEN            reduce using rule 31 (selectorRR -> . ID .)
    DO              reduce using rule 31 (selectorRR -> . ID .)
    (               reduce using rule 31 (selectorRR -> . ID .)
    DOSPUNTOSIGUAL  reduce using rule 31 (selectorRR -> . ID .)


state 125

    (46) termino -> termino simbolosProd factor .
    MOD             reduce using rule 46 (termino -> termino simbolosProd factor .)
    DIV             reduce using rule 46 (termino -> termino simbolosProd factor .)
    /               reduce using rule 46 (termino -> termino simbolosProd factor .)
    *               reduce using rule 46 (termino -> termino simbolosProd factor .)
    -               reduce using rule 46 (termino -> termino simbolosProd factor .)
    +               reduce using rule 46 (termino -> termino simbolosProd factor .)
    ;               reduce using rule 46 (termino -> termino simbolosProd factor .)
    )               reduce using rule 46 (termino -> termino simbolosProd factor .)
    ]               reduce using rule 46 (termino -> termino simbolosProd factor .)
    ,               reduce using rule 46 (termino -> termino simbolosProd factor .)
    :               reduce using rule 46 (termino -> termino simbolosProd factor .)
    MAYORIGUAL      reduce using rule 46 (termino -> termino simbolosProd factor .)
    >               reduce using rule 46 (termino -> termino simbolosProd factor .)
    MENORIGUAL      reduce using rule 46 (termino -> termino simbolosProd factor .)
    <               reduce using rule 46 (termino -> termino simbolosProd factor .)
    #               reduce using rule 46 (termino -> termino simbolosProd factor .)
    =               reduce using rule 46 (termino -> termino simbolosProd factor .)
    DOBLEPUNTO      reduce using rule 46 (termino -> termino simbolosProd factor .)
    END             reduce using rule 46 (termino -> termino simbolosProd factor .)
    ELSIF           reduce using rule 46 (termino -> termino simbolosProd factor .)
    ELSE            reduce using rule 46 (termino -> termino simbolosProd factor .)
    |               reduce using rule 46 (termino -> termino simbolosProd factor .)
    THEN            reduce using rule 46 (termino -> termino simbolosProd factor .)
    DO              reduce using rule 46 (termino -> termino simbolosProd factor .)


state 126

    (55) terminoMasMenosR -> terminoMasMenosR simbolosMasMenos . termino
    (45) termino -> . factor
    (46) termino -> . termino simbolosProd factor
    (32) factor -> . SR ( expresion , expresion )
    (33) factor -> . LATCH ( expresion , expresion )
    (34) factor -> . REG ( expresionComaO expresion )
    (35) factor -> . MUX ( expresion , expresion : expresion , expresion , expresion , expresion )
    (36) factor -> . MUX ( expresion : expresion , expresion )
    (37) factor -> . ( expresion )
    (38) factor -> . ~ factor
    (39) factor -> . FLECHAARRIBA factor
    (40) factor -> . INTEGER
    (41) factor -> . LOGICVALUE
    (42) factor -> . ID selector
    SR              shift and go to state 58
    LATCH           shift and go to state 60
    REG             shift and go to state 61
    MUX             shift and go to state 62
    (               shift and go to state 59
    ~               shift and go to state 63
    FLECHAARRIBA    shift and go to state 64
    INTEGER         shift and go to state 65
    LOGICVALUE      shift and go to state 66
    ID              shift and go to state 54

    termino                        shift and go to state 155
    factor                         shift and go to state 57

state 127

    (54) terminoMasMenosR -> simbolosMasMenos termino .
    (46) termino -> termino . simbolosProd factor
    (47) simbolosProd -> . MOD
    (48) simbolosProd -> . DIV
    (49) simbolosProd -> . /
    (50) simbolosProd -> . *
    -               reduce using rule 54 (terminoMasMenosR -> simbolosMasMenos termino .)
    +               reduce using rule 54 (terminoMasMenosR -> simbolosMasMenos termino .)
    ;               reduce using rule 54 (terminoMasMenosR -> simbolosMasMenos termino .)
    )               reduce using rule 54 (terminoMasMenosR -> simbolosMasMenos termino .)
    ]               reduce using rule 54 (terminoMasMenosR -> simbolosMasMenos termino .)
    ,               reduce using rule 54 (terminoMasMenosR -> simbolosMasMenos termino .)
    :               reduce using rule 54 (terminoMasMenosR -> simbolosMasMenos termino .)
    MAYORIGUAL      reduce using rule 54 (terminoMasMenosR -> simbolosMasMenos termino .)
    >               reduce using rule 54 (terminoMasMenosR -> simbolosMasMenos termino .)
    MENORIGUAL      reduce using rule 54 (terminoMasMenosR -> simbolosMasMenos termino .)
    <               reduce using rule 54 (terminoMasMenosR -> simbolosMasMenos termino .)
    #               reduce using rule 54 (terminoMasMenosR -> simbolosMasMenos termino .)
    =               reduce using rule 54 (terminoMasMenosR -> simbolosMasMenos termino .)
    DOBLEPUNTO      reduce using rule 54 (terminoMasMenosR -> simbolosMasMenos termino .)
    END             reduce using rule 54 (terminoMasMenosR -> simbolosMasMenos termino .)
    ELSIF           reduce using rule 54 (terminoMasMenosR -> simbolosMasMenos termino .)
    ELSE            reduce using rule 54 (terminoMasMenosR -> simbolosMasMenos termino .)
    |               reduce using rule 54 (terminoMasMenosR -> simbolosMasMenos termino .)
    THEN            reduce using rule 54 (terminoMasMenosR -> simbolosMasMenos termino .)
    DO              reduce using rule 54 (terminoMasMenosR -> simbolosMasMenos termino .)
    MOD             shift and go to state 91
    DIV             shift and go to state 92
    /               shift and go to state 93
    *               shift and go to state 94

    simbolosProd                   shift and go to state 88

state 128

    (32) factor -> SR ( expresion . , expresion )
    ,               shift and go to state 156


state 129

    (37) factor -> ( expresion ) .
    MOD             reduce using rule 37 (factor -> ( expresion ) .)
    DIV             reduce using rule 37 (factor -> ( expresion ) .)
    /               reduce using rule 37 (factor -> ( expresion ) .)
    *               reduce using rule 37 (factor -> ( expresion ) .)
    -               reduce using rule 37 (factor -> ( expresion ) .)
    +               reduce using rule 37 (factor -> ( expresion ) .)
    ;               reduce using rule 37 (factor -> ( expresion ) .)
    )               reduce using rule 37 (factor -> ( expresion ) .)
    ]               reduce using rule 37 (factor -> ( expresion ) .)
    ,               reduce using rule 37 (factor -> ( expresion ) .)
    :               reduce using rule 37 (factor -> ( expresion ) .)
    MAYORIGUAL      reduce using rule 37 (factor -> ( expresion ) .)
    >               reduce using rule 37 (factor -> ( expresion ) .)
    MENORIGUAL      reduce using rule 37 (factor -> ( expresion ) .)
    <               reduce using rule 37 (factor -> ( expresion ) .)
    #               reduce using rule 37 (factor -> ( expresion ) .)
    =               reduce using rule 37 (factor -> ( expresion ) .)
    DOBLEPUNTO      reduce using rule 37 (factor -> ( expresion ) .)
    END             reduce using rule 37 (factor -> ( expresion ) .)
    ELSIF           reduce using rule 37 (factor -> ( expresion ) .)
    ELSE            reduce using rule 37 (factor -> ( expresion ) .)
    |               reduce using rule 37 (factor -> ( expresion ) .)
    THEN            reduce using rule 37 (factor -> ( expresion ) .)
    DO              reduce using rule 37 (factor -> ( expresion ) .)


state 130

    (33) factor -> LATCH ( expresion . , expresion )
    ,               shift and go to state 157


state 131

    (34) factor -> REG ( expresionComaO . expresion )
    (51) expresion -> . termino terminoMasMenos
    (45) termino -> . factor
    (46) termino -> . termino simbolosProd factor
    (32) factor -> . SR ( expresion , expresion )
    (33) factor -> . LATCH ( expresion , expresion )
    (34) factor -> . REG ( expresionComaO expresion )
    (35) factor -> . MUX ( expresion , expresion : expresion , expresion , expresion , expresion )
    (36) factor -> . MUX ( expresion : expresion , expresion )
    (37) factor -> . ( expresion )
    (38) factor -> . ~ factor
    (39) factor -> . FLECHAARRIBA factor
    (40) factor -> . INTEGER
    (41) factor -> . LOGICVALUE
    (42) factor -> . ID selector
    SR              shift and go to state 58
    LATCH           shift and go to state 60
    REG             shift and go to state 61
    MUX             shift and go to state 62
    (               shift and go to state 59
    ~               shift and go to state 63
    FLECHAARRIBA    shift and go to state 64
    INTEGER         shift and go to state 65
    LOGICVALUE      shift and go to state 66
    ID              shift and go to state 54

    expresion                      shift and go to state 158
    termino                        shift and go to state 56
    factor                         shift and go to state 57

state 132

    (44) expresionComaO -> expresion . ,
    ,               shift and go to state 159


state 133

    (43) expresionComaO -> empty .
    SR              reduce using rule 43 (expresionComaO -> empty .)
    LATCH           reduce using rule 43 (expresionComaO -> empty .)
    REG             reduce using rule 43 (expresionComaO -> empty .)
    MUX             reduce using rule 43 (expresionComaO -> empty .)
    (               reduce using rule 43 (expresionComaO -> empty .)
    ~               reduce using rule 43 (expresionComaO -> empty .)
    FLECHAARRIBA    reduce using rule 43 (expresionComaO -> empty .)
    INTEGER         reduce using rule 43 (expresionComaO -> empty .)
    LOGICVALUE      reduce using rule 43 (expresionComaO -> empty .)
    ID              reduce using rule 43 (expresionComaO -> empty .)


state 134

    (35) factor -> MUX ( expresion . , expresion : expresion , expresion , expresion , expresion )
    (36) factor -> MUX ( expresion . : expresion , expresion )
    ,               shift and go to state 160
    :               shift and go to state 161


state 135

    (118) declaracionTipo -> TYPE ID simboloPor listaIdParentesis ; declaracionConstanteCONST tipoFormalIN . tipoFormlINOUT declaracionVariableOUT declaracionVariableVAR sentenciaSecuenciaBEGIN END ID
    (129) tipoFormlINOUT -> . empty
    (130) tipoFormlINOUT -> . INOUT tipoFormlBuslistaId
    (136) empty -> .
    INOUT           shift and go to state 164
    OUT             reduce using rule 136 (empty -> .)
    VAR             reduce using rule 136 (empty -> .)
    BEGIN           reduce using rule 136 (empty -> .)
    END             reduce using rule 136 (empty -> .)

    tipoFormlINOUT                 shift and go to state 162
    empty                          shift and go to state 163

state 136

    (123) tipoFormalIN -> empty .
    INOUT           reduce using rule 123 (tipoFormalIN -> empty .)
    OUT             reduce using rule 123 (tipoFormalIN -> empty .)
    VAR             reduce using rule 123 (tipoFormalIN -> empty .)
    BEGIN           reduce using rule 123 (tipoFormalIN -> empty .)
    END             reduce using rule 123 (tipoFormalIN -> empty .)


state 137

    (124) tipoFormalIN -> IN . tipoFormallistaId
    (125) tipoFormallistaId -> . empty
    (126) tipoFormallistaId -> . tipoFormallistaIdR
    (136) empty -> .
    (127) tipoFormallistaIdR -> . listaId : tipoFormal ;
    (128) tipoFormallistaIdR -> . tipoFormallistaIdR listaId : tipoFormal ;
    (20) listaId -> . ID IDComa
    INOUT           reduce using rule 136 (empty -> .)
    OUT             reduce using rule 136 (empty -> .)
    VAR             reduce using rule 136 (empty -> .)
    BEGIN           reduce using rule 136 (empty -> .)
    END             reduce using rule 136 (empty -> .)
    ID              shift and go to state 38

    tipoFormallistaId              shift and go to state 165
    empty                          shift and go to state 166
    tipoFormallistaIdR             shift and go to state 167
    listaId                        shift and go to state 168

state 138

    (3) modulo -> MODULE ID ; declaracionTipoPuntoComa declaracionConstanteCONST declaracionVariableIN declaracionVariableINOUT declaracionVariableOUT declaracionVariableVAR sentenciaSecuenciaBEGIN END . ID .
    ID              shift and go to state 169


state 139

    (104) sentenciaSecuenciaBEGIN -> BEGIN sentenciaSecuencia .
    END             reduce using rule 104 (sentenciaSecuenciaBEGIN -> BEGIN sentenciaSecuencia .)


state 140

    (80) sentenciaSecuencia -> sentencia . sentenciaPuntoComa
    (81) sentenciaPuntoComa -> . empty
    (82) sentenciaPuntoComa -> . sentenciaPuntoComaR
    (136) empty -> .
    (83) sentenciaPuntoComaR -> . ; sentencia
    (84) sentenciaPuntoComaR -> . sentenciaPuntoComaR ; sentencia
    END             reduce using rule 136 (empty -> .)
    ELSIF           reduce using rule 136 (empty -> .)
    ELSE            reduce using rule 136 (empty -> .)
    ;               shift and go to state 173

    sentenciaPuntoComa             shift and go to state 170
    empty                          shift and go to state 171
    sentenciaPuntoComaR            shift and go to state 172

state 141

    (75) sentencia -> empty .
    ;               reduce using rule 75 (sentencia -> empty .)
    END             reduce using rule 75 (sentencia -> empty .)
    ELSIF           reduce using rule 75 (sentencia -> empty .)
    ELSE            reduce using rule 75 (sentencia -> empty .)


state 142

    (76) sentencia -> sentenciaPara .
    ;               reduce using rule 76 (sentencia -> sentenciaPara .)
    END             reduce using rule 76 (sentencia -> sentenciaPara .)
    ELSIF           reduce using rule 76 (sentencia -> sentenciaPara .)
    ELSE            reduce using rule 76 (sentencia -> sentenciaPara .)


state 143

    (77) sentencia -> sentenciaSi .
    ;               reduce using rule 77 (sentencia -> sentenciaSi .)
    END             reduce using rule 77 (sentencia -> sentenciaSi .)
    ELSIF           reduce using rule 77 (sentencia -> sentenciaSi .)
    ELSE            reduce using rule 77 (sentencia -> sentenciaSi .)


state 144

    (78) sentencia -> asignacionUnidad .
    ;               reduce using rule 78 (sentencia -> asignacionUnidad .)
    END             reduce using rule 78 (sentencia -> asignacionUnidad .)
    ELSIF           reduce using rule 78 (sentencia -> asignacionUnidad .)
    ELSE            reduce using rule 78 (sentencia -> asignacionUnidad .)


state 145

    (79) sentencia -> asignacion .
    ;               reduce using rule 79 (sentencia -> asignacion .)
    END             reduce using rule 79 (sentencia -> asignacion .)
    ELSIF           reduce using rule 79 (sentencia -> asignacion .)
    ELSE            reduce using rule 79 (sentencia -> asignacion .)


state 146

    (74) sentenciaPara -> FOR . ID DOSPUNTOSIGUAL expresion DOBLEPUNTO expresion DO sentenciaSecuencia END
    ID              shift and go to state 174


state 147

    (135) asignacionUnidad -> ID . selector ( listaExpresiones )
    (58) asignacion -> ID . selector DOSPUNTOSIGUAL condicion | expresion
    (59) asignacion -> ID . selector DOSPUNTOSIGUAL expresion
    (25) selector -> . empty
    (26) selector -> . selectorR
    (136) empty -> .
    (27) selectorR -> . selectorRR
    (28) selectorR -> . selectorR selectorRR
    (29) selectorRR -> . [ expresion ]
    (30) selectorRR -> . . INTEGER
    (31) selectorRR -> . . ID
    (               reduce using rule 136 (empty -> .)
    DOSPUNTOSIGUAL  reduce using rule 136 (empty -> .)
    [               shift and go to state 84
    .               shift and go to state 85

    selector                       shift and go to state 175
    empty                          shift and go to state 81
    selectorR                      shift and go to state 82
    selectorRR                     shift and go to state 83

state 148

    (67) sentenciaSi -> IF . relacion THEN sentenciaSecuencia sentenciaSiSino sentenciaSiEntonces END
    (61) relacion -> . expresion MAYORIGUAL expresion
    (62) relacion -> . expresion > expresion
    (63) relacion -> . expresion MENORIGUAL expresion
    (64) relacion -> . expresion < expresion
    (65) relacion -> . expresion # expresion
    (66) relacion -> . expresion = expresion
    (51) expresion -> . termino terminoMasMenos
    (45) termino -> . factor
    (46) termino -> . termino simbolosProd factor
    (32) factor -> . SR ( expresion , expresion )
    (33) factor -> . LATCH ( expresion , expresion )
    (34) factor -> . REG ( expresionComaO expresion )
    (35) factor -> . MUX ( expresion , expresion : expresion , expresion , expresion , expresion )
    (36) factor -> . MUX ( expresion : expresion , expresion )
    (37) factor -> . ( expresion )
    (38) factor -> . ~ factor
    (39) factor -> . FLECHAARRIBA factor
    (40) factor -> . INTEGER
    (41) factor -> . LOGICVALUE
    (42) factor -> . ID selector
    SR              shift and go to state 58
    LATCH           shift and go to state 60
    REG             shift and go to state 61
    MUX             shift and go to state 62
    (               shift and go to state 59
    ~               shift and go to state 63
    FLECHAARRIBA    shift and go to state 64
    INTEGER         shift and go to state 65
    LOGICVALUE      shift and go to state 66
    ID              shift and go to state 54

    relacion                       shift and go to state 176
    expresion                      shift and go to state 177
    termino                        shift and go to state 56
    factor                         shift and go to state 57

state 149

    (4) tipoSimple -> ID conjuntoExpresiones .
    ;               reduce using rule 4 (tipoSimple -> ID conjuntoExpresiones .)


state 150

    (6) conjuntoExpresiones -> ( . listaExpresiones )
    (11) listaExpresiones -> . expresion
    (12) listaExpresiones -> . listaExpresiones , expresion
    (51) expresion -> . termino terminoMasMenos
    (45) termino -> . factor
    (46) termino -> . termino simbolosProd factor
    (32) factor -> . SR ( expresion , expresion )
    (33) factor -> . LATCH ( expresion , expresion )
    (34) factor -> . REG ( expresionComaO expresion )
    (35) factor -> . MUX ( expresion , expresion : expresion , expresion , expresion , expresion )
    (36) factor -> . MUX ( expresion : expresion , expresion )
    (37) factor -> . ( expresion )
    (38) factor -> . ~ factor
    (39) factor -> . FLECHAARRIBA factor
    (40) factor -> . INTEGER
    (41) factor -> . LOGICVALUE
    (42) factor -> . ID selector
    SR              shift and go to state 58
    LATCH           shift and go to state 60
    REG             shift and go to state 61
    MUX             shift and go to state 62
    (               shift and go to state 59
    ~               shift and go to state 63
    FLECHAARRIBA    shift and go to state 64
    INTEGER         shift and go to state 65
    LOGICVALUE      shift and go to state 66
    ID              shift and go to state 54

    listaExpresiones               shift and go to state 178
    expresion                      shift and go to state 179
    termino                        shift and go to state 56
    factor                         shift and go to state 57

state 151

    (7) conjuntoExpresiones -> empty .
    ;               reduce using rule 7 (conjuntoExpresiones -> empty .)


state 152

    (17) expresionCorcheteR -> expresionCorcheteR [ expresion . ]
    ]               shift and go to state 180


state 153

    (16) expresionCorcheteR -> [ expresion ] .
    [               reduce using rule 16 (expresionCorcheteR -> [ expresion ] .)
    ID              reduce using rule 16 (expresionCorcheteR -> [ expresion ] .)
    OC              reduce using rule 16 (expresionCorcheteR -> [ expresion ] .)
    TS              reduce using rule 16 (expresionCorcheteR -> [ expresion ] .)
    BIT             reduce using rule 16 (expresionCorcheteR -> [ expresion ] .)


state 154

    (29) selectorRR -> [ expresion ] .
    [               reduce using rule 29 (selectorRR -> [ expresion ] .)
    .               reduce using rule 29 (selectorRR -> [ expresion ] .)
    MOD             reduce using rule 29 (selectorRR -> [ expresion ] .)
    DIV             reduce using rule 29 (selectorRR -> [ expresion ] .)
    /               reduce using rule 29 (selectorRR -> [ expresion ] .)
    *               reduce using rule 29 (selectorRR -> [ expresion ] .)
    -               reduce using rule 29 (selectorRR -> [ expresion ] .)
    +               reduce using rule 29 (selectorRR -> [ expresion ] .)
    ;               reduce using rule 29 (selectorRR -> [ expresion ] .)
    )               reduce using rule 29 (selectorRR -> [ expresion ] .)
    ]               reduce using rule 29 (selectorRR -> [ expresion ] .)
    ,               reduce using rule 29 (selectorRR -> [ expresion ] .)
    :               reduce using rule 29 (selectorRR -> [ expresion ] .)
    MAYORIGUAL      reduce using rule 29 (selectorRR -> [ expresion ] .)
    >               reduce using rule 29 (selectorRR -> [ expresion ] .)
    MENORIGUAL      reduce using rule 29 (selectorRR -> [ expresion ] .)
    <               reduce using rule 29 (selectorRR -> [ expresion ] .)
    #               reduce using rule 29 (selectorRR -> [ expresion ] .)
    =               reduce using rule 29 (selectorRR -> [ expresion ] .)
    DOBLEPUNTO      reduce using rule 29 (selectorRR -> [ expresion ] .)
    END             reduce using rule 29 (selectorRR -> [ expresion ] .)
    ELSIF           reduce using rule 29 (selectorRR -> [ expresion ] .)
    ELSE            reduce using rule 29 (selectorRR -> [ expresion ] .)
    |               reduce using rule 29 (selectorRR -> [ expresion ] .)
    THEN            reduce using rule 29 (selectorRR -> [ expresion ] .)
    DO              reduce using rule 29 (selectorRR -> [ expresion ] .)
    (               reduce using rule 29 (selectorRR -> [ expresion ] .)
    DOSPUNTOSIGUAL  reduce using rule 29 (selectorRR -> [ expresion ] .)


state 155

    (55) terminoMasMenosR -> terminoMasMenosR simbolosMasMenos termino .
    (46) termino -> termino . simbolosProd factor
    (47) simbolosProd -> . MOD
    (48) simbolosProd -> . DIV
    (49) simbolosProd -> . /
    (50) simbolosProd -> . *
    -               reduce using rule 55 (terminoMasMenosR -> terminoMasMenosR simbolosMasMenos termino .)
    +               reduce using rule 55 (terminoMasMenosR -> terminoMasMenosR simbolosMasMenos termino .)
    ;               reduce using rule 55 (terminoMasMenosR -> terminoMasMenosR simbolosMasMenos termino .)
    )               reduce using rule 55 (terminoMasMenosR -> terminoMasMenosR simbolosMasMenos termino .)
    ]               reduce using rule 55 (terminoMasMenosR -> terminoMasMenosR simbolosMasMenos termino .)
    ,               reduce using rule 55 (terminoMasMenosR -> terminoMasMenosR simbolosMasMenos termino .)
    :               reduce using rule 55 (terminoMasMenosR -> terminoMasMenosR simbolosMasMenos termino .)
    MAYORIGUAL      reduce using rule 55 (terminoMasMenosR -> terminoMasMenosR simbolosMasMenos termino .)
    >               reduce using rule 55 (terminoMasMenosR -> terminoMasMenosR simbolosMasMenos termino .)
    MENORIGUAL      reduce using rule 55 (terminoMasMenosR -> terminoMasMenosR simbolosMasMenos termino .)
    <               reduce using rule 55 (terminoMasMenosR -> terminoMasMenosR simbolosMasMenos termino .)
    #               reduce using rule 55 (terminoMasMenosR -> terminoMasMenosR simbolosMasMenos termino .)
    =               reduce using rule 55 (terminoMasMenosR -> terminoMasMenosR simbolosMasMenos termino .)
    DOBLEPUNTO      reduce using rule 55 (terminoMasMenosR -> terminoMasMenosR simbolosMasMenos termino .)
    END             reduce using rule 55 (terminoMasMenosR -> terminoMasMenosR simbolosMasMenos termino .)
    ELSIF           reduce using rule 55 (terminoMasMenosR -> terminoMasMenosR simbolosMasMenos termino .)
    ELSE            reduce using rule 55 (terminoMasMenosR -> terminoMasMenosR simbolosMasMenos termino .)
    |               reduce using rule 55 (terminoMasMenosR -> terminoMasMenosR simbolosMasMenos termino .)
    THEN            reduce using rule 55 (terminoMasMenosR -> terminoMasMenosR simbolosMasMenos termino .)
    DO              reduce using rule 55 (terminoMasMenosR -> terminoMasMenosR simbolosMasMenos termino .)
    MOD             shift and go to state 91
    DIV             shift and go to state 92
    /               shift and go to state 93
    *               shift and go to state 94

    simbolosProd                   shift and go to state 88

state 156

    (32) factor -> SR ( expresion , . expresion )
    (51) expresion -> . termino terminoMasMenos
    (45) termino -> . factor
    (46) termino -> . termino simbolosProd factor
    (32) factor -> . SR ( expresion , expresion )
    (33) factor -> . LATCH ( expresion , expresion )
    (34) factor -> . REG ( expresionComaO expresion )
    (35) factor -> . MUX ( expresion , expresion : expresion , expresion , expresion , expresion )
    (36) factor -> . MUX ( expresion : expresion , expresion )
    (37) factor -> . ( expresion )
    (38) factor -> . ~ factor
    (39) factor -> . FLECHAARRIBA factor
    (40) factor -> . INTEGER
    (41) factor -> . LOGICVALUE
    (42) factor -> . ID selector
    SR              shift and go to state 58
    LATCH           shift and go to state 60
    REG             shift and go to state 61
    MUX             shift and go to state 62
    (               shift and go to state 59
    ~               shift and go to state 63
    FLECHAARRIBA    shift and go to state 64
    INTEGER         shift and go to state 65
    LOGICVALUE      shift and go to state 66
    ID              shift and go to state 54

    expresion                      shift and go to state 181
    termino                        shift and go to state 56
    factor                         shift and go to state 57

state 157

    (33) factor -> LATCH ( expresion , . expresion )
    (51) expresion -> . termino terminoMasMenos
    (45) termino -> . factor
    (46) termino -> . termino simbolosProd factor
    (32) factor -> . SR ( expresion , expresion )
    (33) factor -> . LATCH ( expresion , expresion )
    (34) factor -> . REG ( expresionComaO expresion )
    (35) factor -> . MUX ( expresion , expresion : expresion , expresion , expresion , expresion )
    (36) factor -> . MUX ( expresion : expresion , expresion )
    (37) factor -> . ( expresion )
    (38) factor -> . ~ factor
    (39) factor -> . FLECHAARRIBA factor
    (40) factor -> . INTEGER
    (41) factor -> . LOGICVALUE
    (42) factor -> . ID selector
    SR              shift and go to state 58
    LATCH           shift and go to state 60
    REG             shift and go to state 61
    MUX             shift and go to state 62
    (               shift and go to state 59
    ~               shift and go to state 63
    FLECHAARRIBA    shift and go to state 64
    INTEGER         shift and go to state 65
    LOGICVALUE      shift and go to state 66
    ID              shift and go to state 54

    expresion                      shift and go to state 182
    termino                        shift and go to state 56
    factor                         shift and go to state 57

state 158

    (34) factor -> REG ( expresionComaO expresion . )
    )               shift and go to state 183


state 159

    (44) expresionComaO -> expresion , .
    SR              reduce using rule 44 (expresionComaO -> expresion , .)
    LATCH           reduce using rule 44 (expresionComaO -> expresion , .)
    REG             reduce using rule 44 (expresionComaO -> expresion , .)
    MUX             reduce using rule 44 (expresionComaO -> expresion , .)
    (               reduce using rule 44 (expresionComaO -> expresion , .)
    ~               reduce using rule 44 (expresionComaO -> expresion , .)
    FLECHAARRIBA    reduce using rule 44 (expresionComaO -> expresion , .)
    INTEGER         reduce using rule 44 (expresionComaO -> expresion , .)
    LOGICVALUE      reduce using rule 44 (expresionComaO -> expresion , .)
    ID              reduce using rule 44 (expresionComaO -> expresion , .)


state 160

    (35) factor -> MUX ( expresion , . expresion : expresion , expresion , expresion , expresion )
    (51) expresion -> . termino terminoMasMenos
    (45) termino -> . factor
    (46) termino -> . termino simbolosProd factor
    (32) factor -> . SR ( expresion , expresion )
    (33) factor -> . LATCH ( expresion , expresion )
    (34) factor -> . REG ( expresionComaO expresion )
    (35) factor -> . MUX ( expresion , expresion : expresion , expresion , expresion , expresion )
    (36) factor -> . MUX ( expresion : expresion , expresion )
    (37) factor -> . ( expresion )
    (38) factor -> . ~ factor
    (39) factor -> . FLECHAARRIBA factor
    (40) factor -> . INTEGER
    (41) factor -> . LOGICVALUE
    (42) factor -> . ID selector
    SR              shift and go to state 58
    LATCH           shift and go to state 60
    REG             shift and go to state 61
    MUX             shift and go to state 62
    (               shift and go to state 59
    ~               shift and go to state 63
    FLECHAARRIBA    shift and go to state 64
    INTEGER         shift and go to state 65
    LOGICVALUE      shift and go to state 66
    ID              shift and go to state 54

    expresion                      shift and go to state 184
    termino                        shift and go to state 56
    factor                         shift and go to state 57

state 161

    (36) factor -> MUX ( expresion : . expresion , expresion )
    (51) expresion -> . termino terminoMasMenos
    (45) termino -> . factor
    (46) termino -> . termino simbolosProd factor
    (32) factor -> . SR ( expresion , expresion )
    (33) factor -> . LATCH ( expresion , expresion )
    (34) factor -> . REG ( expresionComaO expresion )
    (35) factor -> . MUX ( expresion , expresion : expresion , expresion , expresion , expresion )
    (36) factor -> . MUX ( expresion : expresion , expresion )
    (37) factor -> . ( expresion )
    (38) factor -> . ~ factor
    (39) factor -> . FLECHAARRIBA factor
    (40) factor -> . INTEGER
    (41) factor -> . LOGICVALUE
    (42) factor -> . ID selector
    SR              shift and go to state 58
    LATCH           shift and go to state 60
    REG             shift and go to state 61
    MUX             shift and go to state 62
    (               shift and go to state 59
    ~               shift and go to state 63
    FLECHAARRIBA    shift and go to state 64
    INTEGER         shift and go to state 65
    LOGICVALUE      shift and go to state 66
    ID              shift and go to state 54

    expresion                      shift and go to state 185
    termino                        shift and go to state 56
    factor                         shift and go to state 57

state 162

    (118) declaracionTipo -> TYPE ID simboloPor listaIdParentesis ; declaracionConstanteCONST tipoFormalIN tipoFormlINOUT . declaracionVariableOUT declaracionVariableVAR sentenciaSecuenciaBEGIN END ID
    (99) declaracionVariableOUT -> . empty
    (100) declaracionVariableOUT -> . OUT declaracionVariableRecursivo
    (136) empty -> .
    OUT             shift and go to state 46
    VAR             reduce using rule 136 (empty -> .)
    BEGIN           reduce using rule 136 (empty -> .)
    END             reduce using rule 136 (empty -> .)

    declaracionVariableOUT         shift and go to state 186
    empty                          shift and go to state 45

state 163

    (129) tipoFormlINOUT -> empty .
    OUT             reduce using rule 129 (tipoFormlINOUT -> empty .)
    VAR             reduce using rule 129 (tipoFormlINOUT -> empty .)
    BEGIN           reduce using rule 129 (tipoFormlINOUT -> empty .)
    END             reduce using rule 129 (tipoFormlINOUT -> empty .)


state 164

    (130) tipoFormlINOUT -> INOUT . tipoFormlBuslistaId
    (131) tipoFormlBuslistaId -> . empty
    (132) tipoFormlBuslistaId -> . tipoFormlBuslistaIdR
    (136) empty -> .
    (133) tipoFormlBuslistaIdR -> . listaId : tipoFormalBus ;
    (134) tipoFormlBuslistaIdR -> . tipoFormlBuslistaIdR listaId : tipoFormalBus ;
    (20) listaId -> . ID IDComa
    OUT             reduce using rule 136 (empty -> .)
    VAR             reduce using rule 136 (empty -> .)
    BEGIN           reduce using rule 136 (empty -> .)
    END             reduce using rule 136 (empty -> .)
    ID              shift and go to state 38

    tipoFormlBuslistaId            shift and go to state 187
    empty                          shift and go to state 188
    tipoFormlBuslistaIdR           shift and go to state 189
    listaId                        shift and go to state 190

state 165

    (124) tipoFormalIN -> IN tipoFormallistaId .
    INOUT           reduce using rule 124 (tipoFormalIN -> IN tipoFormallistaId .)
    OUT             reduce using rule 124 (tipoFormalIN -> IN tipoFormallistaId .)
    VAR             reduce using rule 124 (tipoFormalIN -> IN tipoFormallistaId .)
    BEGIN           reduce using rule 124 (tipoFormalIN -> IN tipoFormallistaId .)
    END             reduce using rule 124 (tipoFormalIN -> IN tipoFormallistaId .)


state 166

    (125) tipoFormallistaId -> empty .
    INOUT           reduce using rule 125 (tipoFormallistaId -> empty .)
    OUT             reduce using rule 125 (tipoFormallistaId -> empty .)
    VAR             reduce using rule 125 (tipoFormallistaId -> empty .)
    BEGIN           reduce using rule 125 (tipoFormallistaId -> empty .)
    END             reduce using rule 125 (tipoFormallistaId -> empty .)


state 167

    (126) tipoFormallistaId -> tipoFormallistaIdR .
    (128) tipoFormallistaIdR -> tipoFormallistaIdR . listaId : tipoFormal ;
    (20) listaId -> . ID IDComa
    INOUT           reduce using rule 126 (tipoFormallistaId -> tipoFormallistaIdR .)
    OUT             reduce using rule 126 (tipoFormallistaId -> tipoFormallistaIdR .)
    VAR             reduce using rule 126 (tipoFormallistaId -> tipoFormallistaIdR .)
    BEGIN           reduce using rule 126 (tipoFormallistaId -> tipoFormallistaIdR .)
    END             reduce using rule 126 (tipoFormallistaId -> tipoFormallistaIdR .)
    ID              shift and go to state 38

    listaId                        shift and go to state 191

state 168

    (127) tipoFormallistaIdR -> listaId . : tipoFormal ;
    :               shift and go to state 192


state 169

    (3) modulo -> MODULE ID ; declaracionTipoPuntoComa declaracionConstanteCONST declaracionVariableIN declaracionVariableINOUT declaracionVariableOUT declaracionVariableVAR sentenciaSecuenciaBEGIN END ID . .
    .               shift and go to state 193


state 170

    (80) sentenciaSecuencia -> sentencia sentenciaPuntoComa .
    END             reduce using rule 80 (sentenciaSecuencia -> sentencia sentenciaPuntoComa .)
    ELSIF           reduce using rule 80 (sentenciaSecuencia -> sentencia sentenciaPuntoComa .)
    ELSE            reduce using rule 80 (sentenciaSecuencia -> sentencia sentenciaPuntoComa .)


state 171

    (81) sentenciaPuntoComa -> empty .
    END             reduce using rule 81 (sentenciaPuntoComa -> empty .)
    ELSIF           reduce using rule 81 (sentenciaPuntoComa -> empty .)
    ELSE            reduce using rule 81 (sentenciaPuntoComa -> empty .)


state 172

    (82) sentenciaPuntoComa -> sentenciaPuntoComaR .
    (84) sentenciaPuntoComaR -> sentenciaPuntoComaR . ; sentencia
    END             reduce using rule 82 (sentenciaPuntoComa -> sentenciaPuntoComaR .)
    ELSIF           reduce using rule 82 (sentenciaPuntoComa -> sentenciaPuntoComaR .)
    ELSE            reduce using rule 82 (sentenciaPuntoComa -> sentenciaPuntoComaR .)
    ;               shift and go to state 194


state 173

    (83) sentenciaPuntoComaR -> ; . sentencia
    (75) sentencia -> . empty
    (76) sentencia -> . sentenciaPara
    (77) sentencia -> . sentenciaSi
    (78) sentencia -> . asignacionUnidad
    (79) sentencia -> . asignacion
    (136) empty -> .
    (74) sentenciaPara -> . FOR ID DOSPUNTOSIGUAL expresion DOBLEPUNTO expresion DO sentenciaSecuencia END
    (67) sentenciaSi -> . IF relacion THEN sentenciaSecuencia sentenciaSiSino sentenciaSiEntonces END
    (135) asignacionUnidad -> . ID selector ( listaExpresiones )
    (58) asignacion -> . ID selector DOSPUNTOSIGUAL condicion | expresion
    (59) asignacion -> . ID selector DOSPUNTOSIGUAL expresion
    ;               reduce using rule 136 (empty -> .)
    END             reduce using rule 136 (empty -> .)
    ELSIF           reduce using rule 136 (empty -> .)
    ELSE            reduce using rule 136 (empty -> .)
    FOR             shift and go to state 146
    IF              shift and go to state 148
    ID              shift and go to state 147

    sentencia                      shift and go to state 195
    empty                          shift and go to state 141
    sentenciaPara                  shift and go to state 142
    sentenciaSi                    shift and go to state 143
    asignacionUnidad               shift and go to state 144
    asignacion                     shift and go to state 145

state 174

    (74) sentenciaPara -> FOR ID . DOSPUNTOSIGUAL expresion DOBLEPUNTO expresion DO sentenciaSecuencia END
    DOSPUNTOSIGUAL  shift and go to state 196


state 175

    (135) asignacionUnidad -> ID selector . ( listaExpresiones )
    (58) asignacion -> ID selector . DOSPUNTOSIGUAL condicion | expresion
    (59) asignacion -> ID selector . DOSPUNTOSIGUAL expresion
    (               shift and go to state 197
    DOSPUNTOSIGUAL  shift and go to state 198


state 176

    (67) sentenciaSi -> IF relacion . THEN sentenciaSecuencia sentenciaSiSino sentenciaSiEntonces END
    THEN            shift and go to state 199


state 177

    (61) relacion -> expresion . MAYORIGUAL expresion
    (62) relacion -> expresion . > expresion
    (63) relacion -> expresion . MENORIGUAL expresion
    (64) relacion -> expresion . < expresion
    (65) relacion -> expresion . # expresion
    (66) relacion -> expresion . = expresion
    MAYORIGUAL      shift and go to state 200
    >               shift and go to state 201
    MENORIGUAL      shift and go to state 202
    <               shift and go to state 203
    #               shift and go to state 204
    =               shift and go to state 205


state 178

    (6) conjuntoExpresiones -> ( listaExpresiones . )
    (12) listaExpresiones -> listaExpresiones . , expresion
    )               shift and go to state 206
    ,               shift and go to state 207


state 179

    (11) listaExpresiones -> expresion .
    )               reduce using rule 11 (listaExpresiones -> expresion .)
    ,               reduce using rule 11 (listaExpresiones -> expresion .)


state 180

    (17) expresionCorcheteR -> expresionCorcheteR [ expresion ] .
    [               reduce using rule 17 (expresionCorcheteR -> expresionCorcheteR [ expresion ] .)
    ID              reduce using rule 17 (expresionCorcheteR -> expresionCorcheteR [ expresion ] .)
    OC              reduce using rule 17 (expresionCorcheteR -> expresionCorcheteR [ expresion ] .)
    TS              reduce using rule 17 (expresionCorcheteR -> expresionCorcheteR [ expresion ] .)
    BIT             reduce using rule 17 (expresionCorcheteR -> expresionCorcheteR [ expresion ] .)


state 181

    (32) factor -> SR ( expresion , expresion . )
    )               shift and go to state 208


state 182

    (33) factor -> LATCH ( expresion , expresion . )
    )               shift and go to state 209


state 183

    (34) factor -> REG ( expresionComaO expresion ) .
    MOD             reduce using rule 34 (factor -> REG ( expresionComaO expresion ) .)
    DIV             reduce using rule 34 (factor -> REG ( expresionComaO expresion ) .)
    /               reduce using rule 34 (factor -> REG ( expresionComaO expresion ) .)
    *               reduce using rule 34 (factor -> REG ( expresionComaO expresion ) .)
    -               reduce using rule 34 (factor -> REG ( expresionComaO expresion ) .)
    +               reduce using rule 34 (factor -> REG ( expresionComaO expresion ) .)
    ;               reduce using rule 34 (factor -> REG ( expresionComaO expresion ) .)
    )               reduce using rule 34 (factor -> REG ( expresionComaO expresion ) .)
    ]               reduce using rule 34 (factor -> REG ( expresionComaO expresion ) .)
    ,               reduce using rule 34 (factor -> REG ( expresionComaO expresion ) .)
    :               reduce using rule 34 (factor -> REG ( expresionComaO expresion ) .)
    MAYORIGUAL      reduce using rule 34 (factor -> REG ( expresionComaO expresion ) .)
    >               reduce using rule 34 (factor -> REG ( expresionComaO expresion ) .)
    MENORIGUAL      reduce using rule 34 (factor -> REG ( expresionComaO expresion ) .)
    <               reduce using rule 34 (factor -> REG ( expresionComaO expresion ) .)
    #               reduce using rule 34 (factor -> REG ( expresionComaO expresion ) .)
    =               reduce using rule 34 (factor -> REG ( expresionComaO expresion ) .)
    DOBLEPUNTO      reduce using rule 34 (factor -> REG ( expresionComaO expresion ) .)
    END             reduce using rule 34 (factor -> REG ( expresionComaO expresion ) .)
    ELSIF           reduce using rule 34 (factor -> REG ( expresionComaO expresion ) .)
    ELSE            reduce using rule 34 (factor -> REG ( expresionComaO expresion ) .)
    |               reduce using rule 34 (factor -> REG ( expresionComaO expresion ) .)
    THEN            reduce using rule 34 (factor -> REG ( expresionComaO expresion ) .)
    DO              reduce using rule 34 (factor -> REG ( expresionComaO expresion ) .)


state 184

    (35) factor -> MUX ( expresion , expresion . : expresion , expresion , expresion , expresion )
    :               shift and go to state 210


state 185

    (36) factor -> MUX ( expresion : expresion . , expresion )
    ,               shift and go to state 211


state 186

    (118) declaracionTipo -> TYPE ID simboloPor listaIdParentesis ; declaracionConstanteCONST tipoFormalIN tipoFormlINOUT declaracionVariableOUT . declaracionVariableVAR sentenciaSecuenciaBEGIN END ID
    (101) declaracionVariableVAR -> . empty
    (102) declaracionVariableVAR -> . VAR declaracionVariableRecursivo
    (136) empty -> .
    VAR             shift and go to state 71
    BEGIN           reduce using rule 136 (empty -> .)
    END             reduce using rule 136 (empty -> .)

    declaracionVariableVAR         shift and go to state 212
    empty                          shift and go to state 70

state 187

    (130) tipoFormlINOUT -> INOUT tipoFormlBuslistaId .
    OUT             reduce using rule 130 (tipoFormlINOUT -> INOUT tipoFormlBuslistaId .)
    VAR             reduce using rule 130 (tipoFormlINOUT -> INOUT tipoFormlBuslistaId .)
    BEGIN           reduce using rule 130 (tipoFormlINOUT -> INOUT tipoFormlBuslistaId .)
    END             reduce using rule 130 (tipoFormlINOUT -> INOUT tipoFormlBuslistaId .)


state 188

    (131) tipoFormlBuslistaId -> empty .
    OUT             reduce using rule 131 (tipoFormlBuslistaId -> empty .)
    VAR             reduce using rule 131 (tipoFormlBuslistaId -> empty .)
    BEGIN           reduce using rule 131 (tipoFormlBuslistaId -> empty .)
    END             reduce using rule 131 (tipoFormlBuslistaId -> empty .)


state 189

    (132) tipoFormlBuslistaId -> tipoFormlBuslistaIdR .
    (134) tipoFormlBuslistaIdR -> tipoFormlBuslistaIdR . listaId : tipoFormalBus ;
    (20) listaId -> . ID IDComa
    OUT             reduce using rule 132 (tipoFormlBuslistaId -> tipoFormlBuslistaIdR .)
    VAR             reduce using rule 132 (tipoFormlBuslistaId -> tipoFormlBuslistaIdR .)
    BEGIN           reduce using rule 132 (tipoFormlBuslistaId -> tipoFormlBuslistaIdR .)
    END             reduce using rule 132 (tipoFormlBuslistaId -> tipoFormlBuslistaIdR .)
    ID              shift and go to state 38

    listaId                        shift and go to state 213

state 190

    (133) tipoFormlBuslistaIdR -> listaId . : tipoFormalBus ;
    :               shift and go to state 214


state 191

    (128) tipoFormallistaIdR -> tipoFormallistaIdR listaId . : tipoFormal ;
    :               shift and go to state 215


state 192

    (127) tipoFormallistaIdR -> listaId : . tipoFormal ;
    (109) tipoFormal -> . expresionCorcheteO BIT
    (110) expresionCorcheteO -> . empty
    (111) expresionCorcheteO -> . expresionCorcheteOR
    (136) empty -> .
    (112) expresionCorcheteOR -> . [ expresionOpcional ]
    (113) expresionCorcheteOR -> . expresionCorcheteOR [ expresionOpcional ]
    BIT             reduce using rule 136 (empty -> .)
    [               shift and go to state 220

    tipoFormal                     shift and go to state 216
    expresionCorcheteO             shift and go to state 217
    empty                          shift and go to state 218
    expresionCorcheteOR            shift and go to state 219

state 193

    (3) modulo -> MODULE ID ; declaracionTipoPuntoComa declaracionConstanteCONST declaracionVariableIN declaracionVariableINOUT declaracionVariableOUT declaracionVariableVAR sentenciaSecuenciaBEGIN END ID . .
    MODULE          reduce using rule 3 (modulo -> MODULE ID ; declaracionTipoPuntoComa declaracionConstanteCONST declaracionVariableIN declaracionVariableINOUT declaracionVariableOUT declaracionVariableVAR sentenciaSecuenciaBEGIN END ID . .)
    $end            reduce using rule 3 (modulo -> MODULE ID ; declaracionTipoPuntoComa declaracionConstanteCONST declaracionVariableIN declaracionVariableINOUT declaracionVariableOUT declaracionVariableVAR sentenciaSecuenciaBEGIN END ID . .)


state 194

    (84) sentenciaPuntoComaR -> sentenciaPuntoComaR ; . sentencia
    (75) sentencia -> . empty
    (76) sentencia -> . sentenciaPara
    (77) sentencia -> . sentenciaSi
    (78) sentencia -> . asignacionUnidad
    (79) sentencia -> . asignacion
    (136) empty -> .
    (74) sentenciaPara -> . FOR ID DOSPUNTOSIGUAL expresion DOBLEPUNTO expresion DO sentenciaSecuencia END
    (67) sentenciaSi -> . IF relacion THEN sentenciaSecuencia sentenciaSiSino sentenciaSiEntonces END
    (135) asignacionUnidad -> . ID selector ( listaExpresiones )
    (58) asignacion -> . ID selector DOSPUNTOSIGUAL condicion | expresion
    (59) asignacion -> . ID selector DOSPUNTOSIGUAL expresion
    ;               reduce using rule 136 (empty -> .)
    END             reduce using rule 136 (empty -> .)
    ELSIF           reduce using rule 136 (empty -> .)
    ELSE            reduce using rule 136 (empty -> .)
    FOR             shift and go to state 146
    IF              shift and go to state 148
    ID              shift and go to state 147

    sentencia                      shift and go to state 221
    empty                          shift and go to state 141
    sentenciaPara                  shift and go to state 142
    sentenciaSi                    shift and go to state 143
    asignacionUnidad               shift and go to state 144
    asignacion                     shift and go to state 145

state 195

    (83) sentenciaPuntoComaR -> ; sentencia .
    ;               reduce using rule 83 (sentenciaPuntoComaR -> ; sentencia .)
    END             reduce using rule 83 (sentenciaPuntoComaR -> ; sentencia .)
    ELSIF           reduce using rule 83 (sentenciaPuntoComaR -> ; sentencia .)
    ELSE            reduce using rule 83 (sentenciaPuntoComaR -> ; sentencia .)


state 196

    (74) sentenciaPara -> FOR ID DOSPUNTOSIGUAL . expresion DOBLEPUNTO expresion DO sentenciaSecuencia END
    (51) expresion -> . termino terminoMasMenos
    (45) termino -> . factor
    (46) termino -> . termino simbolosProd factor
    (32) factor -> . SR ( expresion , expresion )
    (33) factor -> . LATCH ( expresion , expresion )
    (34) factor -> . REG ( expresionComaO expresion )
    (35) factor -> . MUX ( expresion , expresion : expresion , expresion , expresion , expresion )
    (36) factor -> . MUX ( expresion : expresion , expresion )
    (37) factor -> . ( expresion )
    (38) factor -> . ~ factor
    (39) factor -> . FLECHAARRIBA factor
    (40) factor -> . INTEGER
    (41) factor -> . LOGICVALUE
    (42) factor -> . ID selector
    SR              shift and go to state 58
    LATCH           shift and go to state 60
    REG             shift and go to state 61
    MUX             shift and go to state 62
    (               shift and go to state 59
    ~               shift and go to state 63
    FLECHAARRIBA    shift and go to state 64
    INTEGER         shift and go to state 65
    LOGICVALUE      shift and go to state 66
    ID              shift and go to state 54

    expresion                      shift and go to state 222
    termino                        shift and go to state 56
    factor                         shift and go to state 57

state 197

    (135) asignacionUnidad -> ID selector ( . listaExpresiones )
    (11) listaExpresiones -> . expresion
    (12) listaExpresiones -> . listaExpresiones , expresion
    (51) expresion -> . termino terminoMasMenos
    (45) termino -> . factor
    (46) termino -> . termino simbolosProd factor
    (32) factor -> . SR ( expresion , expresion )
    (33) factor -> . LATCH ( expresion , expresion )
    (34) factor -> . REG ( expresionComaO expresion )
    (35) factor -> . MUX ( expresion , expresion : expresion , expresion , expresion , expresion )
    (36) factor -> . MUX ( expresion : expresion , expresion )
    (37) factor -> . ( expresion )
    (38) factor -> . ~ factor
    (39) factor -> . FLECHAARRIBA factor
    (40) factor -> . INTEGER
    (41) factor -> . LOGICVALUE
    (42) factor -> . ID selector
    SR              shift and go to state 58
    LATCH           shift and go to state 60
    REG             shift and go to state 61
    MUX             shift and go to state 62
    (               shift and go to state 59
    ~               shift and go to state 63
    FLECHAARRIBA    shift and go to state 64
    INTEGER         shift and go to state 65
    LOGICVALUE      shift and go to state 66
    ID              shift and go to state 54

    listaExpresiones               shift and go to state 223
    expresion                      shift and go to state 179
    termino                        shift and go to state 56
    factor                         shift and go to state 57

state 198

    (58) asignacion -> ID selector DOSPUNTOSIGUAL . condicion | expresion
    (59) asignacion -> ID selector DOSPUNTOSIGUAL . expresion
    (60) condicion -> . expresion
    (51) expresion -> . termino terminoMasMenos
    (45) termino -> . factor
    (46) termino -> . termino simbolosProd factor
    (32) factor -> . SR ( expresion , expresion )
    (33) factor -> . LATCH ( expresion , expresion )
    (34) factor -> . REG ( expresionComaO expresion )
    (35) factor -> . MUX ( expresion , expresion : expresion , expresion , expresion , expresion )
    (36) factor -> . MUX ( expresion : expresion , expresion )
    (37) factor -> . ( expresion )
    (38) factor -> . ~ factor
    (39) factor -> . FLECHAARRIBA factor
    (40) factor -> . INTEGER
    (41) factor -> . LOGICVALUE
    (42) factor -> . ID selector
    SR              shift and go to state 58
    LATCH           shift and go to state 60
    REG             shift and go to state 61
    MUX             shift and go to state 62
    (               shift and go to state 59
    ~               shift and go to state 63
    FLECHAARRIBA    shift and go to state 64
    INTEGER         shift and go to state 65
    LOGICVALUE      shift and go to state 66
    ID              shift and go to state 54

    condicion                      shift and go to state 224
    expresion                      shift and go to state 225
    termino                        shift and go to state 56
    factor                         shift and go to state 57

state 199

    (67) sentenciaSi -> IF relacion THEN . sentenciaSecuencia sentenciaSiSino sentenciaSiEntonces END
    (80) sentenciaSecuencia -> . sentencia sentenciaPuntoComa
    (75) sentencia -> . empty
    (76) sentencia -> . sentenciaPara
    (77) sentencia -> . sentenciaSi
    (78) sentencia -> . asignacionUnidad
    (79) sentencia -> . asignacion
    (136) empty -> .
    (74) sentenciaPara -> . FOR ID DOSPUNTOSIGUAL expresion DOBLEPUNTO expresion DO sentenciaSecuencia END
    (67) sentenciaSi -> . IF relacion THEN sentenciaSecuencia sentenciaSiSino sentenciaSiEntonces END
    (135) asignacionUnidad -> . ID selector ( listaExpresiones )
    (58) asignacion -> . ID selector DOSPUNTOSIGUAL condicion | expresion
    (59) asignacion -> . ID selector DOSPUNTOSIGUAL expresion
    ;               reduce using rule 136 (empty -> .)
    ELSIF           reduce using rule 136 (empty -> .)
    ELSE            reduce using rule 136 (empty -> .)
    END             reduce using rule 136 (empty -> .)
    FOR             shift and go to state 146
    IF              shift and go to state 148
    ID              shift and go to state 147

    sentenciaSecuencia             shift and go to state 226
    sentencia                      shift and go to state 140
    empty                          shift and go to state 141
    sentenciaPara                  shift and go to state 142
    sentenciaSi                    shift and go to state 143
    asignacionUnidad               shift and go to state 144
    asignacion                     shift and go to state 145

state 200

    (61) relacion -> expresion MAYORIGUAL . expresion
    (51) expresion -> . termino terminoMasMenos
    (45) termino -> . factor
    (46) termino -> . termino simbolosProd factor
    (32) factor -> . SR ( expresion , expresion )
    (33) factor -> . LATCH ( expresion , expresion )
    (34) factor -> . REG ( expresionComaO expresion )
    (35) factor -> . MUX ( expresion , expresion : expresion , expresion , expresion , expresion )
    (36) factor -> . MUX ( expresion : expresion , expresion )
    (37) factor -> . ( expresion )
    (38) factor -> . ~ factor
    (39) factor -> . FLECHAARRIBA factor
    (40) factor -> . INTEGER
    (41) factor -> . LOGICVALUE
    (42) factor -> . ID selector
    SR              shift and go to state 58
    LATCH           shift and go to state 60
    REG             shift and go to state 61
    MUX             shift and go to state 62
    (               shift and go to state 59
    ~               shift and go to state 63
    FLECHAARRIBA    shift and go to state 64
    INTEGER         shift and go to state 65
    LOGICVALUE      shift and go to state 66
    ID              shift and go to state 54

    expresion                      shift and go to state 227
    termino                        shift and go to state 56
    factor                         shift and go to state 57

state 201

    (62) relacion -> expresion > . expresion
    (51) expresion -> . termino terminoMasMenos
    (45) termino -> . factor
    (46) termino -> . termino simbolosProd factor
    (32) factor -> . SR ( expresion , expresion )
    (33) factor -> . LATCH ( expresion , expresion )
    (34) factor -> . REG ( expresionComaO expresion )
    (35) factor -> . MUX ( expresion , expresion : expresion , expresion , expresion , expresion )
    (36) factor -> . MUX ( expresion : expresion , expresion )
    (37) factor -> . ( expresion )
    (38) factor -> . ~ factor
    (39) factor -> . FLECHAARRIBA factor
    (40) factor -> . INTEGER
    (41) factor -> . LOGICVALUE
    (42) factor -> . ID selector
    SR              shift and go to state 58
    LATCH           shift and go to state 60
    REG             shift and go to state 61
    MUX             shift and go to state 62
    (               shift and go to state 59
    ~               shift and go to state 63
    FLECHAARRIBA    shift and go to state 64
    INTEGER         shift and go to state 65
    LOGICVALUE      shift and go to state 66
    ID              shift and go to state 54

    expresion                      shift and go to state 228
    termino                        shift and go to state 56
    factor                         shift and go to state 57

state 202

    (63) relacion -> expresion MENORIGUAL . expresion
    (51) expresion -> . termino terminoMasMenos
    (45) termino -> . factor
    (46) termino -> . termino simbolosProd factor
    (32) factor -> . SR ( expresion , expresion )
    (33) factor -> . LATCH ( expresion , expresion )
    (34) factor -> . REG ( expresionComaO expresion )
    (35) factor -> . MUX ( expresion , expresion : expresion , expresion , expresion , expresion )
    (36) factor -> . MUX ( expresion : expresion , expresion )
    (37) factor -> . ( expresion )
    (38) factor -> . ~ factor
    (39) factor -> . FLECHAARRIBA factor
    (40) factor -> . INTEGER
    (41) factor -> . LOGICVALUE
    (42) factor -> . ID selector
    SR              shift and go to state 58
    LATCH           shift and go to state 60
    REG             shift and go to state 61
    MUX             shift and go to state 62
    (               shift and go to state 59
    ~               shift and go to state 63
    FLECHAARRIBA    shift and go to state 64
    INTEGER         shift and go to state 65
    LOGICVALUE      shift and go to state 66
    ID              shift and go to state 54

    expresion                      shift and go to state 229
    termino                        shift and go to state 56
    factor                         shift and go to state 57

state 203

    (64) relacion -> expresion < . expresion
    (51) expresion -> . termino terminoMasMenos
    (45) termino -> . factor
    (46) termino -> . termino simbolosProd factor
    (32) factor -> . SR ( expresion , expresion )
    (33) factor -> . LATCH ( expresion , expresion )
    (34) factor -> . REG ( expresionComaO expresion )
    (35) factor -> . MUX ( expresion , expresion : expresion , expresion , expresion , expresion )
    (36) factor -> . MUX ( expresion : expresion , expresion )
    (37) factor -> . ( expresion )
    (38) factor -> . ~ factor
    (39) factor -> . FLECHAARRIBA factor
    (40) factor -> . INTEGER
    (41) factor -> . LOGICVALUE
    (42) factor -> . ID selector
    SR              shift and go to state 58
    LATCH           shift and go to state 60
    REG             shift and go to state 61
    MUX             shift and go to state 62
    (               shift and go to state 59
    ~               shift and go to state 63
    FLECHAARRIBA    shift and go to state 64
    INTEGER         shift and go to state 65
    LOGICVALUE      shift and go to state 66
    ID              shift and go to state 54

    expresion                      shift and go to state 230
    termino                        shift and go to state 56
    factor                         shift and go to state 57

state 204

    (65) relacion -> expresion # . expresion
    (51) expresion -> . termino terminoMasMenos
    (45) termino -> . factor
    (46) termino -> . termino simbolosProd factor
    (32) factor -> . SR ( expresion , expresion )
    (33) factor -> . LATCH ( expresion , expresion )
    (34) factor -> . REG ( expresionComaO expresion )
    (35) factor -> . MUX ( expresion , expresion : expresion , expresion , expresion , expresion )
    (36) factor -> . MUX ( expresion : expresion , expresion )
    (37) factor -> . ( expresion )
    (38) factor -> . ~ factor
    (39) factor -> . FLECHAARRIBA factor
    (40) factor -> . INTEGER
    (41) factor -> . LOGICVALUE
    (42) factor -> . ID selector
    SR              shift and go to state 58
    LATCH           shift and go to state 60
    REG             shift and go to state 61
    MUX             shift and go to state 62
    (               shift and go to state 59
    ~               shift and go to state 63
    FLECHAARRIBA    shift and go to state 64
    INTEGER         shift and go to state 65
    LOGICVALUE      shift and go to state 66
    ID              shift and go to state 54

    expresion                      shift and go to state 231
    termino                        shift and go to state 56
    factor                         shift and go to state 57

state 205

    (66) relacion -> expresion = . expresion
    (51) expresion -> . termino terminoMasMenos
    (45) termino -> . factor
    (46) termino -> . termino simbolosProd factor
    (32) factor -> . SR ( expresion , expresion )
    (33) factor -> . LATCH ( expresion , expresion )
    (34) factor -> . REG ( expresionComaO expresion )
    (35) factor -> . MUX ( expresion , expresion : expresion , expresion , expresion , expresion )
    (36) factor -> . MUX ( expresion : expresion , expresion )
    (37) factor -> . ( expresion )
    (38) factor -> . ~ factor
    (39) factor -> . FLECHAARRIBA factor
    (40) factor -> . INTEGER
    (41) factor -> . LOGICVALUE
    (42) factor -> . ID selector
    SR              shift and go to state 58
    LATCH           shift and go to state 60
    REG             shift and go to state 61
    MUX             shift and go to state 62
    (               shift and go to state 59
    ~               shift and go to state 63
    FLECHAARRIBA    shift and go to state 64
    INTEGER         shift and go to state 65
    LOGICVALUE      shift and go to state 66
    ID              shift and go to state 54

    expresion                      shift and go to state 232
    termino                        shift and go to state 56
    factor                         shift and go to state 57

state 206

    (6) conjuntoExpresiones -> ( listaExpresiones ) .
    ;               reduce using rule 6 (conjuntoExpresiones -> ( listaExpresiones ) .)


state 207

    (12) listaExpresiones -> listaExpresiones , . expresion
    (51) expresion -> . termino terminoMasMenos
    (45) termino -> . factor
    (46) termino -> . termino simbolosProd factor
    (32) factor -> . SR ( expresion , expresion )
    (33) factor -> . LATCH ( expresion , expresion )
    (34) factor -> . REG ( expresionComaO expresion )
    (35) factor -> . MUX ( expresion , expresion : expresion , expresion , expresion , expresion )
    (36) factor -> . MUX ( expresion : expresion , expresion )
    (37) factor -> . ( expresion )
    (38) factor -> . ~ factor
    (39) factor -> . FLECHAARRIBA factor
    (40) factor -> . INTEGER
    (41) factor -> . LOGICVALUE
    (42) factor -> . ID selector
    SR              shift and go to state 58
    LATCH           shift and go to state 60
    REG             shift and go to state 61
    MUX             shift and go to state 62
    (               shift and go to state 59
    ~               shift and go to state 63
    FLECHAARRIBA    shift and go to state 64
    INTEGER         shift and go to state 65
    LOGICVALUE      shift and go to state 66
    ID              shift and go to state 54

    expresion                      shift and go to state 233
    termino                        shift and go to state 56
    factor                         shift and go to state 57

state 208

    (32) factor -> SR ( expresion , expresion ) .
    MOD             reduce using rule 32 (factor -> SR ( expresion , expresion ) .)
    DIV             reduce using rule 32 (factor -> SR ( expresion , expresion ) .)
    /               reduce using rule 32 (factor -> SR ( expresion , expresion ) .)
    *               reduce using rule 32 (factor -> SR ( expresion , expresion ) .)
    -               reduce using rule 32 (factor -> SR ( expresion , expresion ) .)
    +               reduce using rule 32 (factor -> SR ( expresion , expresion ) .)
    ;               reduce using rule 32 (factor -> SR ( expresion , expresion ) .)
    )               reduce using rule 32 (factor -> SR ( expresion , expresion ) .)
    ]               reduce using rule 32 (factor -> SR ( expresion , expresion ) .)
    ,               reduce using rule 32 (factor -> SR ( expresion , expresion ) .)
    :               reduce using rule 32 (factor -> SR ( expresion , expresion ) .)
    MAYORIGUAL      reduce using rule 32 (factor -> SR ( expresion , expresion ) .)
    >               reduce using rule 32 (factor -> SR ( expresion , expresion ) .)
    MENORIGUAL      reduce using rule 32 (factor -> SR ( expresion , expresion ) .)
    <               reduce using rule 32 (factor -> SR ( expresion , expresion ) .)
    #               reduce using rule 32 (factor -> SR ( expresion , expresion ) .)
    =               reduce using rule 32 (factor -> SR ( expresion , expresion ) .)
    DOBLEPUNTO      reduce using rule 32 (factor -> SR ( expresion , expresion ) .)
    END             reduce using rule 32 (factor -> SR ( expresion , expresion ) .)
    ELSIF           reduce using rule 32 (factor -> SR ( expresion , expresion ) .)
    ELSE            reduce using rule 32 (factor -> SR ( expresion , expresion ) .)
    |               reduce using rule 32 (factor -> SR ( expresion , expresion ) .)
    THEN            reduce using rule 32 (factor -> SR ( expresion , expresion ) .)
    DO              reduce using rule 32 (factor -> SR ( expresion , expresion ) .)


state 209

    (33) factor -> LATCH ( expresion , expresion ) .
    MOD             reduce using rule 33 (factor -> LATCH ( expresion , expresion ) .)
    DIV             reduce using rule 33 (factor -> LATCH ( expresion , expresion ) .)
    /               reduce using rule 33 (factor -> LATCH ( expresion , expresion ) .)
    *               reduce using rule 33 (factor -> LATCH ( expresion , expresion ) .)
    -               reduce using rule 33 (factor -> LATCH ( expresion , expresion ) .)
    +               reduce using rule 33 (factor -> LATCH ( expresion , expresion ) .)
    ;               reduce using rule 33 (factor -> LATCH ( expresion , expresion ) .)
    )               reduce using rule 33 (factor -> LATCH ( expresion , expresion ) .)
    ]               reduce using rule 33 (factor -> LATCH ( expresion , expresion ) .)
    ,               reduce using rule 33 (factor -> LATCH ( expresion , expresion ) .)
    :               reduce using rule 33 (factor -> LATCH ( expresion , expresion ) .)
    MAYORIGUAL      reduce using rule 33 (factor -> LATCH ( expresion , expresion ) .)
    >               reduce using rule 33 (factor -> LATCH ( expresion , expresion ) .)
    MENORIGUAL      reduce using rule 33 (factor -> LATCH ( expresion , expresion ) .)
    <               reduce using rule 33 (factor -> LATCH ( expresion , expresion ) .)
    #               reduce using rule 33 (factor -> LATCH ( expresion , expresion ) .)
    =               reduce using rule 33 (factor -> LATCH ( expresion , expresion ) .)
    DOBLEPUNTO      reduce using rule 33 (factor -> LATCH ( expresion , expresion ) .)
    END             reduce using rule 33 (factor -> LATCH ( expresion , expresion ) .)
    ELSIF           reduce using rule 33 (factor -> LATCH ( expresion , expresion ) .)
    ELSE            reduce using rule 33 (factor -> LATCH ( expresion , expresion ) .)
    |               reduce using rule 33 (factor -> LATCH ( expresion , expresion ) .)
    THEN            reduce using rule 33 (factor -> LATCH ( expresion , expresion ) .)
    DO              reduce using rule 33 (factor -> LATCH ( expresion , expresion ) .)


state 210

    (35) factor -> MUX ( expresion , expresion : . expresion , expresion , expresion , expresion )
    (51) expresion -> . termino terminoMasMenos
    (45) termino -> . factor
    (46) termino -> . termino simbolosProd factor
    (32) factor -> . SR ( expresion , expresion )
    (33) factor -> . LATCH ( expresion , expresion )
    (34) factor -> . REG ( expresionComaO expresion )
    (35) factor -> . MUX ( expresion , expresion : expresion , expresion , expresion , expresion )
    (36) factor -> . MUX ( expresion : expresion , expresion )
    (37) factor -> . ( expresion )
    (38) factor -> . ~ factor
    (39) factor -> . FLECHAARRIBA factor
    (40) factor -> . INTEGER
    (41) factor -> . LOGICVALUE
    (42) factor -> . ID selector
    SR              shift and go to state 58
    LATCH           shift and go to state 60
    REG             shift and go to state 61
    MUX             shift and go to state 62
    (               shift and go to state 59
    ~               shift and go to state 63
    FLECHAARRIBA    shift and go to state 64
    INTEGER         shift and go to state 65
    LOGICVALUE      shift and go to state 66
    ID              shift and go to state 54

    expresion                      shift and go to state 234
    termino                        shift and go to state 56
    factor                         shift and go to state 57

state 211

    (36) factor -> MUX ( expresion : expresion , . expresion )
    (51) expresion -> . termino terminoMasMenos
    (45) termino -> . factor
    (46) termino -> . termino simbolosProd factor
    (32) factor -> . SR ( expresion , expresion )
    (33) factor -> . LATCH ( expresion , expresion )
    (34) factor -> . REG ( expresionComaO expresion )
    (35) factor -> . MUX ( expresion , expresion : expresion , expresion , expresion , expresion )
    (36) factor -> . MUX ( expresion : expresion , expresion )
    (37) factor -> . ( expresion )
    (38) factor -> . ~ factor
    (39) factor -> . FLECHAARRIBA factor
    (40) factor -> . INTEGER
    (41) factor -> . LOGICVALUE
    (42) factor -> . ID selector
    SR              shift and go to state 58
    LATCH           shift and go to state 60
    REG             shift and go to state 61
    MUX             shift and go to state 62
    (               shift and go to state 59
    ~               shift and go to state 63
    FLECHAARRIBA    shift and go to state 64
    INTEGER         shift and go to state 65
    LOGICVALUE      shift and go to state 66
    ID              shift and go to state 54

    expresion                      shift and go to state 235
    termino                        shift and go to state 56
    factor                         shift and go to state 57

state 212

    (118) declaracionTipo -> TYPE ID simboloPor listaIdParentesis ; declaracionConstanteCONST tipoFormalIN tipoFormlINOUT declaracionVariableOUT declaracionVariableVAR . sentenciaSecuenciaBEGIN END ID
    (103) sentenciaSecuenciaBEGIN -> . empty
    (104) sentenciaSecuenciaBEGIN -> . BEGIN sentenciaSecuencia
    (136) empty -> .
    BEGIN           shift and go to state 109
    END             reduce using rule 136 (empty -> .)

    sentenciaSecuenciaBEGIN        shift and go to state 236
    empty                          shift and go to state 108

state 213

    (134) tipoFormlBuslistaIdR -> tipoFormlBuslistaIdR listaId . : tipoFormalBus ;
    :               shift and go to state 237


state 214

    (133) tipoFormlBuslistaIdR -> listaId : . tipoFormalBus ;
    (116) tipoFormalBus -> . expresionCorcheteO OC
    (117) tipoFormalBus -> . expresionCorcheteO TS
    (110) expresionCorcheteO -> . empty
    (111) expresionCorcheteO -> . expresionCorcheteOR
    (136) empty -> .
    (112) expresionCorcheteOR -> . [ expresionOpcional ]
    (113) expresionCorcheteOR -> . expresionCorcheteOR [ expresionOpcional ]
    OC              reduce using rule 136 (empty -> .)
    TS              reduce using rule 136 (empty -> .)
    [               shift and go to state 220

    tipoFormalBus                  shift and go to state 238
    expresionCorcheteO             shift and go to state 239
    empty                          shift and go to state 218
    expresionCorcheteOR            shift and go to state 219

state 215

    (128) tipoFormallistaIdR -> tipoFormallistaIdR listaId : . tipoFormal ;
    (109) tipoFormal -> . expresionCorcheteO BIT
    (110) expresionCorcheteO -> . empty
    (111) expresionCorcheteO -> . expresionCorcheteOR
    (136) empty -> .
    (112) expresionCorcheteOR -> . [ expresionOpcional ]
    (113) expresionCorcheteOR -> . expresionCorcheteOR [ expresionOpcional ]
    BIT             reduce using rule 136 (empty -> .)
    [               shift and go to state 220

    tipoFormal                     shift and go to state 240
    expresionCorcheteO             shift and go to state 217
    empty                          shift and go to state 218
    expresionCorcheteOR            shift and go to state 219

state 216

    (127) tipoFormallistaIdR -> listaId : tipoFormal . ;
    ;               shift and go to state 241


state 217

    (109) tipoFormal -> expresionCorcheteO . BIT
    BIT             shift and go to state 242


state 218

    (110) expresionCorcheteO -> empty .
    BIT             reduce using rule 110 (expresionCorcheteO -> empty .)
    OC              reduce using rule 110 (expresionCorcheteO -> empty .)
    TS              reduce using rule 110 (expresionCorcheteO -> empty .)


state 219

    (111) expresionCorcheteO -> expresionCorcheteOR .
    (113) expresionCorcheteOR -> expresionCorcheteOR . [ expresionOpcional ]
    BIT             reduce using rule 111 (expresionCorcheteO -> expresionCorcheteOR .)
    OC              reduce using rule 111 (expresionCorcheteO -> expresionCorcheteOR .)
    TS              reduce using rule 111 (expresionCorcheteO -> expresionCorcheteOR .)
    [               shift and go to state 243


state 220

    (112) expresionCorcheteOR -> [ . expresionOpcional ]
    (114) expresionOpcional -> . empty
    (115) expresionOpcional -> . expresion
    (136) empty -> .
    (51) expresion -> . termino terminoMasMenos
    (45) termino -> . factor
    (46) termino -> . termino simbolosProd factor
    (32) factor -> . SR ( expresion , expresion )
    (33) factor -> . LATCH ( expresion , expresion )
    (34) factor -> . REG ( expresionComaO expresion )
    (35) factor -> . MUX ( expresion , expresion : expresion , expresion , expresion , expresion )
    (36) factor -> . MUX ( expresion : expresion , expresion )
    (37) factor -> . ( expresion )
    (38) factor -> . ~ factor
    (39) factor -> . FLECHAARRIBA factor
    (40) factor -> . INTEGER
    (41) factor -> . LOGICVALUE
    (42) factor -> . ID selector
    ]               reduce using rule 136 (empty -> .)
    SR              shift and go to state 58
    LATCH           shift and go to state 60
    REG             shift and go to state 61
    MUX             shift and go to state 62
    (               shift and go to state 59
    ~               shift and go to state 63
    FLECHAARRIBA    shift and go to state 64
    INTEGER         shift and go to state 65
    LOGICVALUE      shift and go to state 66
    ID              shift and go to state 54

    expresionOpcional              shift and go to state 244
    empty                          shift and go to state 245
    expresion                      shift and go to state 246
    termino                        shift and go to state 56
    factor                         shift and go to state 57

state 221

    (84) sentenciaPuntoComaR -> sentenciaPuntoComaR ; sentencia .
    ;               reduce using rule 84 (sentenciaPuntoComaR -> sentenciaPuntoComaR ; sentencia .)
    END             reduce using rule 84 (sentenciaPuntoComaR -> sentenciaPuntoComaR ; sentencia .)
    ELSIF           reduce using rule 84 (sentenciaPuntoComaR -> sentenciaPuntoComaR ; sentencia .)
    ELSE            reduce using rule 84 (sentenciaPuntoComaR -> sentenciaPuntoComaR ; sentencia .)


state 222

    (74) sentenciaPara -> FOR ID DOSPUNTOSIGUAL expresion . DOBLEPUNTO expresion DO sentenciaSecuencia END
    DOBLEPUNTO      shift and go to state 247


state 223

    (135) asignacionUnidad -> ID selector ( listaExpresiones . )
    (12) listaExpresiones -> listaExpresiones . , expresion
    )               shift and go to state 248
    ,               shift and go to state 207


state 224

    (58) asignacion -> ID selector DOSPUNTOSIGUAL condicion . | expresion
    |               shift and go to state 249


state 225

    (59) asignacion -> ID selector DOSPUNTOSIGUAL expresion .
    (60) condicion -> expresion .
    ;               reduce using rule 59 (asignacion -> ID selector DOSPUNTOSIGUAL expresion .)
    END             reduce using rule 59 (asignacion -> ID selector DOSPUNTOSIGUAL expresion .)
    ELSIF           reduce using rule 59 (asignacion -> ID selector DOSPUNTOSIGUAL expresion .)
    ELSE            reduce using rule 59 (asignacion -> ID selector DOSPUNTOSIGUAL expresion .)
    |               reduce using rule 60 (condicion -> expresion .)


state 226

    (67) sentenciaSi -> IF relacion THEN sentenciaSecuencia . sentenciaSiSino sentenciaSiEntonces END
    (68) sentenciaSiSino -> . empty
    (69) sentenciaSiSino -> . sentenciaSiSinoR
    (136) empty -> .
    (70) sentenciaSiSinoR -> . ELSIF relacion THEN sentenciaSecuencia
    (71) sentenciaSiSinoR -> . sentenciaSiSinoR ELSIF relacion THEN sentenciaSecuencia
    ELSE            reduce using rule 136 (empty -> .)
    END             reduce using rule 136 (empty -> .)
    ELSIF           shift and go to state 253

    sentenciaSiSino                shift and go to state 250
    empty                          shift and go to state 251
    sentenciaSiSinoR               shift and go to state 252

state 227

    (61) relacion -> expresion MAYORIGUAL expresion .
    THEN            reduce using rule 61 (relacion -> expresion MAYORIGUAL expresion .)


state 228

    (62) relacion -> expresion > expresion .
    THEN            reduce using rule 62 (relacion -> expresion > expresion .)


state 229

    (63) relacion -> expresion MENORIGUAL expresion .
    THEN            reduce using rule 63 (relacion -> expresion MENORIGUAL expresion .)


state 230

    (64) relacion -> expresion < expresion .
    THEN            reduce using rule 64 (relacion -> expresion < expresion .)


state 231

    (65) relacion -> expresion # expresion .
    THEN            reduce using rule 65 (relacion -> expresion # expresion .)


state 232

    (66) relacion -> expresion = expresion .
    THEN            reduce using rule 66 (relacion -> expresion = expresion .)


state 233

    (12) listaExpresiones -> listaExpresiones , expresion .
    )               reduce using rule 12 (listaExpresiones -> listaExpresiones , expresion .)
    ,               reduce using rule 12 (listaExpresiones -> listaExpresiones , expresion .)


state 234

    (35) factor -> MUX ( expresion , expresion : expresion . , expresion , expresion , expresion )
    ,               shift and go to state 254


state 235

    (36) factor -> MUX ( expresion : expresion , expresion . )
    )               shift and go to state 255


state 236

    (118) declaracionTipo -> TYPE ID simboloPor listaIdParentesis ; declaracionConstanteCONST tipoFormalIN tipoFormlINOUT declaracionVariableOUT declaracionVariableVAR sentenciaSecuenciaBEGIN . END ID
    END             shift and go to state 256


state 237

    (134) tipoFormlBuslistaIdR -> tipoFormlBuslistaIdR listaId : . tipoFormalBus ;
    (116) tipoFormalBus -> . expresionCorcheteO OC
    (117) tipoFormalBus -> . expresionCorcheteO TS
    (110) expresionCorcheteO -> . empty
    (111) expresionCorcheteO -> . expresionCorcheteOR
    (136) empty -> .
    (112) expresionCorcheteOR -> . [ expresionOpcional ]
    (113) expresionCorcheteOR -> . expresionCorcheteOR [ expresionOpcional ]
    OC              reduce using rule 136 (empty -> .)
    TS              reduce using rule 136 (empty -> .)
    [               shift and go to state 220

    tipoFormalBus                  shift and go to state 257
    expresionCorcheteO             shift and go to state 239
    empty                          shift and go to state 218
    expresionCorcheteOR            shift and go to state 219

state 238

    (133) tipoFormlBuslistaIdR -> listaId : tipoFormalBus . ;
    ;               shift and go to state 258


state 239

    (116) tipoFormalBus -> expresionCorcheteO . OC
    (117) tipoFormalBus -> expresionCorcheteO . TS
    OC              shift and go to state 259
    TS              shift and go to state 260


state 240

    (128) tipoFormallistaIdR -> tipoFormallistaIdR listaId : tipoFormal . ;
    ;               shift and go to state 261


state 241

    (127) tipoFormallistaIdR -> listaId : tipoFormal ; .
    ID              reduce using rule 127 (tipoFormallistaIdR -> listaId : tipoFormal ; .)
    INOUT           reduce using rule 127 (tipoFormallistaIdR -> listaId : tipoFormal ; .)
    OUT             reduce using rule 127 (tipoFormallistaIdR -> listaId : tipoFormal ; .)
    VAR             reduce using rule 127 (tipoFormallistaIdR -> listaId : tipoFormal ; .)
    BEGIN           reduce using rule 127 (tipoFormallistaIdR -> listaId : tipoFormal ; .)
    END             reduce using rule 127 (tipoFormallistaIdR -> listaId : tipoFormal ; .)


state 242

    (109) tipoFormal -> expresionCorcheteO BIT .
    ;               reduce using rule 109 (tipoFormal -> expresionCorcheteO BIT .)


state 243

    (113) expresionCorcheteOR -> expresionCorcheteOR [ . expresionOpcional ]
    (114) expresionOpcional -> . empty
    (115) expresionOpcional -> . expresion
    (136) empty -> .
    (51) expresion -> . termino terminoMasMenos
    (45) termino -> . factor
    (46) termino -> . termino simbolosProd factor
    (32) factor -> . SR ( expresion , expresion )
    (33) factor -> . LATCH ( expresion , expresion )
    (34) factor -> . REG ( expresionComaO expresion )
    (35) factor -> . MUX ( expresion , expresion : expresion , expresion , expresion , expresion )
    (36) factor -> . MUX ( expresion : expresion , expresion )
    (37) factor -> . ( expresion )
    (38) factor -> . ~ factor
    (39) factor -> . FLECHAARRIBA factor
    (40) factor -> . INTEGER
    (41) factor -> . LOGICVALUE
    (42) factor -> . ID selector
    ]               reduce using rule 136 (empty -> .)
    SR              shift and go to state 58
    LATCH           shift and go to state 60
    REG             shift and go to state 61
    MUX             shift and go to state 62
    (               shift and go to state 59
    ~               shift and go to state 63
    FLECHAARRIBA    shift and go to state 64
    INTEGER         shift and go to state 65
    LOGICVALUE      shift and go to state 66
    ID              shift and go to state 54

    expresionOpcional              shift and go to state 262
    empty                          shift and go to state 245
    expresion                      shift and go to state 246
    termino                        shift and go to state 56
    factor                         shift and go to state 57

state 244

    (112) expresionCorcheteOR -> [ expresionOpcional . ]
    ]               shift and go to state 263


state 245

    (114) expresionOpcional -> empty .
    ]               reduce using rule 114 (expresionOpcional -> empty .)


state 246

    (115) expresionOpcional -> expresion .
    ]               reduce using rule 115 (expresionOpcional -> expresion .)


state 247

    (74) sentenciaPara -> FOR ID DOSPUNTOSIGUAL expresion DOBLEPUNTO . expresion DO sentenciaSecuencia END
    (51) expresion -> . termino terminoMasMenos
    (45) termino -> . factor
    (46) termino -> . termino simbolosProd factor
    (32) factor -> . SR ( expresion , expresion )
    (33) factor -> . LATCH ( expresion , expresion )
    (34) factor -> . REG ( expresionComaO expresion )
    (35) factor -> . MUX ( expresion , expresion : expresion , expresion , expresion , expresion )
    (36) factor -> . MUX ( expresion : expresion , expresion )
    (37) factor -> . ( expresion )
    (38) factor -> . ~ factor
    (39) factor -> . FLECHAARRIBA factor
    (40) factor -> . INTEGER
    (41) factor -> . LOGICVALUE
    (42) factor -> . ID selector
    SR              shift and go to state 58
    LATCH           shift and go to state 60
    REG             shift and go to state 61
    MUX             shift and go to state 62
    (               shift and go to state 59
    ~               shift and go to state 63
    FLECHAARRIBA    shift and go to state 64
    INTEGER         shift and go to state 65
    LOGICVALUE      shift and go to state 66
    ID              shift and go to state 54

    expresion                      shift and go to state 264
    termino                        shift and go to state 56
    factor                         shift and go to state 57

state 248

    (135) asignacionUnidad -> ID selector ( listaExpresiones ) .
    ;               reduce using rule 135 (asignacionUnidad -> ID selector ( listaExpresiones ) .)
    END             reduce using rule 135 (asignacionUnidad -> ID selector ( listaExpresiones ) .)
    ELSIF           reduce using rule 135 (asignacionUnidad -> ID selector ( listaExpresiones ) .)
    ELSE            reduce using rule 135 (asignacionUnidad -> ID selector ( listaExpresiones ) .)


state 249

    (58) asignacion -> ID selector DOSPUNTOSIGUAL condicion | . expresion
    (51) expresion -> . termino terminoMasMenos
    (45) termino -> . factor
    (46) termino -> . termino simbolosProd factor
    (32) factor -> . SR ( expresion , expresion )
    (33) factor -> . LATCH ( expresion , expresion )
    (34) factor -> . REG ( expresionComaO expresion )
    (35) factor -> . MUX ( expresion , expresion : expresion , expresion , expresion , expresion )
    (36) factor -> . MUX ( expresion : expresion , expresion )
    (37) factor -> . ( expresion )
    (38) factor -> . ~ factor
    (39) factor -> . FLECHAARRIBA factor
    (40) factor -> . INTEGER
    (41) factor -> . LOGICVALUE
    (42) factor -> . ID selector
    SR              shift and go to state 58
    LATCH           shift and go to state 60
    REG             shift and go to state 61
    MUX             shift and go to state 62
    (               shift and go to state 59
    ~               shift and go to state 63
    FLECHAARRIBA    shift and go to state 64
    INTEGER         shift and go to state 65
    LOGICVALUE      shift and go to state 66
    ID              shift and go to state 54

    expresion                      shift and go to state 265
    termino                        shift and go to state 56
    factor                         shift and go to state 57

state 250

    (67) sentenciaSi -> IF relacion THEN sentenciaSecuencia sentenciaSiSino . sentenciaSiEntonces END
    (72) sentenciaSiEntonces -> . empty
    (73) sentenciaSiEntonces -> . ELSE sentenciaSecuencia
    (136) empty -> .
    ELSE            shift and go to state 268
    END             reduce using rule 136 (empty -> .)

    sentenciaSiEntonces            shift and go to state 266
    empty                          shift and go to state 267

state 251

    (68) sentenciaSiSino -> empty .
    ELSE            reduce using rule 68 (sentenciaSiSino -> empty .)
    END             reduce using rule 68 (sentenciaSiSino -> empty .)


state 252

    (69) sentenciaSiSino -> sentenciaSiSinoR .
    (71) sentenciaSiSinoR -> sentenciaSiSinoR . ELSIF relacion THEN sentenciaSecuencia
    ELSE            reduce using rule 69 (sentenciaSiSino -> sentenciaSiSinoR .)
    END             reduce using rule 69 (sentenciaSiSino -> sentenciaSiSinoR .)
    ELSIF           shift and go to state 269


state 253

    (70) sentenciaSiSinoR -> ELSIF . relacion THEN sentenciaSecuencia
    (61) relacion -> . expresion MAYORIGUAL expresion
    (62) relacion -> . expresion > expresion
    (63) relacion -> . expresion MENORIGUAL expresion
    (64) relacion -> . expresion < expresion
    (65) relacion -> . expresion # expresion
    (66) relacion -> . expresion = expresion
    (51) expresion -> . termino terminoMasMenos
    (45) termino -> . factor
    (46) termino -> . termino simbolosProd factor
    (32) factor -> . SR ( expresion , expresion )
    (33) factor -> . LATCH ( expresion , expresion )
    (34) factor -> . REG ( expresionComaO expresion )
    (35) factor -> . MUX ( expresion , expresion : expresion , expresion , expresion , expresion )
    (36) factor -> . MUX ( expresion : expresion , expresion )
    (37) factor -> . ( expresion )
    (38) factor -> . ~ factor
    (39) factor -> . FLECHAARRIBA factor
    (40) factor -> . INTEGER
    (41) factor -> . LOGICVALUE
    (42) factor -> . ID selector
    SR              shift and go to state 58
    LATCH           shift and go to state 60
    REG             shift and go to state 61
    MUX             shift and go to state 62
    (               shift and go to state 59
    ~               shift and go to state 63
    FLECHAARRIBA    shift and go to state 64
    INTEGER         shift and go to state 65
    LOGICVALUE      shift and go to state 66
    ID              shift and go to state 54

    relacion                       shift and go to state 270
    expresion                      shift and go to state 177
    termino                        shift and go to state 56
    factor                         shift and go to state 57

state 254

    (35) factor -> MUX ( expresion , expresion : expresion , . expresion , expresion , expresion )
    (51) expresion -> . termino terminoMasMenos
    (45) termino -> . factor
    (46) termino -> . termino simbolosProd factor
    (32) factor -> . SR ( expresion , expresion )
    (33) factor -> . LATCH ( expresion , expresion )
    (34) factor -> . REG ( expresionComaO expresion )
    (35) factor -> . MUX ( expresion , expresion : expresion , expresion , expresion , expresion )
    (36) factor -> . MUX ( expresion : expresion , expresion )
    (37) factor -> . ( expresion )
    (38) factor -> . ~ factor
    (39) factor -> . FLECHAARRIBA factor
    (40) factor -> . INTEGER
    (41) factor -> . LOGICVALUE
    (42) factor -> . ID selector
    SR              shift and go to state 58
    LATCH           shift and go to state 60
    REG             shift and go to state 61
    MUX             shift and go to state 62
    (               shift and go to state 59
    ~               shift and go to state 63
    FLECHAARRIBA    shift and go to state 64
    INTEGER         shift and go to state 65
    LOGICVALUE      shift and go to state 66
    ID              shift and go to state 54

    expresion                      shift and go to state 271
    termino                        shift and go to state 56
    factor                         shift and go to state 57

state 255

    (36) factor -> MUX ( expresion : expresion , expresion ) .
    MOD             reduce using rule 36 (factor -> MUX ( expresion : expresion , expresion ) .)
    DIV             reduce using rule 36 (factor -> MUX ( expresion : expresion , expresion ) .)
    /               reduce using rule 36 (factor -> MUX ( expresion : expresion , expresion ) .)
    *               reduce using rule 36 (factor -> MUX ( expresion : expresion , expresion ) .)
    -               reduce using rule 36 (factor -> MUX ( expresion : expresion , expresion ) .)
    +               reduce using rule 36 (factor -> MUX ( expresion : expresion , expresion ) .)
    ;               reduce using rule 36 (factor -> MUX ( expresion : expresion , expresion ) .)
    )               reduce using rule 36 (factor -> MUX ( expresion : expresion , expresion ) .)
    ]               reduce using rule 36 (factor -> MUX ( expresion : expresion , expresion ) .)
    ,               reduce using rule 36 (factor -> MUX ( expresion : expresion , expresion ) .)
    :               reduce using rule 36 (factor -> MUX ( expresion : expresion , expresion ) .)
    MAYORIGUAL      reduce using rule 36 (factor -> MUX ( expresion : expresion , expresion ) .)
    >               reduce using rule 36 (factor -> MUX ( expresion : expresion , expresion ) .)
    MENORIGUAL      reduce using rule 36 (factor -> MUX ( expresion : expresion , expresion ) .)
    <               reduce using rule 36 (factor -> MUX ( expresion : expresion , expresion ) .)
    #               reduce using rule 36 (factor -> MUX ( expresion : expresion , expresion ) .)
    =               reduce using rule 36 (factor -> MUX ( expresion : expresion , expresion ) .)
    DOBLEPUNTO      reduce using rule 36 (factor -> MUX ( expresion : expresion , expresion ) .)
    END             reduce using rule 36 (factor -> MUX ( expresion : expresion , expresion ) .)
    ELSIF           reduce using rule 36 (factor -> MUX ( expresion : expresion , expresion ) .)
    ELSE            reduce using rule 36 (factor -> MUX ( expresion : expresion , expresion ) .)
    |               reduce using rule 36 (factor -> MUX ( expresion : expresion , expresion ) .)
    THEN            reduce using rule 36 (factor -> MUX ( expresion : expresion , expresion ) .)
    DO              reduce using rule 36 (factor -> MUX ( expresion : expresion , expresion ) .)


state 256

    (118) declaracionTipo -> TYPE ID simboloPor listaIdParentesis ; declaracionConstanteCONST tipoFormalIN tipoFormlINOUT declaracionVariableOUT declaracionVariableVAR sentenciaSecuenciaBEGIN END . ID
    ID              shift and go to state 272


state 257

    (134) tipoFormlBuslistaIdR -> tipoFormlBuslistaIdR listaId : tipoFormalBus . ;
    ;               shift and go to state 273


state 258

    (133) tipoFormlBuslistaIdR -> listaId : tipoFormalBus ; .
    ID              reduce using rule 133 (tipoFormlBuslistaIdR -> listaId : tipoFormalBus ; .)
    OUT             reduce using rule 133 (tipoFormlBuslistaIdR -> listaId : tipoFormalBus ; .)
    VAR             reduce using rule 133 (tipoFormlBuslistaIdR -> listaId : tipoFormalBus ; .)
    BEGIN           reduce using rule 133 (tipoFormlBuslistaIdR -> listaId : tipoFormalBus ; .)
    END             reduce using rule 133 (tipoFormlBuslistaIdR -> listaId : tipoFormalBus ; .)


state 259

    (116) tipoFormalBus -> expresionCorcheteO OC .
    ;               reduce using rule 116 (tipoFormalBus -> expresionCorcheteO OC .)


state 260

    (117) tipoFormalBus -> expresionCorcheteO TS .
    ;               reduce using rule 117 (tipoFormalBus -> expresionCorcheteO TS .)


state 261

    (128) tipoFormallistaIdR -> tipoFormallistaIdR listaId : tipoFormal ; .
    ID              reduce using rule 128 (tipoFormallistaIdR -> tipoFormallistaIdR listaId : tipoFormal ; .)
    INOUT           reduce using rule 128 (tipoFormallistaIdR -> tipoFormallistaIdR listaId : tipoFormal ; .)
    OUT             reduce using rule 128 (tipoFormallistaIdR -> tipoFormallistaIdR listaId : tipoFormal ; .)
    VAR             reduce using rule 128 (tipoFormallistaIdR -> tipoFormallistaIdR listaId : tipoFormal ; .)
    BEGIN           reduce using rule 128 (tipoFormallistaIdR -> tipoFormallistaIdR listaId : tipoFormal ; .)
    END             reduce using rule 128 (tipoFormallistaIdR -> tipoFormallistaIdR listaId : tipoFormal ; .)


state 262

    (113) expresionCorcheteOR -> expresionCorcheteOR [ expresionOpcional . ]
    ]               shift and go to state 274


state 263

    (112) expresionCorcheteOR -> [ expresionOpcional ] .
    [               reduce using rule 112 (expresionCorcheteOR -> [ expresionOpcional ] .)
    BIT             reduce using rule 112 (expresionCorcheteOR -> [ expresionOpcional ] .)
    OC              reduce using rule 112 (expresionCorcheteOR -> [ expresionOpcional ] .)
    TS              reduce using rule 112 (expresionCorcheteOR -> [ expresionOpcional ] .)


state 264

    (74) sentenciaPara -> FOR ID DOSPUNTOSIGUAL expresion DOBLEPUNTO expresion . DO sentenciaSecuencia END
    DO              shift and go to state 275


state 265

    (58) asignacion -> ID selector DOSPUNTOSIGUAL condicion | expresion .
    ;               reduce using rule 58 (asignacion -> ID selector DOSPUNTOSIGUAL condicion | expresion .)
    END             reduce using rule 58 (asignacion -> ID selector DOSPUNTOSIGUAL condicion | expresion .)
    ELSIF           reduce using rule 58 (asignacion -> ID selector DOSPUNTOSIGUAL condicion | expresion .)
    ELSE            reduce using rule 58 (asignacion -> ID selector DOSPUNTOSIGUAL condicion | expresion .)


state 266

    (67) sentenciaSi -> IF relacion THEN sentenciaSecuencia sentenciaSiSino sentenciaSiEntonces . END
    END             shift and go to state 276


state 267

    (72) sentenciaSiEntonces -> empty .
    END             reduce using rule 72 (sentenciaSiEntonces -> empty .)


state 268

    (73) sentenciaSiEntonces -> ELSE . sentenciaSecuencia
    (80) sentenciaSecuencia -> . sentencia sentenciaPuntoComa
    (75) sentencia -> . empty
    (76) sentencia -> . sentenciaPara
    (77) sentencia -> . sentenciaSi
    (78) sentencia -> . asignacionUnidad
    (79) sentencia -> . asignacion
    (136) empty -> .
    (74) sentenciaPara -> . FOR ID DOSPUNTOSIGUAL expresion DOBLEPUNTO expresion DO sentenciaSecuencia END
    (67) sentenciaSi -> . IF relacion THEN sentenciaSecuencia sentenciaSiSino sentenciaSiEntonces END
    (135) asignacionUnidad -> . ID selector ( listaExpresiones )
    (58) asignacion -> . ID selector DOSPUNTOSIGUAL condicion | expresion
    (59) asignacion -> . ID selector DOSPUNTOSIGUAL expresion
    ;               reduce using rule 136 (empty -> .)
    END             reduce using rule 136 (empty -> .)
    FOR             shift and go to state 146
    IF              shift and go to state 148
    ID              shift and go to state 147

    sentenciaSecuencia             shift and go to state 277
    sentencia                      shift and go to state 140
    empty                          shift and go to state 141
    sentenciaPara                  shift and go to state 142
    sentenciaSi                    shift and go to state 143
    asignacionUnidad               shift and go to state 144
    asignacion                     shift and go to state 145

state 269

    (71) sentenciaSiSinoR -> sentenciaSiSinoR ELSIF . relacion THEN sentenciaSecuencia
    (61) relacion -> . expresion MAYORIGUAL expresion
    (62) relacion -> . expresion > expresion
    (63) relacion -> . expresion MENORIGUAL expresion
    (64) relacion -> . expresion < expresion
    (65) relacion -> . expresion # expresion
    (66) relacion -> . expresion = expresion
    (51) expresion -> . termino terminoMasMenos
    (45) termino -> . factor
    (46) termino -> . termino simbolosProd factor
    (32) factor -> . SR ( expresion , expresion )
    (33) factor -> . LATCH ( expresion , expresion )
    (34) factor -> . REG ( expresionComaO expresion )
    (35) factor -> . MUX ( expresion , expresion : expresion , expresion , expresion , expresion )
    (36) factor -> . MUX ( expresion : expresion , expresion )
    (37) factor -> . ( expresion )
    (38) factor -> . ~ factor
    (39) factor -> . FLECHAARRIBA factor
    (40) factor -> . INTEGER
    (41) factor -> . LOGICVALUE
    (42) factor -> . ID selector
    SR              shift and go to state 58
    LATCH           shift and go to state 60
    REG             shift and go to state 61
    MUX             shift and go to state 62
    (               shift and go to state 59
    ~               shift and go to state 63
    FLECHAARRIBA    shift and go to state 64
    INTEGER         shift and go to state 65
    LOGICVALUE      shift and go to state 66
    ID              shift and go to state 54

    relacion                       shift and go to state 278
    expresion                      shift and go to state 177
    termino                        shift and go to state 56
    factor                         shift and go to state 57

state 270

    (70) sentenciaSiSinoR -> ELSIF relacion . THEN sentenciaSecuencia
    THEN            shift and go to state 279


state 271

    (35) factor -> MUX ( expresion , expresion : expresion , expresion . , expresion , expresion )
    ,               shift and go to state 280


state 272

    (118) declaracionTipo -> TYPE ID simboloPor listaIdParentesis ; declaracionConstanteCONST tipoFormalIN tipoFormlINOUT declaracionVariableOUT declaracionVariableVAR sentenciaSecuenciaBEGIN END ID .
    ;               reduce using rule 118 (declaracionTipo -> TYPE ID simboloPor listaIdParentesis ; declaracionConstanteCONST tipoFormalIN tipoFormlINOUT declaracionVariableOUT declaracionVariableVAR sentenciaSecuenciaBEGIN END ID .)


state 273

    (134) tipoFormlBuslistaIdR -> tipoFormlBuslistaIdR listaId : tipoFormalBus ; .
    ID              reduce using rule 134 (tipoFormlBuslistaIdR -> tipoFormlBuslistaIdR listaId : tipoFormalBus ; .)
    OUT             reduce using rule 134 (tipoFormlBuslistaIdR -> tipoFormlBuslistaIdR listaId : tipoFormalBus ; .)
    VAR             reduce using rule 134 (tipoFormlBuslistaIdR -> tipoFormlBuslistaIdR listaId : tipoFormalBus ; .)
    BEGIN           reduce using rule 134 (tipoFormlBuslistaIdR -> tipoFormlBuslistaIdR listaId : tipoFormalBus ; .)
    END             reduce using rule 134 (tipoFormlBuslistaIdR -> tipoFormlBuslistaIdR listaId : tipoFormalBus ; .)


state 274

    (113) expresionCorcheteOR -> expresionCorcheteOR [ expresionOpcional ] .
    [               reduce using rule 113 (expresionCorcheteOR -> expresionCorcheteOR [ expresionOpcional ] .)
    BIT             reduce using rule 113 (expresionCorcheteOR -> expresionCorcheteOR [ expresionOpcional ] .)
    OC              reduce using rule 113 (expresionCorcheteOR -> expresionCorcheteOR [ expresionOpcional ] .)
    TS              reduce using rule 113 (expresionCorcheteOR -> expresionCorcheteOR [ expresionOpcional ] .)


state 275

    (74) sentenciaPara -> FOR ID DOSPUNTOSIGUAL expresion DOBLEPUNTO expresion DO . sentenciaSecuencia END
    (80) sentenciaSecuencia -> . sentencia sentenciaPuntoComa
    (75) sentencia -> . empty
    (76) sentencia -> . sentenciaPara
    (77) sentencia -> . sentenciaSi
    (78) sentencia -> . asignacionUnidad
    (79) sentencia -> . asignacion
    (136) empty -> .
    (74) sentenciaPara -> . FOR ID DOSPUNTOSIGUAL expresion DOBLEPUNTO expresion DO sentenciaSecuencia END
    (67) sentenciaSi -> . IF relacion THEN sentenciaSecuencia sentenciaSiSino sentenciaSiEntonces END
    (135) asignacionUnidad -> . ID selector ( listaExpresiones )
    (58) asignacion -> . ID selector DOSPUNTOSIGUAL condicion | expresion
    (59) asignacion -> . ID selector DOSPUNTOSIGUAL expresion
    ;               reduce using rule 136 (empty -> .)
    END             reduce using rule 136 (empty -> .)
    FOR             shift and go to state 146
    IF              shift and go to state 148
    ID              shift and go to state 147

    sentenciaSecuencia             shift and go to state 281
    sentencia                      shift and go to state 140
    empty                          shift and go to state 141
    sentenciaPara                  shift and go to state 142
    sentenciaSi                    shift and go to state 143
    asignacionUnidad               shift and go to state 144
    asignacion                     shift and go to state 145

state 276

    (67) sentenciaSi -> IF relacion THEN sentenciaSecuencia sentenciaSiSino sentenciaSiEntonces END .
    ;               reduce using rule 67 (sentenciaSi -> IF relacion THEN sentenciaSecuencia sentenciaSiSino sentenciaSiEntonces END .)
    END             reduce using rule 67 (sentenciaSi -> IF relacion THEN sentenciaSecuencia sentenciaSiSino sentenciaSiEntonces END .)
    ELSIF           reduce using rule 67 (sentenciaSi -> IF relacion THEN sentenciaSecuencia sentenciaSiSino sentenciaSiEntonces END .)
    ELSE            reduce using rule 67 (sentenciaSi -> IF relacion THEN sentenciaSecuencia sentenciaSiSino sentenciaSiEntonces END .)


state 277

    (73) sentenciaSiEntonces -> ELSE sentenciaSecuencia .
    END             reduce using rule 73 (sentenciaSiEntonces -> ELSE sentenciaSecuencia .)


state 278

    (71) sentenciaSiSinoR -> sentenciaSiSinoR ELSIF relacion . THEN sentenciaSecuencia
    THEN            shift and go to state 282


state 279

    (70) sentenciaSiSinoR -> ELSIF relacion THEN . sentenciaSecuencia
    (80) sentenciaSecuencia -> . sentencia sentenciaPuntoComa
    (75) sentencia -> . empty
    (76) sentencia -> . sentenciaPara
    (77) sentencia -> . sentenciaSi
    (78) sentencia -> . asignacionUnidad
    (79) sentencia -> . asignacion
    (136) empty -> .
    (74) sentenciaPara -> . FOR ID DOSPUNTOSIGUAL expresion DOBLEPUNTO expresion DO sentenciaSecuencia END
    (67) sentenciaSi -> . IF relacion THEN sentenciaSecuencia sentenciaSiSino sentenciaSiEntonces END
    (135) asignacionUnidad -> . ID selector ( listaExpresiones )
    (58) asignacion -> . ID selector DOSPUNTOSIGUAL condicion | expresion
    (59) asignacion -> . ID selector DOSPUNTOSIGUAL expresion
    ;               reduce using rule 136 (empty -> .)
    ELSIF           reduce using rule 136 (empty -> .)
    ELSE            reduce using rule 136 (empty -> .)
    END             reduce using rule 136 (empty -> .)
    FOR             shift and go to state 146
    IF              shift and go to state 148
    ID              shift and go to state 147

    sentenciaSecuencia             shift and go to state 283
    sentencia                      shift and go to state 140
    empty                          shift and go to state 141
    sentenciaPara                  shift and go to state 142
    sentenciaSi                    shift and go to state 143
    asignacionUnidad               shift and go to state 144
    asignacion                     shift and go to state 145

state 280

    (35) factor -> MUX ( expresion , expresion : expresion , expresion , . expresion , expresion )
    (51) expresion -> . termino terminoMasMenos
    (45) termino -> . factor
    (46) termino -> . termino simbolosProd factor
    (32) factor -> . SR ( expresion , expresion )
    (33) factor -> . LATCH ( expresion , expresion )
    (34) factor -> . REG ( expresionComaO expresion )
    (35) factor -> . MUX ( expresion , expresion : expresion , expresion , expresion , expresion )
    (36) factor -> . MUX ( expresion : expresion , expresion )
    (37) factor -> . ( expresion )
    (38) factor -> . ~ factor
    (39) factor -> . FLECHAARRIBA factor
    (40) factor -> . INTEGER
    (41) factor -> . LOGICVALUE
    (42) factor -> . ID selector
    SR              shift and go to state 58
    LATCH           shift and go to state 60
    REG             shift and go to state 61
    MUX             shift and go to state 62
    (               shift and go to state 59
    ~               shift and go to state 63
    FLECHAARRIBA    shift and go to state 64
    INTEGER         shift and go to state 65
    LOGICVALUE      shift and go to state 66
    ID              shift and go to state 54

    expresion                      shift and go to state 284
    termino                        shift and go to state 56
    factor                         shift and go to state 57

state 281

    (74) sentenciaPara -> FOR ID DOSPUNTOSIGUAL expresion DOBLEPUNTO expresion DO sentenciaSecuencia . END
    END             shift and go to state 285


state 282

    (71) sentenciaSiSinoR -> sentenciaSiSinoR ELSIF relacion THEN . sentenciaSecuencia
    (80) sentenciaSecuencia -> . sentencia sentenciaPuntoComa
    (75) sentencia -> . empty
    (76) sentencia -> . sentenciaPara
    (77) sentencia -> . sentenciaSi
    (78) sentencia -> . asignacionUnidad
    (79) sentencia -> . asignacion
    (136) empty -> .
    (74) sentenciaPara -> . FOR ID DOSPUNTOSIGUAL expresion DOBLEPUNTO expresion DO sentenciaSecuencia END
    (67) sentenciaSi -> . IF relacion THEN sentenciaSecuencia sentenciaSiSino sentenciaSiEntonces END
    (135) asignacionUnidad -> . ID selector ( listaExpresiones )
    (58) asignacion -> . ID selector DOSPUNTOSIGUAL condicion | expresion
    (59) asignacion -> . ID selector DOSPUNTOSIGUAL expresion
    ;               reduce using rule 136 (empty -> .)
    ELSIF           reduce using rule 136 (empty -> .)
    ELSE            reduce using rule 136 (empty -> .)
    END             reduce using rule 136 (empty -> .)
    FOR             shift and go to state 146
    IF              shift and go to state 148
    ID              shift and go to state 147

    sentenciaSecuencia             shift and go to state 286
    sentencia                      shift and go to state 140
    empty                          shift and go to state 141
    sentenciaPara                  shift and go to state 142
    sentenciaSi                    shift and go to state 143
    asignacionUnidad               shift and go to state 144
    asignacion                     shift and go to state 145

state 283

    (70) sentenciaSiSinoR -> ELSIF relacion THEN sentenciaSecuencia .
    ELSIF           reduce using rule 70 (sentenciaSiSinoR -> ELSIF relacion THEN sentenciaSecuencia .)
    ELSE            reduce using rule 70 (sentenciaSiSinoR -> ELSIF relacion THEN sentenciaSecuencia .)
    END             reduce using rule 70 (sentenciaSiSinoR -> ELSIF relacion THEN sentenciaSecuencia .)


state 284

    (35) factor -> MUX ( expresion , expresion : expresion , expresion , expresion . , expresion )
    ,               shift and go to state 287


state 285

    (74) sentenciaPara -> FOR ID DOSPUNTOSIGUAL expresion DOBLEPUNTO expresion DO sentenciaSecuencia END .
    ;               reduce using rule 74 (sentenciaPara -> FOR ID DOSPUNTOSIGUAL expresion DOBLEPUNTO expresion DO sentenciaSecuencia END .)
    END             reduce using rule 74 (sentenciaPara -> FOR ID DOSPUNTOSIGUAL expresion DOBLEPUNTO expresion DO sentenciaSecuencia END .)
    ELSIF           reduce using rule 74 (sentenciaPara -> FOR ID DOSPUNTOSIGUAL expresion DOBLEPUNTO expresion DO sentenciaSecuencia END .)
    ELSE            reduce using rule 74 (sentenciaPara -> FOR ID DOSPUNTOSIGUAL expresion DOBLEPUNTO expresion DO sentenciaSecuencia END .)


state 286

    (71) sentenciaSiSinoR -> sentenciaSiSinoR ELSIF relacion THEN sentenciaSecuencia .
    ELSIF           reduce using rule 71 (sentenciaSiSinoR -> sentenciaSiSinoR ELSIF relacion THEN sentenciaSecuencia .)
    ELSE            reduce using rule 71 (sentenciaSiSinoR -> sentenciaSiSinoR ELSIF relacion THEN sentenciaSecuencia .)
    END             reduce using rule 71 (sentenciaSiSinoR -> sentenciaSiSinoR ELSIF relacion THEN sentenciaSecuencia .)


state 287

    (35) factor -> MUX ( expresion , expresion : expresion , expresion , expresion , . expresion )
    (51) expresion -> . termino terminoMasMenos
    (45) termino -> . factor
    (46) termino -> . termino simbolosProd factor
    (32) factor -> . SR ( expresion , expresion )
    (33) factor -> . LATCH ( expresion , expresion )
    (34) factor -> . REG ( expresionComaO expresion )
    (35) factor -> . MUX ( expresion , expresion : expresion , expresion , expresion , expresion )
    (36) factor -> . MUX ( expresion : expresion , expresion )
    (37) factor -> . ( expresion )
    (38) factor -> . ~ factor
    (39) factor -> . FLECHAARRIBA factor
    (40) factor -> . INTEGER
    (41) factor -> . LOGICVALUE
    (42) factor -> . ID selector
    SR              shift and go to state 58
    LATCH           shift and go to state 60
    REG             shift and go to state 61
    MUX             shift and go to state 62
    (               shift and go to state 59
    ~               shift and go to state 63
    FLECHAARRIBA    shift and go to state 64
    INTEGER         shift and go to state 65
    LOGICVALUE      shift and go to state 66
    ID              shift and go to state 54

    expresion                      shift and go to state 288
    termino                        shift and go to state 56
    factor                         shift and go to state 57

state 288

    (35) factor -> MUX ( expresion , expresion : expresion , expresion , expresion , expresion . )
    )               shift and go to state 289


state 289

    (35) factor -> MUX ( expresion , expresion : expresion , expresion , expresion , expresion ) .
    MOD             reduce using rule 35 (factor -> MUX ( expresion , expresion : expresion , expresion , expresion , expresion ) .)
    DIV             reduce using rule 35 (factor -> MUX ( expresion , expresion : expresion , expresion , expresion , expresion ) .)
    /               reduce using rule 35 (factor -> MUX ( expresion , expresion : expresion , expresion , expresion , expresion ) .)
    *               reduce using rule 35 (factor -> MUX ( expresion , expresion : expresion , expresion , expresion , expresion ) .)
    -               reduce using rule 35 (factor -> MUX ( expresion , expresion : expresion , expresion , expresion , expresion ) .)
    +               reduce using rule 35 (factor -> MUX ( expresion , expresion : expresion , expresion , expresion , expresion ) .)
    ;               reduce using rule 35 (factor -> MUX ( expresion , expresion : expresion , expresion , expresion , expresion ) .)
    )               reduce using rule 35 (factor -> MUX ( expresion , expresion : expresion , expresion , expresion , expresion ) .)
    ]               reduce using rule 35 (factor -> MUX ( expresion , expresion : expresion , expresion , expresion , expresion ) .)
    ,               reduce using rule 35 (factor -> MUX ( expresion , expresion : expresion , expresion , expresion , expresion ) .)
    :               reduce using rule 35 (factor -> MUX ( expresion , expresion : expresion , expresion , expresion , expresion ) .)
    MAYORIGUAL      reduce using rule 35 (factor -> MUX ( expresion , expresion : expresion , expresion , expresion , expresion ) .)
    >               reduce using rule 35 (factor -> MUX ( expresion , expresion : expresion , expresion , expresion , expresion ) .)
    MENORIGUAL      reduce using rule 35 (factor -> MUX ( expresion , expresion : expresion , expresion , expresion , expresion ) .)
    <               reduce using rule 35 (factor -> MUX ( expresion , expresion : expresion , expresion , expresion , expresion ) .)
    #               reduce using rule 35 (factor -> MUX ( expresion , expresion : expresion , expresion , expresion , expresion ) .)
    =               reduce using rule 35 (factor -> MUX ( expresion , expresion : expresion , expresion , expresion , expresion ) .)
    DOBLEPUNTO      reduce using rule 35 (factor -> MUX ( expresion , expresion : expresion , expresion , expresion , expresion ) .)
    END             reduce using rule 35 (factor -> MUX ( expresion , expresion : expresion , expresion , expresion , expresion ) .)
    ELSIF           reduce using rule 35 (factor -> MUX ( expresion , expresion : expresion , expresion , expresion , expresion ) .)
    ELSE            reduce using rule 35 (factor -> MUX ( expresion , expresion : expresion , expresion , expresion , expresion ) .)
    |               reduce using rule 35 (factor -> MUX ( expresion , expresion : expresion , expresion , expresion , expresion ) .)
    THEN            reduce using rule 35 (factor -> MUX ( expresion , expresion : expresion , expresion , expresion , expresion ) .)
    DO              reduce using rule 35 (factor -> MUX ( expresion , expresion : expresion , expresion , expresion , expresion ) .)


Conflicts:

shift/reduce conflict for SR in state 101 resolved as shift
shift/reduce conflict for LATCH in state 101 resolved as shift
shift/reduce conflict for REG in state 101 resolved as shift
shift/reduce conflict for MUX in state 101 resolved as shift
shift/reduce conflict for ( in state 101 resolved as shift
shift/reduce conflict for ~ in state 101 resolved as shift
shift/reduce conflict for FLECHAARRIBA in state 101 resolved as shift
shift/reduce conflict for INTEGER in state 101 resolved as shift
shift/reduce conflict for LOGICVALUE in state 101 resolved as shift
shift/reduce conflict for ID in state 101 resolved as shift